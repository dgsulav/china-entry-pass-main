{"version":3,"file":"static/js/1354.850ea95a.chunk.js","mappings":"+LAoDA,UA/CyB,SAAC,GAAiB,EAAfA,SAAgB,IACpCC,GAAQC,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAAWA,EAAMC,OAAOH,SA2ClD,OA1CAI,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAcL,EAAMM,KAAI,SAACC,GAC7B,IAAQC,EAAwDD,EAAxDC,QAASC,EAA+CF,EAA/CE,KAAMC,EAAyCH,EAAzCG,SAAUC,EAA+BJ,EAA/BI,mBAAoBC,EAAWL,EAAXK,OACrD,MAAO,CACLJ,QAAAA,EACAC,KAAAA,EACAC,SAAAA,EACAC,mBAAAA,EACAC,OAAM,OAAEA,QAAF,IAAEA,OAAF,EAAEA,EAAQH,SAiBdI,EAAKC,IAAAA,MAAAA,cAVK,CACd,CACEN,QAAS,cACTC,KAAM,OACNC,SAAU,WACVC,mBAAoB,qBACpBC,OAAQ,WAIiC,CAC3CG,OAAQ,CAAC,UAAW,OAAQ,WAAY,qBAAsB,UAC9DC,YAAY,EACZC,OAAQ,IAGVH,IAAAA,MAAAA,eAA0BD,EAAIR,EAAa,CACzCU,OAAQ,CAAC,UAAW,OAAQ,WAAY,qBAAsB,UAC9DC,YAAY,EACZC,QAAS,IAEX,IAAMC,EAAK,CAAEC,OAAQ,CAAEC,KAAMP,GAAMQ,WAAY,CAAC,SAC1CC,EAAcR,IAAAA,MAAWI,EAAI,CAAEK,SAAU,OAAQC,KAAM,UACvDJ,EAAO,IAAIK,KAAK,CAACH,GAAc,CAAEE,KA1BrC,oFA2BFE,IAAAA,OAAiBN,EAAM,sBACtB,CAACpB,KAEG,0B","sources":["Component/ReportModal/NewCard/ExcelReportModal.js"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport FileSaver from \"file-saver\";\nimport XLSX from \"xlsx\";\n\nconst ExcelReportModal = ({ formData }) => {\n  const cards = useSelector((state) => state.report.cards);\n  useEffect(() => {\n    const updatedData = cards.map((record) => {\n      const { card_no, name, validity, citizenship_number, branch } = record;\n      return {\n        card_no,\n        name,\n        validity,\n        citizenship_number,\n        branch: branch?.name,\n      };\n    });\n    const fileType =\n      \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\";\n    const fileExtension = \".xlsx\";\n\n    const Heading = [\n      {\n        card_no: \"Card Number\",\n        name: \"Name\",\n        validity: \"Validity\",\n        citizenship_number: \"Citizenship Number\",\n        branch: \"Branch\",\n      },\n    ];\n\n    const ws = XLSX.utils.json_to_sheet(Heading, {\n      header: [\"card_no\", \"name\", \"validity\", \"citizenship_number\", \"branch\"],\n      skipHeader: true,\n      origin: 0, //ok\n    });\n    // ws[\"!cols\"] = wscols;\n    XLSX.utils.sheet_add_json(ws, updatedData, {\n      header: [\"card_no\", \"name\", \"validity\", \"citizenship_number\", \"branch\"],\n      skipHeader: true,\n      origin: -1, //ok\n    });\n    const wb = { Sheets: { data: ws }, SheetNames: [\"data\"] };\n    const excelBuffer = XLSX.write(wb, { bookType: \"xlsx\", type: \"array\" });\n    const data = new Blob([excelBuffer], { type: fileType });\n    FileSaver.saveAs(data, \"debit card \" + fileExtension);\n  }, [cards]);\n\n  return <></>;\n};\n\nexport default ExcelReportModal;\n"],"names":["formData","cards","useSelector","state","report","useEffect","updatedData","map","record","card_no","name","validity","citizenship_number","branch","ws","XLSX","header","skipHeader","origin","wb","Sheets","data","SheetNames","excelBuffer","bookType","type","Blob","FileSaver"],"sourceRoot":""}