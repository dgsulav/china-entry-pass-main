{"version":3,"file":"static/js/5950.ba7d7b29.chunk.js","mappings":"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","sources":["Component/Alert/index.js","Component/Button/Button.js","Component/Modal/ModalHeader.js","Component/Modal/index.js","Component/Pagination/DisplayEntries.js","Component/Pagination/index.js","Component/PaginationBlock/index.js","Component/Skeleton/ListingSkeleton.js","Component/Spinner/Spinner.js","Component/TextError/TextError.js","Component/Thumb/index.js","Component/Tooltip/Tooltip.js","Redux/Card/actions.js","Redux/Card/api.js","Redux/Card/thunk.js","Redux/VerifyCard/api.js","Redux/VerifyCard/actions.js","Redux/VerifyCard/thunk.js","utils/axios.js","utils/defaultLimit.js"],"sourcesContent":["import { toast } from \"react-toastify\";\ntoast.configure();\n//toast for error\nexport const errorFunction = (error) => {\n  const errorMessage = typeof error === \"string\" ? error : \"error\";\n  toast.error(errorMessage, {\n    position: \"top-right\",\n    autoClose: 2500,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n    progress: undefined,\n  });\n};\n\n//toast for success\nexport const successFunction = (data) => {\n  const successMessage = typeof data === \"string\" ? data : \"success\";\n  toast.success(successMessage, {\n    position: \"top-right\",\n    autoClose: 2500,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n    progress: undefined,\n  });\n};\n//toast for info\nexport const infoFunction = (data) => {\n  const infoMessage = typeof data === \"string\" ? data : \"success\";\n  toast.info(infoMessage, {\n    position: \"top-right\",\n    autoClose: 2500,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n    progress: undefined,\n  });\n};\n","import React from \"react\";\nimport Spinner from \"../Spinner/Spinner\";\nimport Tooltip from \"../Tooltip/Tooltip\";\n\nconst Button = ({\n  type,\n  className,\n  disabled,\n  title,\n  loading,\n  content,\n  color,\n  onClick,\n}) => {\n  return (\n    <Tooltip content={content}>\n      <button\n        onClick={onClick}\n        type={type}\n        className={className}\n        disabled={disabled}\n      >\n        {loading ? <Spinner color={color} /> : title}\n      </button>\n    </Tooltip>\n  );\n};\nexport default Button;\n","// import \"./Modal.css\";\nimport { type } from \"@testing-library/user-event/dist/type\";\nimport React from \"react\";\nimport { FaTimes } from \"react-icons/fa\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nconst ModalHeader = ({\n  header,\n  setShowModal,\n  types,\n  edit,\n  clearAction,\n  setDeviceId,\n  setRightFingerPrint,\n  setLeftFingerPrint,\n  setStartScan,\n  setStartScanRight,\n  setStartScanLeft,\n  ...props\n}) => {\n  const dispatch = useDispatch();\n  const handleClose = () => {\n    clearAction && dispatch(clearAction());\n    setShowModal(false);\n    if (types === \"card\" || types === \"renew\") {\n      // setDeviceId(null);\n      // setRightFingerPrint(null);\n      // setLeftFingerPrint(null);\n      // setStartScan(false);\n      // setStartScanRight(false);\n      // setStartScanLeft(false);\n    }\n  };\n  return (\n    <>\n      <div className=\"modal-header\">\n        <h5 className=\"modal-title\" id=\"myExtraLargeModalLabel\">\n          {header}\n        </h5>\n        <div>\n          <FaTimes onClick={handleClose} style={{cursor:\"pointer\"}} />\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default ModalHeader;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport ModalHeader from \"./ModalHeader\";\nimport { useDispatch } from \"react-redux\";\n\nconst Modal = ({\n  onModalClick = null,\n  children,\n  size,\n  id,\n  title,\n  header,\n  showModal,\n  setShowModal,\n  edit,\n  clearAction,\n  ...props\n}) => {\n  const ref = useRef();\n  const dispatch = useDispatch();\n\n  const modalClass = showModal ? \"modal display-block\" : \"modal display-none\";\n  const closeModal = () => setShowModal(false);\n\n  useEffect(() => {\n    const handleKeyDown = (event) => {\n      if (event.key === \"Escape\") {\n        closeModal();\n      }\n    };\n\n    document.addEventListener(\"keydown\", handleKeyDown);\n\n    return () => {\n      document.removeEventListener(\"keydown\", handleKeyDown);\n    };\n  }, []);\n\n  return (\n    <div\n      className={modalClass}\n      tabIndex=\"-1\"\n      role=\"dialog\"\n      aria-labelledby=\"exampleModalCenterTitle\"\n      aria-hidden=\"true\"\n      id={id}\n      onClick={onModalClick}\n    >\n      <div className={`modal-dialog modal-dialog-centered ${size ? size : \"\"}`}>\n        <div className=\"modal-content\">\n          <ModalHeader\n            header={header}\n            setShowModal={setShowModal}\n            edit={edit}\n            clearAction={clearAction}\n            {...props}\n          />\n          <div\n            className=\"modal-body\"\n            style={{ background: \"#f4f7fa\" }}\n            ref={ref}\n          >\n            {children}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Modal;\n\n{\n  /* <div className={modalClass} tabIndex=\"-1\">\n<div className=\"modal-dialog modal-md\">\n  <div className=\"modal-content content\">\n    <div className=\"modal-header\">\n      <h5 className=\"modal-title\" id=\"exampleModalLabel\">\n        Take Signature with Siganture Pad\n      </h5>\n      <button\n        type=\"button\"\n        className=\"btn-close\"\n        data-dismiss=\"modal\"\n        aria-label=\"Close\"\n        onClick={handleClose}\n      >\n        <FaTimes />\n      </button>\n    </div> */\n}\n\n{\n  /* <div className=\"modal-body\">\n      <div className=\"row justify-content-center mt-3\">\n        <div className=\"col-12\">\n          <div className=\"registration-process \">\n            <Formik\n              initialValues={initialState}\n              validationSchema={validationSchema}\n              onSubmit={onSubmit}\n            >\n              {(formik) => {\n                return (\n                  <Form autoComplete=\"off\">\n                    <div className=\"form-group row mb-2 justify-content-center\">\n                      <div className=\"col-8\">\n                        <label\n                          htmlFor=\"signature\"\n                          className=\"fw-bold float-start\"\n                        >\n                          Signing process view\n                          <strong className=\"text-danger ml-1\">*</strong>\n                        </label>\n                        <Field\n                          type=\"text\"\n                          name=\"signature\"\n                          className=\"form-control \"\n                          placeholder=\"Write your Signature here\"\n                        />\n                        <ErrorMessage\n                          name=\"signature\"\n                          component={TextError}\n                        />\n                      </div>\n                    </div>\n\n                    <div className=\"form-group text-center\">\n                      <Button\n                        type={\"btn\"}\n                        className={\"btn btn-primary\"}\n                        // loading={loading}\n                        // disabled={lock || !formik.dirty}\n                        title={\"Take Signature\"}\n                        content={\"Take Signature\"}\n                      />\n                    </div>\n                  </Form>\n                );\n              }}\n            </Formik>\n          </div>\n        </div>\n      </div>\n    </div> */\n}\n{\n  /* </div>\n</div>{\" \"}\n</div> */\n}\n","import React from \"react\";\n\nconst DisplayEntries = ({ offset, limit, count }) => {\n  return(\n    <React.Fragment>\n      <p>\n        Showing {offset} to{\" \"}\n        {limit > count ? count : limit === 0 ? count : limit} of {count} entries\n      </p>  \n    </React.Fragment> \n  );\n};\n\nexport default React.memo(DisplayEntries);","import React from \"react\";\nconst Pagination = ({\n  postsPerPage,\n  totalPosts,\n  paginate,\n  handleClick,\n  currentPage,\n  maxPageNumberLimit,\n  minPageNumberLimit,\n}) => {\n  const pageNumbers = [];\n  if (postsPerPage > 0) {\n    for (let i = 1; i <= Math.ceil(totalPosts / postsPerPage); i++) {\n      pageNumbers.push(i);\n    }\n  }\n  let pageIncrementBtn = null;\n  if (pageNumbers.length > maxPageNumberLimit) {\n    pageIncrementBtn = (\n      <button className=\"page-link\" onClick={() => handleClick(\"next\")}>\n        &hellip;\n      </button>\n    );\n  }\n\n  let pageDecrementBtn = null;\n  if (minPageNumberLimit >= 1) {\n    pageDecrementBtn = (\n      <button className=\"page-link\" onClick={() => handleClick(\"previous\")}>\n        &hellip;\n      </button>\n    );\n  }\n  return (\n    <>\n      <ul className=\"pagination pagination-sm justify-content-end\">\n        <li className=\"page-item \">\n          <button\n            className=\"page-link\"\n            onClick={() => handleClick(\"previous\")}\n            disabled={currentPage === pageNumbers[0] ? true : false}\n          >\n            &laquo;\n          </button>\n        </li>\n        {/* {pageDecrementBtn} */}\n        {pageNumbers.map((number, i) => {\n          if (number < maxPageNumberLimit + 1 && number > minPageNumberLimit) {\n            return (\n              <li className=\"page-item\" key={number}>\n                <button\n                  onClick={() => paginate(number)}\n                  className={`page-link ${\n                    i + 1 === currentPage ? \"active\" : null\n                  }`}\n                >\n                  {number}\n                </button>\n              </li>\n            );\n          } else {\n            return null;\n          }\n        })}\n        {/* {pageIncrementBtn} */}\n        <li className=\"page-item\">\n          <button\n            className=\"page-link\"\n            onClick={() => handleClick(\"next\")}\n            disabled={\n              currentPage === pageNumbers[pageNumbers.length - 1] ? true : false\n            }\n          >\n            &raquo;\n          </button>\n        </li>\n      </ul>\n    </>\n  );\n};\n\nexport default React.memo(Pagination);\n","import React from \"react\";\nimport DisplayEntries from \"../Pagination/DisplayEntries\";\nimport Pagination from \"../Pagination\";\nconst index = ({\n  currentPage,\n  postsPerPage,\n  count,\n  paginate,\n  handleClick,\n  setCurrentPage,\n  minPageNumberLimit,\n  maxPageNumberLimit,\n}) => {\n  return (\n    <>\n      <div className=\"row\">\n        <div className=\"col-6\">\n          <DisplayEntries\n            offset={1 + (currentPage - 1) * postsPerPage}\n            limit={postsPerPage * currentPage}\n            count={count}\n          />\n        </div>\n        {postsPerPage < count && (\n          <div className=\"col-6 text-right\">\n            <Pagination\n              postsPerPage={postsPerPage}\n              totalPosts={count}\n              paginate={paginate}\n              handleClick={handleClick}\n              currentPage={currentPage}\n              setCurrentPage={setCurrentPage}\n              minPageNumberLimit={minPageNumberLimit}\n              maxPageNumberLimit={maxPageNumberLimit}\n            />\n          </div>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default index;\n","import React from \"react\";\nimport Skeleton from \"react-loading-skeleton\";\nconst ListingSkeleton = () => {\n  return (\n    <div className=\" w-100 \">\n      <div className=\"row \">\n        <div className=\"col-6 d-flex \">\n          <Skeleton width={200} height={25} />\n        </div>\n        <div className=\"col-6 d-flex justify-content-end\">\n          <Skeleton width={80} height={30} />\n        </div>\n      </div>\n\n      <div className=\"mt-2\">\n        <Skeleton height={40} />\n        <Skeleton count={10} height={25} />\n      </div>\n      <div className=\"row d-flex mt-2\">\n        <div className=\"col-6\">\n          <Skeleton width={220} height={20} />\n        </div>\n        <div className=\"col-6 d-flex justify-content-end\">\n          <Skeleton width={200} height={30} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ListingSkeleton;\n","import React from \"react\";\nimport spinner from \"../../assets/spinner.gif\";\nconst Spinner = () => {\n  return (\n    <img\n      src={spinner}\n      alt=\"spinner\"\n      // color={color}\n      height=\"50px\"\n    />\n  );\n};\n\nexport default Spinner;\n","import React from \"react\";\nimport \"./TextError.css\";\nconst TextError = (props) => {\n  return <div className=\"error\">{props.children}</div>;\n};\n\nexport default TextError;\n","import React from \"react\";\n\nconst Thumb = ({ thumb, height, width, onClick }) => {\n  return (\n    <img\n      src={thumb}\n      alt={thumb}\n      className=\"img-thumbnail mt-1\"\n      height={height ? height : 70}\n      width={width ? width : 70}\n      onClick={onClick}\n    />\n  );\n};\n\nexport default Thumb;\n","import React from \"react\";\nimport Tippy from \"@tippyjs/react\";\nconst Tooltip = ({ content, children }) => {\n  return <Tippy content={content}>{children}</Tippy>;\n};\n\nexport default Tooltip;","import { cardConstants } from \"./constants\";\n// actions\nexport const loadingAction = () => ({\n  type: cardConstants.LOADING_CARD,\n});\nexport const loadingCreate = () => ({\n  type: cardConstants.LOADING_CREATE,\n});\nexport const loadingUpdatedAction = () => ({\n  type: cardConstants.LOADING_UPDATED,\n});\nexport const closeEditCardSuccessAction = () => ({\n  type: cardConstants.CLOSE_EDIT_CARD_SUCCESS,\n});\nexport const clearEditCardSuccessAction = () => ({\n  type: cardConstants.CLEAR_EDIT_CARD_SUCCESS,\n});\nexport const getCardRequestSuccessAction = (data) => ({\n  type: cardConstants.GET_CARD_SUCCESS,\n  payload: data,\n});\nexport const getCardRequestFailAction = (error) => ({\n  type: cardConstants.GET_CARD_FAIL,\n  payload: error,\n});\n\nexport const createCardSuccessAction = (data) => ({\n  type: cardConstants.CREATE_CARD_SUCCESS,\n  payload: data,\n});\n\nexport const createCardFailAction = (error) => ({\n  type: cardConstants.CREATE_CARD_FAIL,\n  payload: error,\n});\nexport const editCardSuccessAction = (data) => ({\n  type: cardConstants.EDIT_CARD_SUCCESS,\n  payload: data,\n});\n\nexport const editCardFailAction = (error) => ({\n  type: cardConstants.EDIT_CARD_FAIL,\n  payload: error,\n});\n\nexport const deleteCardSuccessAction = (data) => ({\n  type: cardConstants.CARD_DELETED_SUCCESS,\n  payload: data,\n});\n\nexport const deleteCardFailAction = (error) => ({\n  type: cardConstants.CARD_DELETED_FAIL,\n  payload: error,\n});\n\nexport const updatedCardSuccessAction = (data) => ({\n  type: cardConstants.CARD_UPDATE_SUCCESS,\n  payload: data,\n});\n\nexport const updatedCardFailAction = (error) => ({\n  type: cardConstants.CARD_UPDATE_FAIL,\n  payload: error,\n});\n\nexport const cardClearDataAction = (error) => ({\n  type: cardConstants.CLEAR_DATA,\n});\n\nexport const loadingReject = (error) => ({\n  type: cardConstants.LOADING_REJECT,\n});\n\n","import axiosInstance from \"../../utils/axios\";\n\nconst cardURL = \"api/v1/application/\";\n//obtaining the paginated data\nexport const getCardRequest = (postsPerPage) =>\n  axiosInstance.get(\n    `api/v1/application/entry-pass-list?offset=0&limit=${postsPerPage}&ordering=-id&status=pending&application_type=new`\n  );\n\n//obtaining all data\nexport const getAllCardRequest = () =>\n  axiosInstance.get(\n    `api/v1/application/entry-pass-list?ordering=-id&status=pending&application_type=new`\n  );\n\n//obtaining the previous page data from paginated data\nexport const getPrevious = (previous) => axiosInstance.get(previous);\n\n//obtaining the next page data from paginated data\nexport const getNext = (next) => axiosInstance.get(next);\n\n//obtaining the particular page data from paginated data\nexport const getParticularPage = (number, postsPerPage) =>\n  axiosInstance.get(\n    `api/v1/application/entry-pass-list?offset=${\n      (number - 1) * postsPerPage\n    }&limit=${postsPerPage}&ordering=-id&status=pending&application_type=new`\n  );\n\n//creating function\nexport const createCard = (body) =>\n  axiosInstance.post(`api/v1/application/entry-pass`, body, {\n    \"Content-Type\": \"multipart/form-data\",\n  });\nexport const editCardRequest = (id) =>\n  axiosInstance.get(`api/v1/application/entry-pass/${id}`);\n\n//update function\nexport const updateCard = (id, body) =>\n  axiosInstance.patch(`api/v1/application/entry-pass/${id}`, body, {\n    \"Content-Type\": \"multipart/form-data\",\n  });\nexport const verifyCard = (id, body) =>\n  axiosInstance.patch(`api/v1/application/entry-pass/verify/${id}`, body, {\n    \"Content-Type\": \"multipart/form-data\",\n  });\nexport const rejectEntryPass = (id, body) =>\n  axiosInstance.patch(`api/v1/application/entry-pass/reject/${id}`, body, {\n    \"Content-Type\": \"multipart/form-data\",\n  });\n\n//searching function\nexport const handleSearch = (search, postsPerPage) =>\n  axiosInstance.get(\n    `api/v1/application/entry-pass-list?offset=0&limit=${postsPerPage}&search=${search}&status=pending&application_type=new`\n  );\n\n\n","import * as API from \"./api\";\nimport * as actions from \"./actions\";\nimport { errorFunction, successFunction } from \"../../Component/Alert\";\nimport { getParticularPage as getParticularPageVerify } from \"../VerifyCard/thunk\";\n//get  Bank\nexport const getCardRequest = (postsPerPage) => async (dispatch) => {\n  try {\n    dispatch(actions.loadingAction());\n    const { data } = await API.getCardRequest(postsPerPage);\n    dispatch(actions.getCardRequestSuccessAction(data));\n  } catch (error) {\n    dispatch(actions.getCardRequestFailAction(error));\n    errorFunction(error);\n  }\n};\n\n// get all bank\nexport const getAllCardRequest = () => async (dispatch) => {\n  try {\n    dispatch(actions.loadingAction());\n    const { data } = await API.getAllCardRequest();\n    dispatch(actions.getCardRequestSuccessAction(data));\n  } catch (error) {\n    dispatch(actions.getCardRequestFailAction(error));\n    errorFunction(error);\n  }\n};\n//get previous  page\nexport const getPrevious = (previous) => async (dispatch) => {\n  try {\n    dispatch(actions.loadingAction());\n    const { data } = await API.getPrevious(previous);\n    dispatch(actions.getCardRequestSuccessAction(data));\n  } catch (error) {\n    dispatch(actions.getCardRequestFailAction(error));\n    errorFunction(error);\n  }\n};\n//get next  page\nexport const getNext = (next) => async (dispatch) => {\n  try {\n    dispatch(actions.loadingAction());\n    const { data } = await API.getNext(next);\n    dispatch(actions.getCardRequestSuccessAction(data));\n  } catch (error) {\n    dispatch(actions.getCardRequestFailAction(error));\n    errorFunction(error);\n  }\n};\n//get particular page\nexport const getParticularPage =\n  ({ number, postsPerPage }) =>\n  async (dispatch) => {\n    try {\n      dispatch(actions.loadingAction());\n      const { data } = await API.getParticularPage(number, postsPerPage);\n      dispatch(actions.getCardRequestSuccessAction(data));\n    } catch (error) {\n      dispatch(actions.getCardRequestFailAction(error));\n      errorFunction(error);\n    }\n  };\n\n// create\nexport const createCard =\n  (updatedValues, currentPage, postsPerPage) => async (dispatch) => {\n    const {\n      userPhoto,\n      firstName,\n      middleName,\n      lastName,\n      dob,\n      dobBs,\n      birthDistrict,\n      birthPlace,\n      email,\n      gender,\n      province,\n      district,\n      palika,\n      wardNumber,\n      tole,\n      migrated,\n      married,\n      marriedDistrict,\n      migratedDistrict,\n      marriageDocuments,\n      migrationDocument,\n      citizenshipNumber,\n      hasCitizenship,\n      citizenshipIssuedFrom,\n      citizenshipIssuedDate,\n      citizenshipFrontImg,\n      citizenshipBackImg,\n      birthCertificateImg,\n      fatherName,\n      spouseName,\n      mobileNumber,\n      isRecommended,\n      recommendationLetterImg,\n      isConfirmed,\n    } = updatedValues;\n\n    try {\n      const body = new FormData();\n      body.append(\"firstName\", firstName);\n      body.append(\"middleName\", middleName);\n      body.append(\"lastName\", lastName);\n      body.append(\"dob\", dob);\n      body.append(\"dobBs\", dobBs);\n\n      body.append(\"email\", email);\n      body.append(\"gender\", gender);\n      body.append(\"birthDistrict\", birthDistrict);\n      body.append(\"birthPlace\", birthPlace);\n      body.append(\"migrated\", migrated);\n      body.append(\"married\", married);\n      body.append(\"province\", province);\n      body.append(\"district\", district);\n      body.append(\"palika\", palika);\n      body.append(\"wardNumber\", wardNumber);\n      body.append(\"tole\", tole);\n      body.append(\"citizenshipNumber\", citizenshipNumber);\n      body.append(\"hasCitizenship\", hasCitizenship);\n      body.append(\"citizenshipIssuedFrom\", citizenshipIssuedFrom);\n      body.append(\"citizenshipIssuedDate\", citizenshipIssuedDate);\n      body.append(\"fatherName\", fatherName);\n      body.append(\"spouseName\", spouseName);\n      body.append(\"mobileNumber\", mobileNumber);\n      body.append(\"isRecommended\", isRecommended);\n      body.append(\"isConfirmed\", isConfirmed);\n\n      if (married) {\n        body.append(\"marriedDistrict\", marriedDistrict);\n      }\n      if (migrated) {\n        body.append(\"migratedDistrict\", migratedDistrict);\n      }\n\n      if (userPhoto) {\n        body.append(\"userPhoto\", userPhoto);\n      }\n\n      if (citizenshipBackImg !== null) {\n        body.append(\"citizenshipBack\", citizenshipBackImg);\n      }\n      if (citizenshipFrontImg !== null) {\n        body.append(\"citizenshipFront\", citizenshipFrontImg);\n      }\n      if (birthCertificateImg !== null) {\n        body.append(\"birthCertificate\", birthCertificateImg);\n      }\n      if (migrationDocument !== null) {\n        body.append(\"migrationDocument\", migrationDocument);\n      }\n      if (marriageDocuments !== null) {\n        body.append(\"marriageDocuments\", marriageDocuments);\n      }\n      if (recommendationLetterImg !== null) {\n        body.append(\"recommendationLetter\", recommendationLetterImg);\n      }\n\n      dispatch(actions.loadingCreate());\n      const { data } = await API.createCard(body);\n      dispatch(getParticularPage({ number: currentPage, postsPerPage }));\n      dispatch(actions.createCardSuccessAction(data));\n      successFunction(\"Record Added Successfully.\");\n      return true;\n    } catch (error) {\n      dispatch(actions.createCardFailAction(error));\n      errorFunction(error);\n    }\n  };\n\nexport const editCardRequest = (id) => async (dispatch) => {\n  try {\n    dispatch(actions.loadingAction());\n    const { data } = await API.editCardRequest(id);\n    dispatch(actions.editCardSuccessAction(data));\n  } catch (error) {\n    dispatch(actions.editCardFailAction(error));\n    errorFunction(error);\n  }\n};\n\n//update\nexport const updateCard =\n  (id, values, type, currentPage, postsPerPage) => async (dispatch) => {\n    try {\n      dispatch(actions.loadingUpdatedAction());\n      const {\n        userPhoto,\n        firstName,\n        middleName,\n        lastName,\n        dob,\n        birthDistrict,\n        birthPlace,\n        dobBs,\n        email,\n        gender,\n        province,\n        district,\n        palika,\n        married,\n        migrated,\n        marriedDistrict,\n        migratedDistrict,\n        wardNumber,\n        tole,\n        citizenshipNumber,\n        hasCitizenship,\n        citizenshipIssuedFrom,\n        citizenshipIssuedDate,\n        fatherName,\n        spouseName,\n        mobileNumber,\n        isRecommended,\n        isConfirmed,\n        voucherReferenceNumber,\n        status,\n        signature,\n      } = values;\n      const body = new FormData();\n      body.append(\"firstName\", firstName);\n      body.append(\"middleName\", middleName);\n      body.append(\"lastName\", lastName);\n      body.append(\"dob\", dob);\n      body.append(\"dobBs\", dobBs);\n      body.append(\"email\", email);\n      body.append(\"gender\", gender);\n      body.append(\"birthDistrict\", birthDistrict);\n      body.append(\"birthPlace\", birthPlace);\n      body.append(\"province\", province);\n      body.append(\"district\", district);\n      body.append(\"palika\", palika);\n      body.append(\"wardNumber\", wardNumber);\n      body.append(\"tole\", tole);\n      body.append(\"citizenshipNumber\", citizenshipNumber);\n      body.append(\"hasCitizenship\", hasCitizenship);\n      body.append(\"citizenshipIssuedFrom\", citizenshipIssuedFrom);\n      body.append(\"citizenshipIssuedDate\", citizenshipIssuedDate);\n      body.append(\"fatherName\", fatherName);\n      body.append(\"spouseName\", spouseName);\n      body.append(\"mobileNumber\", mobileNumber);\n      body.append(\"isRecommended\", isRecommended);\n      body.append(\"isConfirmed\", isConfirmed);\n      if (married) {\n        body.append(\"marriedDistrict\", marriedDistrict);\n      }\n      if (migrated) {\n        body.append(\"migratedDistrict\", migratedDistrict);\n      }\n      if (status) {\n        body.append(\"status\", status);\n      }\n      if (voucherReferenceNumber) {\n        body.append(\"voucherReferenceNumber\", voucherReferenceNumber);\n      }\n      if (signature) {\n        body.append(\"signature\", signature);\n      }\n\n      if (userPhoto) {\n        body.append(\"userPhoto\", userPhoto);\n      }\n\n      const response = await API.updateCard(id, body);\n      if (type === \"card\") {\n        dispatch(getParticularPage({ number: currentPage, postsPerPage }));\n      } else {\n        dispatch(\n          getParticularPageVerify({ number: currentPage, postsPerPage })\n        );\n      }\n      dispatch(actions.updatedCardSuccessAction(response?.data));\n      successFunction(\"Record Updated Successfully \");\n      return true;\n    } catch (error) {\n      dispatch(actions.updatedCardFailAction(error));\n      errorFunction(error);\n      return false;\n    }\n  };\nexport const rejectEntryPass =\n  (id, remarks, currentPage, postsPerPage, types) => async (dispatch) => {\n    try {\n      const body = JSON.stringify({ remarks });\n\n      const { data } = await API.rejectEntryPass(id, body);\n      dispatch(actions.updatedCardSuccessAction(data));\n      if (types === \"verifyCard\") {\n        dispatch(\n          getParticularPageVerify({\n            number: currentPage,\n            postsPerPage,\n          })\n        );\n      } else {\n        dispatch(getParticularPage({ number: currentPage, postsPerPage }));\n      }\n      successFunction(\"Pass Rejected \");\n      return true;\n    } catch (error) {\n      dispatch(actions.updatedCardFailAction(error));\n      errorFunction(error);\n      return false;\n    }\n  };\nexport const verifyCardThunk =\n  (id, values, currentPage, postsPerPage) => async (dispatch) => {\n    try {\n      dispatch(actions.loadingUpdatedAction());\n      const { signature, userPhoto } = values;\n      const body = new FormData();\n\n      body.append(\"signature\", signature);\n      if (userPhoto !== \"\") {\n        body.append(\"userPhoto\", userPhoto);\n      }\n      body.append(\"signatureUpdating\", true);\n      const response = await API.verifyCard(id, body);\n      dispatch(getParticularPage({ number: currentPage, postsPerPage }));\n\n      dispatch(actions.updatedCardSuccessAction(response?.data));\n      successFunction(\"Record Updated Successfully \");\n      return true;\n    } catch (error) {\n      dispatch(actions.updatedCardFailAction(error));\n      errorFunction(error);\n      return false;\n    }\n  };\n//handle Search\nexport const handleSearch = (search, postsPerPage) => async (dispatch) => {\n  try {\n    dispatch(actions.loadingAction());\n    const { data } = await API.handleSearch(search, postsPerPage);\n    dispatch(actions.getCardRequestSuccessAction(data));\n  } catch (error) {\n    dispatch(actions.getCardRequestFailAction(error));\n    errorFunction(error);\n  }\n};\nexport const cardClearData = () => async (dispatch) => {\n  try {\n    dispatch(actions.cardClearDataAction());\n    return true;\n  } catch (error) {\n    errorFunction(error);\n  }\n};\n","import axiosInstance from \"../../utils/axios\";\n\nconst cardURL = \"api/v1/application/\";\n//obtaining the paginated data\nexport const getVerifyCard = (postsPerPage) =>\n  axiosInstance.get(\n    `api/v1/application/entry-pass-list?offset=0&limit=${postsPerPage}&ordering=-id&status=verified&application_type=new`\n  );\n\n//obtaining all data\nexport const getAllVerifyCard = () =>\n  axiosInstance.get(\n    `api/v1/application/entry-pass-list?ordering=-id&status=verified&application_type=new`\n  );\n\n//obtaining the previous page data from paginated data\nexport const getPrevious = (previous) => axiosInstance.get(previous);\n\n//obtaining the next page data from paginated data\nexport const getNext = (next) => axiosInstance.get(next);\n\n//obtaining the particular page data from paginated data\nexport const getParticularPage = (number, postsPerPage) =>\n  axiosInstance.get(\n    `api/v1/application/entry-pass-list?offset=${\n      (number - 1) * postsPerPage\n    }&limit=${postsPerPage}&ordering=-id&status=verified&application_type=new`\n  );\n\n//searching function\nexport const handleSearch = (search, postsPerPage) =>\n  axiosInstance.get(\n    `api/v1/application/entry-pass-list?offset=0&limit=${postsPerPage}&search=${search}&status=verified&application_type=new`\n  );\n\nexport const verifyCard = (id, body) =>\n  axiosInstance.patch(`api/v1/application/entry-pass/approve/${id}`, body, {\n    \"Content-Type\": \"multipart/form-data\",\n  });\n\nexport const getVerifyCardById = (id) =>\n  axiosInstance.get(`api/v1/application/entry-pass/${id}`);\n","import { verifyCardConstants } from \"./constants\";\n// actions\nexport const loadingAction = () => ({\n  type: verifyCardConstants.LOADING_VERIFY_CARD,\n});\nexport const loadingUpdatedAction = () => ({\n  type: verifyCardConstants.LOADING_UPDATED,\n});\nexport const getVerifyCardSuccessAction = (data) => ({\n  type: verifyCardConstants.GET_VERIFY_CARD_SUCCESS,\n  payload: data,\n});\nexport const getVerifyCardFailAction = (error) => ({\n  type: verifyCardConstants.GET_VERIFY_CARD_FAIL,\n  payload: error,\n});\nexport const verifyCardSuccessAction = (data) => ({\n  type: verifyCardConstants.VERIFY_CARD_SUCCESS,\n  payload: data,\n});\nexport const verifyCardFailAction = (error) => ({\n  type: verifyCardConstants.VERIFY_CARD_FAIL,\n  payload: error,\n});\nexport const approveVerifyCardSuccessAction = (data) => ({\n  type: verifyCardConstants.APPROVE_VERIFY_CARD_SUCCESS,\n  payload: data,\n});\nexport const approveVerifyCardFailAction = (error) => ({\n  type: verifyCardConstants.APPROVE_VERIFY_CARD_FAIL,\n  payload: error,\n});\nexport const clearDataAction = (error) => ({\n  type: verifyCardConstants.CLEAR_DATA,\n});\n","import * as API from \"./api\";\nimport * as actions from \"./actions\";\nimport { errorFunction, successFunction } from \"../../Component/Alert\";\n//get  Bank\nexport const getVerifyCard = (postsPerPage) => async (dispatch) => {\n  try {\n    dispatch(actions.loadingAction());\n    const { data } = await API.getVerifyCard(postsPerPage);\n    dispatch(actions.getVerifyCardSuccessAction(data));\n    return true;\n  } catch (error) {\n    dispatch(actions.getVerifyCardFailAction(error));\n    errorFunction(error);\n  }\n};\n// get all bank\nexport const getAllVerifyCard = () => async (dispatch) => {\n  try {\n    dispatch(actions.loadingAction());\n    const { data } = await API.getAllVerifyCard();\n    dispatch(actions.getVerifyCardSuccessAction(data));\n  } catch (error) {\n    dispatch(actions.getVerifyCardFailAction(error));\n    errorFunction(error);\n  }\n};\n//get previous  page\nexport const getPrevious = (previous) => async (dispatch) => {\n  try {\n    dispatch(actions.loadingAction());\n    const { data } = await API.getPrevious(previous);\n    dispatch(actions.getVerifyCardSuccessAction(data));\n  } catch (error) {\n    dispatch(actions.getVerifyCardFailAction(error));\n    errorFunction(error);\n  }\n};\n//get next  page\nexport const getNext = (next) => async (dispatch) => {\n  try {\n    dispatch(actions.loadingAction());\n    const { data } = await API.getNext(next);\n    dispatch(actions.getVerifyCardSuccessAction(data));\n  } catch (error) {\n    dispatch(actions.getVerifyCardFailAction(error));\n    errorFunction(error);\n  }\n};\n//get particular page\nexport const getParticularPage =\n  ({ number, postsPerPage }) =>\n  async (dispatch) => {\n    try {\n      dispatch(actions.loadingAction());\n      const { data } = await API.getParticularPage(number, postsPerPage);\n      dispatch(actions.getVerifyCardSuccessAction(data));\n    } catch (error) {\n      dispatch(actions.getVerifyCardFailAction(error));\n      errorFunction(error);\n    }\n  };\nexport const approveVerifyCard = (id) => async (dispatch) => {\n  try {\n    // dispatch(actions.loadingAction());\n    const { data } = await API.getVerifyCardById(id);\n    dispatch(actions.approveVerifyCardSuccessAction(data));\n    return true;\n  } catch (error) {\n    dispatch(actions.approveVerifyCardFailAction(error));\n    errorFunction(error);\n  }\n};\n//handle Search\nexport const handleSearch = (search, postsPerPage) => async (dispatch) => {\n  try {\n    dispatch(actions.loadingAction());\n    const { data } = await API.handleSearch(search, postsPerPage);\n    dispatch(actions.getVerifyCardSuccessAction(data));\n  } catch (error) {\n    dispatch(actions.getVerifyCardFailAction(error));\n    errorFunction(error);\n  }\n};\n\nexport const verifyCard =\n  (id, currentPage, postsPerPage) => async (dispatch) => {\n    try {\n      dispatch(actions.loadingUpdatedAction());\n\n      const body = new FormData();\n\n      const { data } = await API.verifyCard(id, body);\n      dispatch(getParticularPage({ currentPage, postsPerPage }));\n      dispatch(actions.verifyCardSuccessAction(data));\n      successFunction(\"Card Request Verify Successfully\");\n      return true;\n    } catch (error) {\n      dispatch(actions.verifyCardFailAction(error));\n      errorFunction(\"Failed to verify Card Reuest\");\n      return false;\n    }\n  };\n\nexport const clearData = () => async (dispatch) => {\n  try {\n    dispatch(actions.clearDataAction());\n    return true;\n  } catch (error) {\n    errorFunction(error);\n  }\n};\n","import axios from \"axios\";\nimport { store } from \"../Redux/store\";\nimport { authConstants } from \"../Redux/Auth/constants\";\nimport { toast } from \"react-toastify\";\n\n//creating axios instance\nexport const publicAxiosInstance = axios.create({\n  baseURL: process.env.REACT_APP_BASE_URL,\n});\nexport const printerAxiosInstance = axios.create({\n  baseURL: process.env.REACT_APP_PRINTER_BASE_URL,\n  headers: {\n    \"Content-Type\": \"application/json\",\n  },\n});\n\nconst axiosInstance = axios.create({\n  baseURL: process.env.REACT_APP_BASE_URL,\n  headers: {\n    \"Content-Type\": \"application/json\",\n  },\n});\n//interceptor\n//request handling\naxiosInstance.interceptors.request.use(\n  (config) => {\n    // if (!window.navigator.onLine) {\n    //   return Promise.reject(\"No Internet\");\n    // }\n    if (window.navigator.onLine) {\n      config.headers[\"Authorization\"] = localStorage.getItem(\"accessToken\")\n        ? `Bearer ${localStorage.getItem(\"accessToken\")}`\n        : null;\n      config.baseURL = process.env.REACT_APP_BASE_URL;\n      return config;\n    }\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n//response handling\naxiosInstance.interceptors.response.use(\n  (res) => res,\n  async (error) => {\n    //refresh token\n\n    const originalRequest = error.config;\n    //when refresh token is also not valid\n    if (\n      error.response.status === 401 &&\n      originalRequest.url === `auth/token/refresh`\n    ) {\n      store.dispatch({ type: authConstants.AUTH_ERROR });\n      // return Promise.reject(error.response?.data.code);\n      // return toast.error(`Refresh Token Expired. Please Login.`, {\n      //   autoClose: 1200,\n      // });\n    }\n    //accessing new access token from refresh token\n    if (\n      error.response?.data.code === \"token_not_valid\" &&\n      !originalRequest._retry\n    ) {\n      //call for refresh token\n      originalRequest._retry = true;\n      try {\n        const body = JSON.stringify({\n          refresh: localStorage.getItem(\"refreshToken\"),\n        });\n        localStorage.removeItem(\"accessToken\");\n        const response = await axiosInstance.post(`auth/token/refresh`, body);\n        if (response.status === 200) {\n          localStorage.setItem(\"accessToken\", response?.data.access);\n          originalRequest.headers[\n            \"Authorization\"\n          ] = `Bearer ${response?.data.access}`;\n          return axiosInstance(originalRequest);\n        }\n      } catch (error) {\n        store.dispatch({\n          type: authConstants.AUTH_ERROR,\n        });\n\n        // return toast.error(`${error.response.data.error}`);\n        // return Promise.reject(error.response?.data.error);\n      }\n      // return store.dispatch({ type: AUTH_ERROR });\n    }\n    //no Internet\n    if (error === \"No Internet\") {\n      toast.error(`No Internet Connection !!!`);\n      // return Promise.reject(`No Internet`);\n    }\n    //server down\n    if (error.message === \"Network Error\") {\n      toast.error(\"Internal Server Error. Contact IT manager !!!\", {\n        autoClose: 1200,\n      });\n      // return Promise.reject(`Internal Server Error. Contact IT manager !!!`);\n    }\n    if (error.response?.status === 500) {\n      toast.error(\"Internal Server Error. Contact IT manager !!!\", {\n        autoClose: 1200,\n      });\n      // return Promise.reject(`Internal Server Error. Contact IT manager !!!`);\n    }\n    if (error.response?.status === 404) {\n      toast.error(\"Page Not Found !!!!!\", { autoClose: 1200 });\n    }\n    //unauthorized user\n    if (\n      error.response?.status === 401 ||\n      error.message === \"Invalid token specified\"\n    ) {\n      store.dispatch({ type: authConstants.AUTH_ERROR });\n      // toast.error(\"Unauthorized User\", { autoClose: 1200 });\n\n      return Promise.reject(error.response.data.detail);\n    }\n    //error between 400\n    const expectedError =\n      error.response &&\n      error.response.status >= 400 &&\n      error.response.status < 500;\n    if (expectedError) {\n      if (error.response.data.detail) {\n        return Promise.reject(`${error.response.data.detail}`);\n      } else {\n        return Promise.reject(`${error.response.statusText}`);\n      }\n    }\n    return Promise.reject(error);\n  }\n);\nexport default axiosInstance;\n","export const defaultLimit = 10;\n"],"names":["toast","errorFunction","error","errorMessage","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","successFunction","data","successMessage","infoFunction","infoMessage","type","className","disabled","title","loading","content","color","onClick","header","setShowModal","clearAction","types","edit","dispatch","setDeviceId","setRightFingerPrint","setLeftFingerPrint","setStartScan","setStartScanRight","setStartScanLeft","useDispatch","id","style","cursor","onModalClick","children","size","showModal","props","ref","useRef","modalClass","useEffect","handleKeyDown","event","key","document","addEventListener","removeEventListener","tabIndex","role","background","DisplayEntries","offset","limit","count","React","Pagination","postsPerPage","totalPosts","paginate","handleClick","currentPage","maxPageNumberLimit","minPageNumberLimit","pageNumbers","i","Math","ceil","push","length","map","number","setCurrentPage","width","height","src","spinner","alt","thumb","loadingAction","cardConstants","loadingCreate","loadingUpdatedAction","closeEditCardSuccessAction","clearEditCardSuccessAction","getCardRequestSuccessAction","payload","getCardRequestFailAction","createCardSuccessAction","createCardFailAction","editCardSuccessAction","editCardFailAction","updatedCardSuccessAction","updatedCardFailAction","cardClearDataAction","getCardRequest","axiosInstance","getPrevious","previous","getNext","next","getParticularPage","createCard","body","editCardRequest","updateCard","verifyCard","rejectEntryPass","handleSearch","search","actions","API","updatedValues","userPhoto","firstName","middleName","lastName","dob","dobBs","birthDistrict","birthPlace","email","gender","province","district","palika","wardNumber","tole","migrated","married","marriedDistrict","migratedDistrict","marriageDocuments","migrationDocument","citizenshipNumber","hasCitizenship","citizenshipIssuedFrom","citizenshipIssuedDate","citizenshipFrontImg","citizenshipBackImg","birthCertificateImg","fatherName","spouseName","mobileNumber","isRecommended","recommendationLetterImg","isConfirmed","FormData","append","values","voucherReferenceNumber","status","signature","response","getParticularPageVerify","remarks","JSON","stringify","verifyCardThunk","cardClearData","getVerifyCard","getVerifyCardById","verifyCardConstants","getVerifyCardSuccessAction","getVerifyCardFailAction","verifyCardSuccessAction","approveVerifyCardSuccessAction","approveVerifyCard","clearData","printerAxiosInstance","axios","baseURL","process","headers","interceptors","request","use","config","window","navigator","onLine","localStorage","getItem","Promise","reject","res","originalRequest","url","store","authConstants","code","_retry","refresh","removeItem","post","setItem","access","message","detail","statusText","defaultLimit"],"sourceRoot":""}