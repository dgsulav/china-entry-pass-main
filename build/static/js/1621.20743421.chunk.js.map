{"version":3,"file":"static/js/1621.20743421.chunk.js","mappings":"mMAUMA,EAAc,SAAC,GAKd,IAJLC,EAII,EAJJA,gBACAC,EAGI,EAHJA,mBACAC,EAEI,EAFJA,SACAC,EACI,EADJA,eAGMC,GAD+CF,EAA7CG,KAA6CH,EAAvCI,kBAAuCJ,EAApBK,iBACjBC,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAAWA,EAAMC,OAAON,YAM9CO,IALQH,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAAWA,EAAMC,OAAOE,iBAC1BJ,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAAWA,EAAMC,OAAOG,oBAC/CL,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAAWA,EAAMC,OAAOI,gBAEhCC,EAAAA,EAAAA,MACEf,EACf,sBACA,sBAEJ,GAAsCgB,EAAAA,EAAAA,UAAS,GAA/C,eAAOC,EAAP,KACA,GADA,MACoDD,EAAAA,EAAAA,UAAS,IAA7D,eACA,GADA,WACoDA,EAAAA,EAAAA,UAAS,IAA7D,eACA,GADA,WACwCA,EAAAA,EAAAA,UAAS,KAAjD,eAAOE,EAAP,UAmCA,OACE,+BACE,iBAAKC,UAAWR,EAAYS,SAAS,KAArC,WACE,gBAAKD,UAAU,iCAAf,UACE,iBAAKA,UAAU,wBAAf,WACE,iBAAKA,UAAU,eAAf,WACE,eAAIA,UAAU,cAAcE,GAAG,oBAA/B,kCAGA,mBACEC,KAAK,SACLH,UAAU,YACV,eAAa,QACb,aAAW,QACXI,QAAS,kBAAMtB,GAAmB,IALpC,UAOE,SAAC,MAAD,UAGJ,gBAAKkB,UAAU,aAAf,SACGf,GACC,gBAAKe,UAAU,iCAAf,UACE,gBAAKA,UAAU,iBAAiBK,KAAK,SAArC,UACE,iBAAML,UAAU,UAAhB,6BAIJ,8BAC8B,KAAb,OAAdhB,QAAc,IAAdA,OAAA,EAAAA,EAAgBsB,QACf,uBAEA,mBAAON,UAAU,8BAAjB,WACE,kBAAOA,UAAU,cAAjB,UACE,gBAAIA,UAAU,cAAd,WACE,eAAIO,MAAM,MAAV,gBACA,eAAIA,MAAM,MAAV,gCACA,eAAIA,MAAM,MAAV,oBACA,eAAIA,MAAM,MAAV,iCACA,eAAIA,MAAM,MAAV,sBACA,eAAIA,MAAM,MAAV,sBACA,eAAIA,MAAM,MAAV,qBACA,eAAIA,MAAM,MAAV,qBACA,eAAIA,MAAM,MAAV,uBACA,eAAIA,MAAM,MAAV,qCAGJ,4BACiB,OAAdvB,QAAc,IAAdA,OAAA,EAAAA,EAAgBsB,QAAS,GACxBtB,EAAewB,KAAI,SAACC,EAAQC,GAC1B,IACER,EAWEO,EAXFP,GACAS,EAUEF,EAVFE,iBACAC,EASEH,EATFG,SAEAC,EAOEJ,EAPFI,WACAC,EAMEL,EANFK,kBACAC,EAKEN,EALFM,aACAC,EAIEP,EAJFO,WACAC,EAGER,EAHFQ,OACAC,EAEET,EAFFS,SACAC,EACEV,EADFU,iBAGF,OACE,gBAAanB,UAAU,cAAvB,WACE,0BACG,IACAD,GAAgBD,EAAc,IAAMY,EAAI,OAE3C,wBAAKC,KACL,wBAAKC,KACL,wBAAKE,KACL,wBAAKC,KACL,wBAAKF,KACL,wBAAKG,KACL,wBAAKC,EAAM,OAAGA,QAAH,IAAGA,OAAH,EAAGA,EAAQG,KAAO,SAC7B,wBAAKF,EAAQ,OAAGA,QAAH,IAAGA,OAAH,EAAGA,EAAUE,KAAO,SACjC,wBAAKD,MAbEjB,oBAwBxB,UAKf,UAAemB,EAAAA,KAAWzC,I","sources":["Component/ReportModal/ReprintCard/ReportModal.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"../modal.css\";\nimport { FaTimes } from \"react-icons/fa\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  getReprintCardReportNext,\n  getReprintCardReportParticularPage,\n  getReprintCardReportPrevious,\n} from \"../../../Redux/Report/thunk\";\n\nconst ReportModal = ({\n  showReportModal,\n  setShowReportModal,\n  formData,\n  reprintReports,\n}) => {\n  const { user, formatedStartDate, formatedEndDate } = formData;\n  const loading = useSelector((state) => state.report.loading);\n  const count = useSelector((state) => state.report.reprintCount);\n  const reprintPrevious = useSelector((state) => state.report.reprintPrevious);\n  const next = useSelector((state) => state.report.reprintNext);\n\n  const dispatch = useDispatch();\n  const modalClass = showReportModal\n    ? \"modal display-block\"\n    : \"modal display-none\";\n\n  const [currentPage, setCurrentPage] = useState(1);\n  const [maxPageNumberLimit, setMaxPageNumberLimit] = useState(5);\n  const [minPageNumberLimit, setMinPageNumberLimit] = useState(0);\n  const [postsPerPage, setPostsPerPage] = useState(10);\n  const pageNumberLimit = 5;\n  //change page\n  const paginate = (number) => {\n    dispatch(\n      getReprintCardReportParticularPage({\n        number,\n        postsPerPage,\n        user,\n        formatedStartDate,\n        formatedEndDate,\n      })\n    );\n    setCurrentPage(number);\n  };\n\n  //handle Click\n  const handleClick = (type) => {\n    if (type === \"previous\") {\n      dispatch(getReprintCardReportPrevious(reprintPrevious));\n      setCurrentPage((prevState) => prevState - 1);\n      if ((currentPage - 1) % pageNumberLimit === 0) {\n        setMaxPageNumberLimit(maxPageNumberLimit - pageNumberLimit);\n        setMinPageNumberLimit(minPageNumberLimit - pageNumberLimit);\n      }\n    } else if (type === \"next\") {\n      dispatch(getReprintCardReportNext(next));\n      setCurrentPage((prevState) => prevState + 1);\n      if (currentPage + 1 > maxPageNumberLimit) {\n        setMaxPageNumberLimit(maxPageNumberLimit + pageNumberLimit);\n        setMinPageNumberLimit(minPageNumberLimit + pageNumberLimit);\n      }\n    }\n  };\n\n  return (\n    <>\n      <div className={modalClass} tabIndex=\"-1\">\n        <div className=\"container-fluid main-container\">\n          <div className=\"modal-content content\">\n            <div className=\"modal-header\">\n              <h5 className=\"modal-title\" id=\"exampleModalLabel\">\n                Reprint Card Report\n              </h5>\n              <button\n                type=\"button\"\n                className=\"btn-close\"\n                data-dismiss=\"modal\"\n                aria-label=\"Close\"\n                onClick={() => setShowReportModal(false)}\n              >\n                <FaTimes />\n              </button>\n            </div>\n            <div className=\"modal-body\">\n              {loading ? (\n                <div className=\"d-flex justify-content-center \">\n                  <div className=\"spinner-border\" role=\"status\">\n                    <span className=\"sr-only\">Loading...</span>\n                  </div>\n                </div>\n              ) : (\n                <>\n                  {reprintReports?.length === 0 ? (\n                    \"You have No records\"\n                  ) : (\n                    <table className=\"table table table-bordered \">\n                      <thead className=\"text-center\">\n                        <tr className=\"text-center\">\n                          <th scope=\"col\">#</th>\n                          <th scope=\"col\">Submission Number</th>\n                          <th scope=\"col\">Name </th>\n                          <th scope=\"col\">Citizenship Number</th>\n                          <th scope=\"col\">Contact</th>\n                          <th scope=\"col\">Card No</th>\n                          <th scope=\"col\">Father</th>\n                          <th scope=\"col\">Branch</th>\n                          <th scope=\"col\">Province</th>\n                          <th scope=\"col\">Permanent Address</th>\n                        </tr>\n                      </thead>\n                      <tbody>\n                        {reprintReports?.length > 0 &&\n                          reprintReports.map((detail, i) => {\n                            const {\n                              id,\n                              submissionNumber,\n                              fullName,\n\n                              cardNumber,\n                              citizenshipNumber,\n                              mobileNumber,\n                              fatherName,\n                              office,\n                              province,\n                              permanentAddress,\n                            } = detail;\n\n                            return (\n                              <tr key={id} className=\"text-center\">\n                                <td>\n                                  {\" \"}\n                                  {postsPerPage * (currentPage - 1) + (i + 1)}\n                                </td>\n                                <td>{submissionNumber}</td>\n                                <td>{fullName}</td>\n                                <td>{citizenshipNumber}</td>\n                                <td>{mobileNumber}</td>\n                                <td>{cardNumber}</td>\n                                <td>{fatherName}</td>\n                                <td>{office ? office?.name : \"N/A\"}</td>\n                                <td>{province ? province?.name : \"N/A\"}</td>\n                                <td>{permanentAddress}</td>\n                              </tr>\n                            );\n                          })}\n                      </tbody>\n                    </table>\n                  )}\n                </>\n              )}\n            </div>\n          </div>\n        </div>{\" \"}\n      </div>\n    </>\n  );\n};\nexport default React.memo(ReportModal);\n"],"names":["ReportModal","showReportModal","setShowReportModal","formData","reprintReports","loading","user","formatedStartDate","formatedEndDate","useSelector","state","report","modalClass","reprintCount","reprintPrevious","reprintNext","useDispatch","useState","currentPage","postsPerPage","className","tabIndex","id","type","onClick","role","length","scope","map","detail","i","submissionNumber","fullName","cardNumber","citizenshipNumber","mobileNumber","fatherName","office","province","permanentAddress","name","React"],"sourceRoot":""}