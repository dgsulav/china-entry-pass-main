{"version":3,"file":"static/js/2260.8bd61929.chunk.js","mappings":"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","sources":["Component/AlertModal/Reject.js","Component/Data/Data.js","Component/Loader/index.js","Component/Pagination/PaginationLimit.js","Component/SignaturePad/index.js","utils/imageConvertor.js","Pages/Card/CameraModal.js","Pages/Card/CropModal.js","Pages/Card/asyncFunction.js","Pages/Card/ViewModal.js","Component/NepaliDatePicker/index.js","Pages/Card/CreateCard.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport Button from \"../../Component/Button/Button\";\nimport { rejectEntryPass } from \"../../Redux/Card/thunk\";\n// import { rejectEntryPass } from \"../../Redux/VerifyCard/thunk\";\nimport { errorFunction } from \"../../Component/Alert\";\nimport { useSelector } from \"react-redux\";\n\nconst RejectModal = ({\n  types,\n  data,\n  dispatch,\n  setShowRejectModal,\n  setShowModal,\n  setBirthCertificateImg,\n  setCitizenshipBackImg,\n  setCitizenshipFrontImg,\n  setRecommendationLetterImg,\n  setPhoto,\n  clearAction,\n  currentPage,\n  postsPerPage,\n}) => {\n  const [remarks, setRemarks] = useState(\"\");\n  const isSuperuser = useSelector((state) => state.auth.isSuperuser);\n  const isAdmin = useSelector((state) => state.auth.isAdmin);\n\n  const handleReject = async () => {\n    if (isSuperuser || isAdmin) {\n      errorFunction(\"Admin or Superuser can't perform this action.\");\n    } else if (remarks.length > 10) {\n    \n      if (types === \"entryPass\") {\n        const result = await dispatch(\n          rejectEntryPass(data?.id, remarks, currentPage, postsPerPage, types)\n        );\n        if (result) {\n          setBirthCertificateImg(null);\n          setCitizenshipBackImg(null);\n          setCitizenshipFrontImg(null);\n          setRecommendationLetterImg(null);\n          setPhoto(null);\n          setRemarks(\"\");\n          dispatch(clearAction());\n          setShowRejectModal(false);\n          setShowModal(false);\n        }\n      } else if (types === \"verifyCard\") {\n        const result = await dispatch(\n          rejectEntryPass(data?.id, remarks, currentPage, postsPerPage, types)\n        );\n        if (result) {\n          setRemarks(\"\");\n          dispatch(clearAction());\n          setShowRejectModal(false);\n          setShowModal(false);\n        }\n      }\n    } else {\n      errorFunction(\"Please write reason for rejecting of this pass request.\");\n    }\n  };\n  return (\n    <div className=\"mb-2 justify-content-center\">\n      <div className=\"form-group row mb-2\">\n        {/* <label htmlFor=\"remarks\" className=\"fw-bold\">\n          Why this is pass is Rejected?\n          <span className=\"text-danger\">*</span>\n        </label> */}\n        <textarea\n          type=\"text\"\n          name=\"remarks\"\n          onChange={(e) => {\n            setRemarks(e.target.value);\n          }}\n          className=\"form-control\"\n          placeholder=\"Enter remarks\"\n        />\n      </div>\n      {remarks.length < 10 && (\n        <span className=\"text-danger\">\n          Remarks should have at least 10 characters\n        </span>\n      )}\n      <div className=\"form-group row mb-2 justify-content-center\">\n        <Button\n          // type={\"btn\"}\n          className={\"btn btn-primary \"}\n          onClick={handleReject}\n          title={\"Reject\"}\n          content={\"Reject\"}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default RejectModal;\n","export const options = [\n  { id: 1, name: \"CASH\" },\n  { id: 2, name: \"CREDIT\" },\n];\nexport const officeTypes = [\n  { id: \"immigration\", name: \"Immigration Office\" },\n  { id: \"dao\", name: \"District Administration Office\" },\n];\nexport const genders = [\n  { id: \"m\", name: \"Male\" },\n  { id: \"f\", name: \"Female\" },\n  { id: \"o\", name: \"Other\" },\n];\nexport const tax_reg_systems = [\n  { id: 1, name: \"VAT\" },\n  { id: 2, name: \"PAN\" },\n  { id: 3, name: \"N/A\" },\n];\nexport const depreciationMethods = [\n  { id: 1, name: \"Straight line\" },\n  { id: 2, name: \"Diminishing Balance \" },\n  { id: 3, name: \"Unit Of Product\" },\n];\n\nexport const applicationTypes = [\n  { id: \"new\", name: \"NEW\" },\n  { id: \"renew\", name: \"RENEW\" },\n  { id: \"reprint\", name: \"REPRINT\" },\n];\nexport const statusTypes = [\n  { id: \"pending\", name: \"PENDING\" },\n  { id: \"verified\", name: \"VERIFIED\" },\n  { id: \"rejected\", name: \"REJECTED\" },\n  { id: \"approved\", name: \"APPROVED\" },\n  { id: \"printed\", name: \"PRINTED\" },\n];\nexport const statusTypesReprint = [\n  { id: \"pending\", name: \"PENDING\" },\n  { id: \"approved\", name: \"APPROVED\" },\n  { id: \"printed\", name: \"PRINTED\" },\n];","import React from \"react\";\nimport \"./loader.css\";\n\nconst Loader = () => {\n  return (\n    <div>\n      <div className=\"progress-wrapper\">\n        <div className=\"progress-bar\">\n          <div className=\"circle border\"></div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Loader;\n","import React from \"react\";\n\nconst PaginationLimit = ({ postsPerPage, setPostsPerPage }) => {\n  const handleChange = (e) => {\n    const data = Number(e.target.value);\n    setPostsPerPage(data);\n  };\n  return (\n    <>\n      <p className=\"fw-normal p-0 m-0\">\n        Show\n        <span className=\"ml-1 mr-1\">\n          {\" \"}\n          <select value={postsPerPage} onChange={handleChange}>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n            <option value=\"40\">40</option>\n            <option value=\"99999999\">All</option>\n          </select>\n        </span>{\" \"}\n        entries\n      </p>\n    </>\n  );\n};\n\nexport default React.memo(PaginationLimit);","import React, { useState, useEffect } from \"react\";\nimport signatureImage from \"../../assets/signature.gif\";\nimport \"./style.css\";\nimport { useSelector } from \"react-redux\";\n\nconst Signature = ({\n  signatures,\n  setSignatures,\n  signaturesText,\n  setSignaturesText,\n  types,\n  setShowSignatureModal,\n}) => {\n  const isSuperuser = useSelector((state) => state.auth.isSuperuser);\n  const isAdmin = useSelector((state) => state.auth.isAdmin);\n  const handleSignatureCapture = (pos) => {\n    window?.captureSignature(\n      signatures,\n      setSignatures,\n      signaturesText,\n      setSignaturesText,\n      pos\n    );\n  };\n\n  const handleSignatureClear = async (pos) => {\n    const updatedSignatures = signatures?.map((sign, i) => {\n      if (i === pos) {\n        return \"\";\n      } else {\n        return sign;\n      }\n    });\n\n    const updatedSignaturesText = signaturesText?.map((sign, i) => {\n      if (i === pos) {\n        return \"\";\n      } else {\n        return sign;\n      }\n    });\n    setSignatures(updatedSignatures);\n    setSignaturesText(updatedSignaturesText);\n  };\n\n  useEffect(() => {\n    window.startSignatureService();\n  }, []);\n  return (\n    <div className=\"signature-wrapper\">\n      <div className=\"signature-container\">\n        {signatures[0] === \"\" ? (\n          <div className=\"signature-card\">\n            <img src={signatureImage} alt=\"default-signature\" />\n          </div>\n        ) : (\n          <div className=\"signature-card\">\n            <img src={signatures[0]} alt=\"signature-image\" />\n          </div>\n        )}\n      </div>\n      <div className=\"d-flex justify-content-center align-items-center gap-2 my-1\">\n        <button\n          type=\"button\"\n          className=\"btn btn-sm btn-primary mr-2\"\n          onClick={() => handleSignatureCapture(0)}\n          disabled={signatures[0] !== \"\" || isAdmin || isSuperuser}\n        >\n          Capture\n        </button>\n        <button\n          type=\"button\"\n          className=\"btn btn-sm btn-danger mr-2\"\n          onClick={() => handleSignatureClear(0)}\n          disabled={signatures[0] === \"\"}\n        >\n          Clear\n        </button>\n        {types === \"user\" && (\n          <button\n            type=\"button\"\n            className=\"btn btn-sm btn-success\"\n            onClick={() => setShowSignatureModal(false)}\n            disabled={signatures[0] === \"\"}\n          >\n            Save\n          </button>\n        )}{\" \"}\n      </div>\n    </div>\n  );\n};\n\nexport default Signature;\n","export async function imageConvertor(dataUrl, fileName,type) {\n    const res = await fetch(dataUrl);\n    const blob = await res.blob();\n    return new File([blob], fileName, { type: type });\n  }","import React, { useRef } from \"react\";\nimport Webcam from \"react-webcam\";\nconst CameraModal = ({ setPhoto, setShowModal, setShowCropModal }) => {\n  const webcamRef = useRef(null);\n  const videoConstraints = {\n    facingMode: \"environment\", // Use the rear camera\n  };\n  const capture = () => {\n    const image = webcamRef.current.getScreenshot();\n    setPhoto(image);\n    setShowModal(false);\n    setShowCropModal(true);\n  };\n  return (\n    <>\n      <Webcam\n        width=\"100%\"\n        audio={false}\n        screenshotFormat=\"image/jpeg\"\n        ref={webcamRef}\n        videoConstraints={videoConstraints}\n      />\n      <div className=\"text-center\">\n        <button type=\"button\" className=\"btn btn-primary\" onClick={capture}>\n          Capture\n        </button>\n      </div>\n    </>\n  );\n};\nexport default CameraModal;\n","import React, { useState } from \"react\";\nimport Cropper from \"react-cropper\";\nimport \"cropperjs/dist/cropper.css\";\nconst CropModal = ({ setShowCropModal, setPhoto, photo }) => {\n  const [cropper, setCropper] = useState();\n\n  const cropImage = () => {\n    if (typeof cropper !== \"undefined\") {\n      setPhoto(\n        cropper\n          .getCroppedCanvas({ width: 400, height: 400 })\n          .toDataURL(\"image/jpeg\", 1.0)\n      );\n    }\n    setShowCropModal(false);\n  };\n  return (\n    <>\n      <Cropper\n        style={{ width: \"100%\", height: 400 }}\n        initialAspectRatio={3 / 2}\n        background={false}\n        src={photo}\n        dragMode=\"none\"\n        cropBoxResizable={true}\n        onInitialized={(instance) => {\n          setCropper(instance);\n        }}\n      />\n      <div className=\"text-center mt-3\">\n        <button type=\"button\" className=\"btn btn-primary\" onClick={cropImage}>\n          Save\n        </button>\n      </div>\n    </>\n  );\n};\n\nexport default CropModal;\n","import axiosInstance from \"../../utils/axios\";\n\nexport const loadOptionsProvince = async (\n  search,\n  loadOptions,\n  { limit, offset }\n) => {\n  const { data } = await axiosInstance(\n    `api/v1/core-app/province/list?search=${search}&offset=${offset}&limit=${limit}`\n  );\n\n  return {\n    options: data.data,\n    hasMore: data.count > limit ? true : false,\n    additional: {\n      offset: limit,\n      limit: limit + 10,\n    },\n  };\n};\nexport const loadOptionsDistrict = async (\n  search,\n  loadOptions,\n  { limit, offset }\n) => {\n  const { data } = await axiosInstance(\n    `api/v1/core-app/district/list?search=${search}&offset=${offset}&limit=${limit}`\n  );\n\n  return {\n    options: data.data,\n    hasMore: data.count > limit ? true : false,\n    additional: {\n      offset: limit,\n      limit: limit + 10,\n    },\n  };\n};\n\n// total districts\nexport const loadOptionsTotalDistrict = async (\n  search,\n  loadOptions,\n  { limit, offset, province }\n) => {\n  const { data } = await axiosInstance(\n    `api/v1/core-app/district-for-office/list?search=${search}&offset=${offset}&limit=${limit}`\n  );\n\n  return {\n    options: data.data,\n    hasMore: data.count > limit ? true : false,\n    additional: {\n      offset: limit,\n      limit: limit + 10,\n    },\n  };\n};\nexport const loadOptionsOffice = async (\n  search,\n  loadOptions,\n  { limit, offset, province }\n) => {\n  const { data } = await axiosInstance(\n    `api/v1/core-app/district-for-office/list?search=${search}&offset=${offset}&limit=${limit}`\n  );\n\n  return {\n    options: data.data,\n    hasMore: data.count > limit ? true : false,\n    additional: {\n      offset: limit,\n      limit: limit + 10,\n    },\n  };\n};\n\nexport const loadOptionsPalika = async (\n  search,\n  loadOptions,\n  { limit, offset, district }\n) => {\n  const { data } = await axiosInstance(\n    `api/v1/core-app/palika/list?search=${search}&offset=${offset}&limit=${limit}&district__id=${\n      district !== null ? district?.id : \"\"\n    }`\n  );\n\n  return {\n    options: data.data,\n    hasMore: data.count > limit ? true : false,\n    additional: {\n      offset: limit,\n      limit: limit + 10,\n      district: district,\n    },\n  };\n};\n\nexport const loadOptionsIssuedCitizenship = async (\n  search,\n  loadOptions,\n  { limit, offset }\n) => {\n  const { data } = await axiosInstance(\n    `api/v1/core-app/district/list?search=${search}&offset=${offset}&limit=${limit}`\n  );\n\n  return {\n    options: data.data,\n    hasMore: data.count > limit ? true : false,\n    additional: {\n      offset: limit,\n      limit: limit + 10,\n    },\n  };\n};\n","import React, { useEffect, useState } from \"react\";\n\nconst ViewModal = ({ viewData }) => {\n  const [content, setContent] = useState(\"\");\n\n  useEffect(() => {\n    if (typeof viewData === \"string\") {\n      setContent(viewData);\n    } else if (viewData instanceof File) {\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        setContent(reader.result);\n      };\n      reader.readAsDataURL(viewData);\n    }\n  }, [viewData]);\n\n  return (\n    <div style={{ width: \"100%\", height: \"100%\" }}>\n      <iframe\n        src={content}\n        title=\"document-viewer\"\n        style={{ height: \"60vh\", width: \"100%\" }}\n      />\n    </div>\n  );\n};\n\nexport default ViewModal;\n","import \"./index.css\";\nimport Calendar from \"@sbmdkl/nepali-datepicker-reactjs\";\nimport \"@sbmdkl/nepali-datepicker-reactjs/dist/index.css\";\nimport React, { lazy } from \"react\";\nimport { ErrorMessage } from \"formik\";\nimport TextError from \"../TextError/TextError\";\n\nconst NepaliDatePicker = ({\n  name,\n  label,\n  required,\n  onChange,\n  formikRequired,\n  defaultDate,\n  placeholder,\n  isNotFormik,\n  value,\n  id,\n  className = \"\",\n}) => {\n  return (\n    <div className=\"common-datepicker-wrapper\">\n      <label htmlFor={name} className=\"form-label\">\n        {label} {required && <strong className=\"text-danger\">*</strong>}\n      </label>\n      <br />\n\n      <Calendar\n        name={name}\n        id={id}\n        value={value}\n        dateFormat=\"YYYY-MM-DD\"\n        defaultDate={defaultDate}\n        language=\"en\"\n        disabled={true}\n        placeholder={placeholder ? placeholder : \"Select Date\"}\n        className={\n          formikRequired\n            ? className + \"required-field form-control\"\n            : className + \"form-control\"\n        }\n        onChange={onChange}\n      />\n\n      {!isNotFormik && <ErrorMessage name={name} component={TextError} />}\n    </div>\n  );\n};\n\nexport default NepaliDatePicker;\n","import { ErrorMessage, Field, Form, Formik } from \"formik\";\nimport React, { Suspense, lazy, useEffect, useRef, useState } from \"react\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { FaEdit } from \"react-icons/fa\";\nimport { useDispatch } from \"react-redux\";\nimport Select from \"react-select\";\nimport { AsyncPaginate } from \"react-select-async-paginate\";\nimport * as Yup from \"yup\";\nimport { errorFunction } from \"../../Component/Alert\";\nimport RejectModal from \"../../Component/AlertModal/Reject\";\nimport Button from \"../../Component/Button/Button\";\nimport { genders } from \"../../Component/Data/Data\";\nimport Modal from \"../../Component/Modal\";\nimport Signature from \"../../Component/SignaturePad\";\nimport TextError from \"../../Component/TextError/TextError\";\nimport Thumb from \"../../Component/Thumb\";\nimport Tooltip from \"../../Component/Tooltip/Tooltip\";\nimport {\n  cardClearData,\n  createCard,\n  getCardRequest,\n  updateCard,\n  verifyCardThunk,\n} from \"../../Redux/Card/thunk\";\nimport defaultImage from \"../../assets/profile.png\";\nimport pdfImage from \"../../assets/PDF_file_icon.png\";\nimport { imageConvertor } from \"../../utils/imageConvertor\";\nimport CameraModal from \"./CameraModal\";\nimport CropModal from \"./CropModal\";\nimport {\n  loadOptionsDistrict,\n  loadOptionsOffice,\n  loadOptionsPalika,\n  loadOptionsProvince,\n} from \"./asyncFunction\";\nimport { useSelector } from \"react-redux\";\nimport { IoCameraOutline } from \"react-icons/io5\";\nimport { closeEditCardSuccessAction } from \"../../Redux/Card/actions\";\nimport ViewModal from \"./ViewModal\";\nimport NepaliDatePicker from \"../../Component/NepaliDatePicker\";\nimport Loader from \"../../Component/Loader\";\n\nconst CreateCard = ({\n  currentPage,\n  postsPerPage,\n  setShowModal,\n  showSignatureModal,\n  setShowSignatureModal,\n  verifyCard,\n  setSignaturesText,\n  setSignatures,\n  signatures,\n  edit,\n  editDetails,\n  masterData,\n  loading,\n  loadingCreate,\n  loadingUpdate,\n  loadingReject,\n  type,\n}) => {\n  const citizenshipFrontRef = useRef(null);\n  const citizenshipBackRef = useRef(null);\n  const birthCertificateRef = useRef(null);\n  const migrationDocumentRef = useRef(null);\n  const marriageDocumentsRef = useRef(null);\n  const recommendationLetterRef = useRef(null);\n\n  const office = useSelector((state) => state.auth.office);\n  const recommendationRequired = useSelector(\n    (state) => state.organizationSetup.recommendationRequired\n  );\n  const permissions = useSelector((state) => state.auth.permissions);\n  const isSuperuser = useSelector((state) => state.auth.isSuperuser);\n  const isAdmin = useSelector((state) => state.auth.isAdmin);\n  const canMinorApply = useSelector(\n    (state) => state.organizationSetup.canMinorApply\n  );\n\n  const dispatch = useDispatch();\n  const [showRejectModal, setShowRejectModal] = useState(false);\n  const [photo, setPhoto] = useState(null);\n  const [photoError, setPhotoError] = useState(false);\n  const [showCameraModal, setShowCameraModal] = useState(false);\n  const [showCropModal, setShowCropModal] = useState(false);\n  const [citizenshipFrontImg, setCitizenshipFrontImg] = useState(null);\n  const [citizenshipFrontImgError, setCitizenshipFrontImgError] =\n    useState(false);\n  const [citizenshipBackImg, setCitizenshipBackImg] = useState(null);\n  const [citizenshipBackImgError, setCitizenshipBackImgError] = useState(false);\n  const [birthCertificateImg, setBirthCertificateImg] = useState(null);\n  const [birthCertificateImgError, setBirthCertificateImgError] =\n    useState(false);\n  const [recommendationLetterImg, setRecommendationLetterImg] = useState(null);\n  const [recommendationLetterImgError, setRecommendationLetterImgError] =\n    useState(false);\n  const [migrationDocument, setMigratedDocument] = useState(null);\n  const [migrationDocumentError, setMigratedDocumentError] = useState(false);\n  const [marriageDocuments, setMarriageDocuments] = useState(null);\n  const [marriageDocumentsError, setMarriageDocumentsError] = useState(false);\n  const [isRecommended, setIsRecommended] = useState(false);\n  const [showViewModal, setShowViewModal] = useState(false);\n  const [hasCitizenship, setHasCitizenship] = useState(true);\n  const [viewData, setViewData] = useState(\"\");\n  const [migrated, setMigrated] = useState(false);\n  const [married, setMarried] = useState(false);\n  const [gender, setGender] = useState(null);\n  // load data from already registered\n\n  useEffect(() => {\n    if (masterData !== null) {\n      setPhoto(masterData?.userPhoto);\n      setCitizenshipFrontImg(masterData?.citizenshipFront);\n      setCitizenshipBackImg(masterData?.citizenshipBack);\n      setBirthCertificateImg(masterData?.birthCertificate);\n      setRecommendationLetterImg(masterData?.recommendationLetter);\n      setMigratedDocument(masterData?.migrationDocument);\n      setMarriageDocuments(masterData?.marriageDocuments);\n    }\n  }, [masterData]);\n\n  //initial state of the form\n  const initialState = {\n    office: edit ? masterData?.office : office,\n    firstName: edit ? masterData?.firstName : \"\",\n    middleName: edit ? masterData?.middleName : \"\",\n    lastName: edit ? masterData?.lastName : \"\",\n    dob: edit && masterData?.dob ? masterData?.dob : \"\",\n    dobBs: edit && masterData?.dobBs ? masterData?.dobBs : \"\",\n    tole: edit ? masterData?.tole : \"\",\n    age: \"\",\n    email: edit ? (masterData?.email ? masterData?.email : \"\") : \"\",\n    gender: edit\n      ? masterData.gender\n        ? genders.find((value) => value?.id === masterData?.gender)\n        : null\n      : null,\n    province: edit\n      ? masterData?.province\n        ? masterData?.province\n        : office?.province\n      : office?.province,\n    birthDistrict: edit\n      ? masterData?.birthDistrict\n        ? masterData?.birthDistrict\n        : null\n      : null,\n    birthPlace: edit\n      ? masterData?.birthPlace\n        ? masterData?.birthPlace\n        : null\n      : null,\n    district: edit\n      ? masterData?.district\n        ? masterData?.district\n        : office?.district\n      : office?.district,\n    palika: edit ? (masterData?.palika ? masterData?.palika : null) : null,\n    wardNumber: edit ? masterData?.wardNumber : \"\",\n\n    citizenshipNumber: edit\n      ? masterData?.citizenshipNumber\n        ? masterData?.citizenshipNumber\n        : \"\"\n      : \"\",\n    hasCitizenship: edit\n      ? masterData?.citizenshipIssuedDate\n        ? true\n        : false\n      : true,\n    citizenshipIssuedFrom: edit ? masterData?.citizenshipIssuedFrom : null,\n    citizenshipIssuedDate: edit ? masterData?.citizenshipIssuedDate : \"\",\n    fatherName: edit\n      ? masterData?.fatherName\n        ? masterData?.fatherName\n        : \"\"\n      : \"\",\n    spouseName: edit\n      ? masterData?.spouseName\n        ? masterData?.spouseName\n        : \"\"\n      : \"\",\n    mobileNumber: edit ? masterData?.mobileNumber : \"\",\n    isConfirmed: edit ? masterData?.isConfirmed : false,\n    migrated: edit ? masterData?.migrated : false,\n    migratedDistrict: edit ? masterData?.migratedDistrict : null,\n    married: edit ? masterData?.married : false,\n    marriedDistrict: edit ? masterData?.marriedDistrict : null,\n    remarks: \"\",\n  };\n  useEffect(() => {\n    if (!editDetails && !edit) {\n      if (recommendationRequired) {\n        setIsRecommended(true);\n      } else {\n        setIsRecommended(false);\n      }\n    } else {\n      setIsRecommended(masterData?.isRecommended);\n    }\n  }, [recommendationRequired, edit, masterData, editDetails]);\n\n  const validation = Yup.object().shape({\n    office: Yup.object().required(\"Required.\"),\n    firstName: Yup.string()\n      .required(\"Required.\")\n      .min(2, \"First Name must be at least 2 characters.\")\n      .max(50, \"First Name must be at most 50 characters.\"),\n    middleName: Yup.string().max(50, \"Name must be at most 50 characters.\"),\n    lastName: Yup.string()\n      .required(\"Required.\")\n      .min(2, \"Last Name must be at least 2 characters.\")\n      .max(50, \"Last Name must be at most 50 characters.\"),\n    email: Yup.string().email(\"@ is required\"),\n    mobileNumber: Yup.string()\n      .required(\"Required.\")\n      .matches(\n        /^[9]\\d{9}$/,\n        \"Mobile number should start with 9 and should be 10 digits.\"\n      ),\n\n    gender: Yup.object().required(\"Required.\").typeError(\"Required.\"),\n    province: Yup.object().required(\"Required.\").typeError(\"Required.\"),\n    birthPlace: Yup.object().required(\"Required.\").typeError(\"Required.\"),\n    district: Yup.object().required(\"Required.\").typeError(\"Required.\"),\n    palika: Yup.object().required(\"Required.\").typeError(\"Required.\"),\n    wardNumber: Yup.number()\n      .min(1, \"Ward number should be greater than 1.\")\n      .required(\"Required.\"),\n    tole: Yup.string().required(\"Required.\"),\n    dob: Yup.date()\n      .max(new Date(), \"Date of birth can not be greater than today's date.\")\n      .required(\"Required.\"),\n    hasCitizenship: Yup.bool(),\n    citizenshipNumber: Yup.string()\n      .required(\"Required.\")\n      .min(1, \"Citizenship Number must be at least 1 characters.\")\n      .max(100, \"Citizenship Number must be at most 100 characters.\"),\n\n    citizenshipIssuedFrom: Yup.object()\n      .required(\"Required.\")\n      .typeError(\"Required.\")\n      .test(\n        \"citizenshipIssuedFromTest\",\n        \"You must be either migrated or married to applied office district\",\n        function (citizenship) {\n          const office = this.parent.office;\n          const married = this.parent.married;\n          const migrated = this.parent.migrated;\n          let result = false;\n          if (\n            citizenship?.id !== office?.district?.id &&\n            !married &&\n            !migrated\n          ) {\n            result = false;\n          } else {\n            result = true;\n          }\n          return result;\n        }\n      ),\n\n    birthDistrict: Yup.object()\n      .nullable()\n      .test(\n        \"birthDistrictTest\",\n        \"You must be either migrated or married to applied office district\",\n        function (birthDistrict) {\n          const office = this.parent.office;\n          const married = this.parent.married;\n          const migrated = this.parent.migrated;\n          const hasCitizenship = this.parent.hasCitizenship;\n          let result = false;\n          if (!hasCitizenship) {\n            if (\n              birthDistrict?.id !== office?.district?.id &&\n              !married &&\n              !migrated\n            ) {\n              result = false;\n            } else {\n              result = true;\n            }\n          } else {\n            result = true;\n          }\n\n          return result;\n        }\n      ),\n    citizenshipIssuedDate: Yup.string().required(\"Required.\"),\n\n    fatherName: Yup.string()\n      .required(\"Required.\")\n      .min(2, \"Father Name must be at least 2 character.\")\n      .max(50, \"Father Name must be at most 50 characters.\"),\n    spouseName: Yup.string()\n      .min(2, \"Name must be at least 2 character.\")\n      .max(50, \"Name must be at most 50 characters.\")\n      .test(\"spouseTest\", \"Required.\", function (value) {\n        let result = true;\n        if (married) {\n          if (gender?.short === \"f\" && !value) {\n            result = false;\n          } else {\n            result = true;\n          }\n        }\n        return result;\n      }),\n\n    isConfirmed: Yup.bool(),\n    migrated: Yup.boolean(),\n    migratedDistrict: Yup.object()\n      .nullable()\n      .when(\"migrated\", {\n        is: (value) => value === true,\n        then: (schema) =>\n          schema\n            .required(\"Required\")\n            .test(\n              \"migratedTest1\",\n              \"We noticed that you selected 'migrated and married' as your status, and the district you are applying for is different from your migrated and married district.\",\n              function (migratedDistrict) {\n                const office = this.parent.office;\n                const married = this.parent.married;\n                const marriedDistrict = this.parent.marriedDistrict;\n                let result = true;\n                if (married) {\n                  if (\n                    marriedDistrict?.id !== office?.district?.id &&\n                    migratedDistrict?.id !== office?.district?.id\n                  ) {\n                    result = false;\n                  } else if (\n                    marriedDistrict?.id === office?.district?.id ||\n                    migratedDistrict?.id === office?.district?.id\n                  ) {\n                    result = true;\n                  } else {\n                    result = true;\n                  }\n                }\n                return result;\n              }\n            )\n            .test(\n              \"migratedTest2\",\n              \"We noticed that you selected 'migrated' as your status, and the district you are applying for is different from your migrated district.\",\n              function (migratedDistrict) {\n                const office = this.parent.office;\n                const married = this.parent.married;\n                let result = true;\n                if (!married) {\n                  if (migratedDistrict?.id !== office?.district?.id) {\n                    result = false;\n                  } else {\n                    result = true;\n                  }\n                }\n\n                return result;\n              }\n            ),\n        otherwise: (schema) => schema,\n      }),\n\n    married: Yup.boolean(),\n    marriedDistrict: Yup.object()\n      .nullable()\n      .when(\"married\", {\n        is: (value) => value === true,\n        then: (schema) =>\n          schema\n            .required(\"Required\")\n            .test(\n              \"marriedTest1\",\n              \"We noticed that you selected 'married and migrated' as your status, and the district you are applying for is different from your migrated and married district.\",\n              function (marriedDistrict) {\n                const office = this.parent.office;\n                const migrated = this.parent.migrated;\n                const migratedDistrict = this.parent.migratedDistrict;\n                let result = true;\n                if (migrated) {\n                  if (\n                    marriedDistrict?.id !== office?.district?.id &&\n                    migratedDistrict?.id !== office?.district?.id\n                  ) {\n                    result = false;\n                  } else if (\n                    marriedDistrict?.id === office?.district?.id &&\n                    migratedDistrict?.id === office?.district?.id\n                  ) {\n                    result = true;\n                  } else {\n                    result = true;\n                  }\n                }\n                return result;\n              }\n            )\n            .test(\n              \"marriedTest2\",\n              \"We noticed that you selected 'married' as your status, and the district you are applying for is different from your married district.\",\n              function (marriedDistrict) {\n                const office = this.parent.office;\n                const migrated = this.parent.migrated;\n                let result = true;\n                if (!migrated) {\n                  if (marriedDistrict?.id !== office?.district?.id) {\n                    result = false;\n                  } else {\n                    result = true;\n                  }\n                }\n\n                return result;\n              }\n            ),\n        otherwise: (schema) => schema,\n      }),\n  });\n\n  const calculateAge = (dob) => {\n    const birthDate = new Date(dob);\n    const today = new Date();\n    let age = today.getFullYear() - birthDate.getFullYear();\n    const monthDifference = today.getMonth() - birthDate.getMonth();\n\n    if (\n      monthDifference < 0 ||\n      (monthDifference === 0 && today.getDate() < birthDate.getDate())\n    ) {\n      age--;\n    }\n\n    return age;\n  };\n  const handleView = (document) => {\n    setViewData(document);\n    setShowViewModal(true);\n  };\n  const onSubmit = async (values) => {\n    const {\n      gender,\n      province,\n      district,\n      palika,\n      birthDistrict,\n      birthPlace,\n      citizenshipIssuedFrom,\n      marriedDistrict,\n      migratedDistrict,\n    } = values;\n\n    if (photo === null) {\n      setPhotoError(true);\n    } else {\n      setPhotoError(false);\n      if (hasCitizenship && citizenshipFrontImg === null) {\n        setCitizenshipFrontImgError(true);\n      } else {\n        setCitizenshipFrontImgError(false);\n        if (hasCitizenship && citizenshipBackImg === null) {\n          setCitizenshipBackImgError(true);\n        } else {\n          setCitizenshipBackImgError(false);\n          if (!hasCitizenship && birthCertificateImg === null) {\n            setBirthCertificateImgError(true);\n          } else {\n            setBirthCertificateImgError(false);\n            if (recommendationRequired && recommendationLetterImg === null) {\n              setRecommendationLetterImgError(true);\n            } else {\n              setRecommendationLetterImgError(false);\n              if (migrated && migrationDocument === null) {\n                setMigratedDocumentError(true);\n              } else {\n                setMigratedDocumentError(false);\n                if (married && marriageDocuments === null) {\n                  setMarriageDocumentsError(true);\n                } else {\n                  setMarriageDocumentsError(false);\n                  if (editDetails) {\n                    const id = masterData?.id;\n                    const convertedImage =\n                      photo !== \"\"\n                        ? await imageConvertor(photo, \"photo.png\", \"image/png\")\n                        : \"\";\n                    const result = await dispatch(\n                      updateCard(\n                        id,\n                        {\n                          ...values,\n                          userPhoto: convertedImage,\n                          citizenshipIssuedFrom: citizenshipIssuedFrom?.id,\n                          province: province?.id,\n                          district: district?.id,\n                          palika: palika?.id,\n                          gender: gender?.id,\n                          marriedDistrict:\n                            marriedDistrict !== null ? marriedDistrict?.id : \"\",\n                          migratedDistrict:\n                            migratedDistrict !== null\n                              ? migratedDistrict?.id\n                              : \"\",\n                          birthDistrict:\n                            birthDistrict !== null ? birthDistrict?.id : \"\",\n                          birthPlace: birthPlace !== null ? birthPlace?.id : \"\",\n                          isRecommended: isRecommended,\n                        },\n                        type,\n                        currentPage,\n                        postsPerPage\n                      )\n                    );\n\n                    if (result) {\n                      setShowModal(false);\n                      setBirthCertificateImg(null);\n                      setCitizenshipBackImg(null);\n                      setCitizenshipFrontImg(null);\n                      setRecommendationLetterImg(null);\n                      setMarriageDocuments(null);\n                      setMigratedDocument(null);\n                      setPhoto(null);\n                      dispatch(cardClearData());\n                    } else {\n                      setShowModal(true);\n                    }\n                  } else {\n                    const convertedImage =\n                      photo !== \"\"\n                        ? await imageConvertor(photo, \"photo.png\", \"image/png\")\n                        : \"\";\n                    const updatedValues = {\n                      ...values,\n                      userPhoto: convertedImage,\n                      citizenshipIssuedFrom: citizenshipIssuedFrom?.id,\n                      province: province?.id,\n                      district: district?.id,\n                      palika: palika?.id,\n                      gender: gender?.id,\n                      marriedDistrict:\n                        marriedDistrict !== null ? marriedDistrict?.id : \"\",\n                      migratedDistrict:\n                        migratedDistrict !== null ? migratedDistrict?.id : \"\",\n                      birthDistrict:\n                        birthDistrict !== null ? birthDistrict?.id : \"\",\n                      birthPlace: birthPlace !== null ? birthPlace?.id : \"\",\n                      citizenshipFrontImg:\n                        citizenshipFrontImg !== null\n                          ? citizenshipFrontImg\n                          : null,\n                      citizenshipBackImg:\n                        citizenshipBackImg !== null ? citizenshipBackImg : null,\n                      birthCertificateImg:\n                        birthCertificateImg !== null\n                          ? birthCertificateImg\n                          : null,\n                      recommendationLetterImg:\n                        recommendationLetterImg !== null\n                          ? recommendationLetterImg\n                          : null,\n                      isRecommended: isRecommended,\n                      marriageDocuments:\n                        marriageDocuments !== null ? marriageDocuments : null,\n                      migrationDocument:\n                        migrationDocument !== null ? migrationDocument : null,\n                    };\n                    if (!updatedValues?.userPhoto) {\n                      errorFunction(\"Photo is required\");\n                    }\n                    const result = await dispatch(\n                      createCard(updatedValues, currentPage, postsPerPage)\n                    );\n                    if (result) {\n                      setShowModal(false);\n                      setBirthCertificateImg(null);\n                      setCitizenshipBackImg(null);\n                      setCitizenshipFrontImg(null);\n                      setRecommendationLetterImg(null);\n                      setMarriageDocuments(null);\n                      setMigratedDocument(null);\n                      setPhoto(null);\n                      dispatch(cardClearData());\n                    } else {\n                      setShowModal(true);\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  };\n\n  const handleChangeImage = (file, fileRef) => {\n    if (file) {\n      const fileType = file.type;\n      let reader = new FileReader();\n      reader.readAsDataURL(file);\n      reader.onloadend = () => {\n        const base64URL = reader.result;\n        if (fileRef.current) {\n          if (fileType === \"application/pdf\") {\n            fileRef.current.src = pdfImage;\n          } else {\n            fileRef.current.src = base64URL;\n          }\n        }\n      };\n    }\n  };\n\n  const handleSubmit = async () => {\n    if (isSuperuser || isAdmin) {\n      errorFunction(\"Admin or Superuser can not perform this action\");\n    } else if (signatures[0] === \"\") {\n      errorFunction(\"Signature is not captured. Please capture signature.\");\n    } else {\n      const convertedImage =\n        photo !== \"\"\n          ? await imageConvertor(photo, \"photo.png\", \"image/png\")\n          : \"\";\n      const updatedValues = {\n        userPhoto: convertedImage,\n        signature: signatures,\n      };\n      const result = await dispatch(\n        verifyCardThunk(\n          masterData?.id,\n          updatedValues,\n          currentPage,\n          postsPerPage\n        )\n      );\n\n      if (result) {\n        setShowSignatureModal(false);\n        dispatch(getCardRequest(10));\n\n        setShowSignatureModal(false);\n        setSignatures([\"\"]);\n        setSignaturesText([\"\"]);\n        setShowModal(false);\n      } else {\n        setShowSignatureModal(true);\n      }\n    }\n  };\n\n  const handleImageClick = () => {\n    if (!edit) {\n      setShowCameraModal(true);\n    }\n  };\n\n  const handleViewDocument = (document) => {\n    if (typeof document === \"string\") {\n      const extension = document.substring(\n        document.length - 3,\n        document.length\n      );\n      if (extension === \"pdf\") {\n        return pdfImage;\n      } else {\n        return document;\n      }\n    }\n  };\n\n  const editPermission = permissions.includes(\"can_update_entrypass\");\n\n  return (\n    <>\n      {(loadingUpdate || loadingCreate) && <Loader />}\n      <Formik\n        enableReinitialize={edit}\n        initialValues={initialState}\n        validationSchema={validation}\n        onSubmit={edit ? handleSubmit : onSubmit}\n      >\n        {(formik) => {\n          const { setFieldValue } = formik;\n          console.log(formik.errors, \"errors\");\n          return (\n            <Form autoComplete=\"off\">\n              <div className=\"bg-white\" style={{ borderRadius: \"15px\" }}>\n                <div className=\"row\">\n                  <div style={{ borderRadius: \"15px\" }}>\n                    <div className=\"registration-process\">\n                      <div className=\"w-100\">\n                        {editPermission && edit && (\n                          <div className=\"mt-2 d-flex justify-content-end align-items-center\">\n                            <div>\n                              <Tooltip content=\"Edit\">\n                                <button\n                                  type=\"button\"\n                                  className=\"btn btn-sm btn-editDetails btn-primary mx-1\"\n                                  onClick={() => {\n                                    dispatch(closeEditCardSuccessAction());\n                                  }}\n                                >\n                                  <FaEdit size={18} />\n                                </button>\n                              </Tooltip>\n                            </div>\n                          </div>\n                        )}\n                        <div\n                          className=\"d-flex flex-column justify-content-center align-items-center\"\n                          style={{ position: \"relative\" }}\n                        >\n                          <img\n                            src={photo !== null ? photo : defaultImage}\n                            alt=\"Uploaded Preview\"\n                            height={130}\n                            width={130}\n                            onClick={handleImageClick}\n                            style={{\n                              cursor: \"pointer\",\n                              borderRadius: \"50%\",\n                              border: \"1px solid #ccc\",\n                              padding: \"5px\",\n                            }}\n                          />\n                          <IoCameraOutline\n                            size={25}\n                            style={{\n                              position: \"absolute\",\n                              top: \"60%\",\n                              left: \"54%\",\n                              background: \"#f1f1f1\",\n                              borderRadius: \"50%\",\n                            }}\n                            className=\"upload-icon\"\n                            onClick={handleImageClick}\n                          />\n                          <label\n                            htmlFor=\"userPhoto\"\n                            className=\"fw-bold float-start\"\n                          >\n                            Upload Picture\n                            <strong className=\"text-danger \">*</strong>\n                          </label>\n\n                          {photoError && <TextError>Required.</TextError>}\n                        </div>\n                      </div>\n                      <div className=\"form-group row my-2 \">\n                        <div className=\"mt-2 col-4\">\n                          <label\n                            htmlFor=\"firstName\"\n                            className=\"fw-bold float-start\"\n                          >\n                            First Name\n                            <strong className=\"text-danger \">*</strong>\n                          </label>\n                          <Field\n                            value={formik.values.firstName}\n                            type=\"text\"\n                            disabled={edit}\n                            name=\"firstName\"\n                            className=\"form-control \"\n                            placeholder=\"First Name\"\n                            onChange={(e) => {\n                              setFieldValue(\"firstName\", e.target.value);\n                            }}\n                          />\n                          <ErrorMessage\n                            name=\"firstName\"\n                            component={TextError}\n                          />\n                        </div>\n                        <div className=\"mt-2 col-4\">\n                          <label\n                            htmlFor=\"middleName\"\n                            className=\"fw-bold float-start\"\n                          >\n                            Middle Name\n                          </label>\n                          <Field\n                            type=\"text\"\n                            disabled={edit}\n                            name=\"middleName\"\n                            value={formik.values.middleName}\n                            className=\"form-control \"\n                            placeholder=\"Middle Name\"\n                            onChange={(e) => {\n                              setFieldValue(\"middleName\", e.target.value);\n                            }}\n                          />\n\n                          <ErrorMessage\n                            name=\"middleName\"\n                            component={TextError}\n                          />\n                        </div>\n                        <div className=\"mt-2 col-4\">\n                          <label\n                            htmlFor=\"lastName\"\n                            className=\"fw-bold float-start\"\n                          >\n                            Last Name\n                            <strong className=\"text-danger \">*</strong>\n                          </label>\n\n                          <Field\n                            type=\"text\"\n                            disabled={edit}\n                            value={formik.values.lastName}\n                            name=\"lastName\"\n                            className=\"form-control\"\n                            placeholder=\"Last Name\"\n                            onChange={(e) => {\n                              setFieldValue(\"lastName\", e.target.value);\n                            }}\n                          />\n                          <ErrorMessage name=\"lastName\" component={TextError} />\n                        </div>\n                        <div className=\"mt-2 col-4\">\n                          <label\n                            htmlFor=\"mobileNumber\"\n                            className=\"fw-bold float-start\"\n                          >\n                            Mobile Number\n                            <strong className=\"text-danger \">*</strong>\n                          </label>\n                          <Field\n                            type=\"text\"\n                            disabled={edit}\n                            value={formik.values.mobileNumber}\n                            name=\"mobileNumber\"\n                            onChange={(e) => {\n                              setFieldValue(\"mobileNumber\", e.target.value);\n                            }}\n                            className=\"form-control \"\n                            placeholder=\"Mobile Number\"\n                          />\n\n                          <ErrorMessage\n                            name=\"mobileNumber\"\n                            component={TextError}\n                          />\n                        </div>\n                        <div className=\"mt-2 col-4\">\n                          <label\n                            htmlFor=\"email\"\n                            className=\"fw-bold float-start\"\n                          >\n                            Email\n                          </label>\n                          <Field\n                            type=\"email\"\n                            value={formik.values.email}\n                            name=\"email\"\n                            onChange={(e) => {\n                              setFieldValue(\"email\", e.target.value);\n                            }}\n                            disabled={edit}\n                            className=\"form-control \"\n                            placeholder=\"Enter Your Email\"\n                          />\n\n                          <ErrorMessage name=\"email\" component={TextError} />\n                        </div>\n                        <div className=\"mt-2 col-4\">\n                          <label\n                            htmlFor=\"gender\"\n                            className=\"fw-bold float-start\"\n                          >\n                            Gender\n                            <strong className=\"text-danger \">*</strong>\n                          </label>\n                          <Select\n                            value={formik.values.gender}\n                            isClearable=\"true\"\n                            isSearchable=\"true\"\n                            className={\n                              edit ? \"select-field disabled\" : \"select-field\"\n                            }\n                            name=\"gender\"\n                            isDisabled={edit}\n                            getOptionLabel={(option) => `${option?.name} `}\n                            getOptionValue={(option) => `${option?.id}`}\n                            onChange={(selected) => {\n                              setGender(selected);\n                              setFieldValue(\"gender\", selected);\n                            }}\n                            options={genders}\n                          />\n                          <ErrorMessage name=\"gender\" component={TextError} />\n                        </div>\n                        {edit ? (\n                          <div className=\"mt-2 col-4\">\n                            <label\n                              htmlFor=\"dobBs\"\n                              className=\"fw-bold float-start\"\n                            >\n                              Date Of Birth(BS)\n                              <strong className=\"text-danger \">*</strong>\n                            </label>\n                            <Field\n                              type=\"text\"\n                              disabled\n                              value={formik.values?.dobBs}\n                              name=\"dobBs\"\n                              onChange={(e) => {\n                                setFieldValue(\"dobBs\", e.target.value);\n                              }}\n                              className=\"form-control \"\n                              placeholder=\"Date of Birth(BS)\"\n                            />\n\n                            <ErrorMessage name=\"dobBs\" component={TextError} />\n                          </div>\n                        ) : (\n                          <div className=\"mt-2 col-4\">\n                            <NepaliDatePicker\n                              label=\"Date of Birth (B.S.)\"\n                              name=\"dobBs\"\n                              id=\"dobBs\"\n                              placeholder=\"Date of Birth (B.S)\"\n                              required\n                              formikRequired={\n                                formik?.errors?.dob && formik?.touched?.dob\n                              }\n                              defaultDate={formik?.values?.dobBs}\n                              onChange={({ bsDate, adDate }) => {\n                                formik.setFieldValue(\"dobBs\", bsDate);\n                                formik.setFieldValue(\"dob\", adDate);\n                                const age = calculateAge(adDate);\n                                formik.setFieldValue(\"age\", age);\n                                if (canMinorApply) {\n                                  if (Number(age) < 16) {\n                                    formik.setFieldValue(\n                                      \"hasCitizenship\",\n                                      false\n                                    );\n                                  } else {\n                                    formik.setFieldValue(\n                                      \"hasCitizenship\",\n                                      true\n                                    );\n                                  }\n                                }\n                              }}\n                            />\n                            <ErrorMessage name=\"dobBs\" component={TextError} />\n                          </div>\n                        )}\n\n                        <div className=\"mt-2 col-4\">\n                          <label htmlFor=\"dob\" className=\"fw-bold float-start\">\n                            Date Of Birth (AD)\n                            <strong className=\"text-danger \">*</strong>\n                          </label>\n                          <Field\n                            type=\"text\"\n                            disabled={true}\n                            value={formik.values.dob}\n                            name=\"dob\"\n                            onChange={(e) => {\n                              setFieldValue(\"dob\", e.target.value);\n                            }}\n                            className=\"form-control \"\n                            placeholder=\"Date of Birth (A.D)\"\n                          />\n\n                          <ErrorMessage name=\"dob\" component={TextError} />\n                        </div>\n\n                        <div className=\"mt-2 col-4\">\n                          <label\n                            htmlFor=\"province\"\n                            className=\"fw-bold float-start\"\n                          >\n                            Province\n                            <strong className=\"text-danger \">*</strong>\n                          </label>\n                          <AsyncPaginate\n                            blurInputOnSelect\n                            value={formik.values.province}\n                            isClearable=\"true\"\n                            isSearchable=\"true\"\n                            name=\"province\"\n                            inputId=\"input\"\n                            className={\n                              edit || editDetails || office?.province\n                                ? \"select-field disabled\"\n                                : \"select-field\"\n                            }\n                            getOptionLabel={(option) => `${option.name}`}\n                            getOptionValue={(option) => `${option?.id}`}\n                            isDisabled\n                            onChange={(select) => {\n                              if (select) {\n                                if (\n                                  select?.id === formik.values?.province?.id\n                                ) {\n                                  setFieldValue(\"province\", select);\n                                } else {\n                                  setFieldValue(\"province\", select);\n                                  setFieldValue(\"district\", null);\n                                  setFieldValue(\"palika\", null);\n                                }\n                              } else {\n                                setFieldValue(\"province\", null);\n                                setFieldValue(\"district\", null);\n                                setFieldValue(\"palika\", null);\n                              }\n                            }}\n                            loadOptions={loadOptionsProvince}\n                            additional={{\n                              offset: 0,\n                              limit: 10,\n                            }}\n                          />\n\n                          <ErrorMessage name=\"province\" component={TextError} />\n                        </div>\n                        <div className=\"mt-2 col-4\">\n                          <label\n                            htmlFor=\"district\"\n                            className=\"fw-bold float-start\"\n                          >\n                            District\n                            <strong className=\"text-danger \">*</strong>\n                          </label>\n                          <AsyncPaginate\n                            blurInputOnSelect\n                            key={JSON.stringify(formik.values?.province)}\n                            value={formik.values.district}\n                            isClearable=\"true\"\n                            isSearchable=\"true\"\n                            name=\"district\"\n                            inputId=\"input\"\n                            className={\n                              edit || editDetails || office?.district\n                                ? \"select-field disabled\"\n                                : \"select-field\"\n                            }\n                            getOptionLabel={(option) => `${option.name}`}\n                            getOptionValue={(option) => `${option?.id}`}\n                            onChange={(select) => {\n                              if (select) {\n                                if (\n                                  select?.id === formik.values?.district?.id\n                                ) {\n                                  setFieldValue(\"district\", select);\n                                } else {\n                                  setFieldValue(\"district\", select);\n                                  setFieldValue(\"palika\", null);\n                                }\n                              } else {\n                                setFieldValue(\"district\", null);\n                                setFieldValue(\"palika\", null);\n                              }\n                            }}\n                            isDisabled\n                            loadOptions={loadOptionsDistrict}\n                            additional={{\n                              offset: 0,\n                              limit: 10,\n                              province: formik?.values?.province,\n                            }}\n                          />\n                          <ErrorMessage name=\"district\" component={TextError} />\n                        </div>\n\n                        <div className=\"mt-2 col-4\">\n                          <label\n                            htmlFor=\"palika\"\n                            className=\"fw-bold float-start\"\n                          >\n                            Palika\n                            <strong className=\"text-danger \">*</strong>\n                          </label>\n\n                          <AsyncPaginate\n                            blurInputOnSelect\n                            key={JSON.stringify(formik.values?.district)}\n                            disabled={\n                              formik?.values?.district === null\n                                ? true\n                                : false || edit\n                            }\n                            value={formik.values.palika}\n                            isClearable=\"true\"\n                            isSearchable=\"true\"\n                            name=\"palika\"\n                            inputId=\"input\"\n                            className={\n                              edit ? \"select-field disabled\" : \"select-field\"\n                            }\n                            isDisabled={\n                              formik?.values?.district === null\n                                ? true\n                                : false || edit\n                            }\n                            getOptionLabel={(option) => `${option.name}`}\n                            getOptionValue={(option) => `${option?.id}`}\n                            onChange={(selected) => {\n                              setFieldValue(\"palika\", selected);\n                            }}\n                            loadOptions={loadOptionsPalika}\n                            additional={{\n                              offset: 0,\n                              limit: 10,\n                              district: formik?.values?.district,\n                            }}\n                          />\n                          <ErrorMessage name=\"palika\" component={TextError} />\n                        </div>\n                        <div className=\"mt-2 col-4\">\n                          <label\n                            htmlFor=\"wardNumber\"\n                            className=\"fw-bold float-start\"\n                          >\n                            Ward\n                            <strong className=\"text-danger \">*</strong>\n                          </label>\n                          <Field\n                            type=\"number\"\n                            disabled={edit}\n                            value={formik.values.wardNumber}\n                            name=\"wardNumber\"\n                            onChange={(e) => {\n                              setFieldValue(\"wardNumber\", e.target.value);\n                            }}\n                            className=\"form-control \"\n                            placeholder=\"Ward\"\n                          />\n\n                          <ErrorMessage\n                            name=\"wardNumber\"\n                            component={TextError}\n                          />\n                        </div>\n\n                        <div className=\"mt-2 col-4\">\n                          <label htmlFor=\"tole\" className=\"fw-bold float-start\">\n                            Tole\n                            <strong className=\"text-danger \">*</strong>\n                          </label>\n                          <Field\n                            type=\"text\"\n                            disabled={edit}\n                            value={formik.values.tole}\n                            name=\"tole\"\n                            onChange={(e) => {\n                              setFieldValue(\"tole\", e.target.value);\n                            }}\n                            className=\"form-control \"\n                            placeholder=\"Tole\"\n                          />\n\n                          <ErrorMessage name=\"tole\" component={TextError} />\n                        </div>\n                        <div className=\"mt-2 col-4\">\n                          <label\n                            htmlFor=\"fatherName\"\n                            className=\"fw-bold float-start\"\n                          >\n                            Father Name{\" \"}\n                            <strong className=\"text-danger \">*</strong>\n                          </label>\n                          <Field\n                            type=\"text\"\n                            disabled={edit}\n                            value={formik.values.fatherName}\n                            name=\"fatherName\"\n                            onChange={(e) => {\n                              setFieldValue(\"fatherName\", e.target.value);\n                            }}\n                            className=\"form-control \"\n                            placeholder=\"Father Name\"\n                          />\n\n                          <ErrorMessage\n                            name=\"fatherName\"\n                            component={TextError}\n                          />\n                        </div>\n                        <div className=\"mt-2 col-4\">\n                          <label\n                            htmlFor=\"spouseName\"\n                            className=\"fw-bold float-start\"\n                          >\n                            Spouse Name\n                            {formik.values.married &&\n                              formik.values.gender?.id === \"f\" && (\n                                <strong className=\"text-danger \">*</strong>\n                              )}\n                          </label>\n                          <Field\n                            type=\"text\"\n                            disabled={edit}\n                            value={formik.values.spouseName}\n                            name=\"spouseName\"\n                            onChange={(e) => {\n                              setFieldValue(\"spouseName\", e.target.value);\n                            }}\n                            className=\"form-control \"\n                            placeholder=\"Spouse Name\"\n                          />\n\n                          <ErrorMessage\n                            name=\"spouseName\"\n                            component={TextError}\n                          />\n                        </div>\n                        <div className=\"mt-2 col-4\">\n                          <label\n                            htmlFor=\"office\"\n                            className=\"fw-bold float-start\"\n                          >\n                            Applying Office\n                            <strong className=\"text-danger \">*</strong>\n                          </label>\n\n                          <AsyncPaginate\n                            blurInputOnSelect\n                            key={JSON.stringify(formik.values?.office)}\n                            value={formik.values.office}\n                            isClearable=\"true\"\n                            isSearchable=\"true\"\n                            name=\"office\"\n                            inputId=\"input\"\n                            className={\n                              edit || editDetails\n                                ? \"select-field disabled\"\n                                : \"select-field\"\n                            }\n                            getOptionLabel={(option) => `${option.name}`}\n                            getOptionValue={(option) => `${option?.id}`}\n                            onChange={(selected) => {\n                              setFieldValue(\"office\", selected);\n                            }}\n                            loadOptions={loadOptionsOffice}\n                            additional={{\n                              offset: 0,\n                              limit: 10,\n                            }}\n                            isDisabled\n                          />\n                          <ErrorMessage name=\"office\" component={TextError} />\n                        </div>\n\n                        <div className=\"mt-2 col-4\">\n                          <label\n                            htmlFor=\"birthPlace\"\n                            className=\"fw-bold float-start\"\n                          >\n                            Birth Place\n                            <strong className=\"text-danger \">*</strong>\n                          </label>\n\n                          <AsyncPaginate\n                            blurInputOnSelect\n                            key={JSON.stringify(formik.values?.birthPlace)}\n                            value={formik.values.birthPlace}\n                            isClearable=\"true\"\n                            isSearchable=\"true\"\n                            name=\"birthPlace\"\n                            inputId=\"input\"\n                            className={\n                              edit ? \"select-field disabled\" : \"select-field\"\n                            }\n                            isDisabled={edit}\n                            getOptionLabel={(option) => `${option.name}`}\n                            getOptionValue={(option) => `${option?.id}`}\n                            onChange={(selected) => {\n                              if (!formik.values.hasCitizenship) {\n                                setFieldValue(\"birthDistrict\", selected);\n                              }\n                              setFieldValue(\"birthPlace\", selected);\n                            }}\n                            loadOptions={loadOptionsDistrict}\n                            additional={{\n                              offset: 0,\n                              limit: 10,\n                            }}\n                          />\n                          <ErrorMessage\n                            name=\"birthPlace\"\n                            component={TextError}\n                          />\n                        </div>\n                      </div>\n                      <div className=\"form-group row my-2 \">\n                        <div\n                          className=\"mt-2 col-12 d-flex\"\n                          style={{ gap: \"50px\" }}\n                        >\n                          <label\n                            htmlFor=\"hasCitizenship\"\n                            className=\"fw-bold float-start\"\n                          >\n                            <strong className=\"bold\">\n                              Do you have Citizenship?\n                            </strong>\n                            <strong className=\"text-danger \">*</strong>\n                          </label>\n\n                          <div\n                            className=\"d-flex flex-grow-1 \"\n                            style={{ gap: \"20px\" }}\n                          >\n                            <div className=\"form-check\">\n                              <Field\n                                type=\"radio\"\n                                id=\"hasCitizenshipYes\"\n                                name=\"hasCitizenship\"\n                                value={true}\n                                checked={formik.values.hasCitizenship === true}\n                                onChange={() => {\n                                  setHasCitizenship(true);\n                                  setFieldValue(\"hasCitizenship\", true);\n                                }}\n                                className=\"form-check-input\"\n                                disabled={\n                                  edit ||\n                                  !canMinorApply ||\n                                  (formik.values.dob !== \"\" &&\n                                    Number(formik.values.age) < 16)\n                                }\n                              />\n                              <label\n                                htmlFor=\"hasCitizenshipYes\"\n                                className=\"form-check-label\"\n                              >\n                                Yes\n                              </label>\n                            </div>\n\n                            <div className=\"form-check\">\n                              <Field\n                                type=\"radio\"\n                                id=\"hasCitizenshipNo\"\n                                name=\"hasCitizenship\"\n                                value={false}\n                                disabled={!canMinorApply}\n                                checked={formik.values.hasCitizenship === false}\n                                onChange={() => {\n                                  if (formik.values.birthPlace !== null) {\n                                    setFieldValue(\n                                      \"birthDistrict\",\n                                      formik.values.birthPlace\n                                    );\n                                  }\n                                  setHasCitizenship(false);\n                                  setFieldValue(\"hasCitizenship\", false);\n                                }}\n                                className=\"form-check-input\"\n                              />\n                              <label\n                                htmlFor=\"hasCitizenshipNo\"\n                                className=\"form-check-label\"\n                              >\n                                No\n                              </label>\n                            </div>\n                          </div>\n\n                          <ErrorMessage\n                            name=\"hasCitizenship\"\n                            component={TextError}\n                          />\n                        </div>\n                        {formik.values.hasCitizenship === true ? (\n                          <>\n                            <div className=\"mt-2 col-4\">\n                              <label\n                                htmlFor=\"citizenshipNumber\"\n                                className=\"fw-bold float-start\"\n                              >\n                                Citizenship No.\n                                {formik.values.hasCitizenship === true && (\n                                  <strong className=\"text-danger \">*</strong>\n                                )}\n                              </label>\n                              <Field\n                                type=\"text\"\n                                disabled={edit}\n                                value={formik.values.citizenshipNumber}\n                                name=\"citizenshipNumber\"\n                                onChange={(e) => {\n                                  setFieldValue(\n                                    \"citizenshipNumber\",\n                                    e.target.value\n                                  );\n                                }}\n                                className=\"form-control \"\n                                placeholder=\"Citizenship No\"\n                              />\n\n                              <ErrorMessage\n                                name=\"citizenshipNumber\"\n                                component={TextError}\n                              />\n                            </div>\n                            {edit ? (\n                              <div className=\"mt-2 col-4\">\n                                <label\n                                  htmlFor=\"citizenshipIssuedDate\"\n                                  className=\"fw-bold float-start\"\n                                >\n                                  Issued Date\n                                  <strong className=\"text-danger \">*</strong>\n                                </label>\n                                <Field\n                                  type=\"text\"\n                                  disabled\n                                  value={formik.values?.citizenshipIssuedDate}\n                                  name=\"citizenshipIssuedDate\"\n                                  onChange={(e) => {\n                                    setFieldValue(\n                                      \"citizenshipIssuedDate\",\n                                      e.target.value\n                                    );\n                                  }}\n                                  className=\"form-control \"\n                                  placeholder=\"Issued Date\"\n                                />\n\n                                <ErrorMessage\n                                  name=\"citizenshipIssuedDate\"\n                                  component={TextError}\n                                />\n                              </div>\n                            ) : (\n                              <div className=\"mt-2 col-4\">\n                                <NepaliDatePicker\n                                  label=\"Issued Date\"\n                                  name=\"citizenshipIssuedDate\"\n                                  id=\"citizenshipIssuedDate\"\n                                  placeholder=\"Issued Date (B.S.)\"\n                                  required\n                                  formikRequired={\n                                    formik?.errors?.citizenshipIssuedDate &&\n                                    formik?.touched?.citizenshipIssuedDate\n                                  }\n                                  defaultDate={\n                                    formik?.values?.citizenshipIssuedDate\n                                  }\n                                  onChange={({ bsDate, adDate }) => {\n                                    formik.setFieldValue(\n                                      \"citizenshipIssuedDate\",\n                                      bsDate\n                                    );\n                                  }}\n                                />\n                              </div>\n                            )}\n\n                            {/* citizenship issued from */}\n                            <div className=\"mt-2 col-4\">\n                              <label\n                                htmlFor=\"citizenshipIssuedFrom\"\n                                className=\"fw-bold float-start\"\n                              >\n                                Citizenship Issued From\n                                <strong className=\"text-danger \">*</strong>\n                              </label>\n\n                              <AsyncPaginate\n                                blurInputOnSelect\n                                key={JSON.stringify(\n                                  formik.values?.citizenshipIssuedFrom\n                                )}\n                                isDisabled={edit || editDetails}\n                                value={formik.values.citizenshipIssuedFrom}\n                                isClearable=\"true\"\n                                isSearchable=\"true\"\n                                name=\"citizenshipIssuedFrom\"\n                                inputId=\"input\"\n                                className={\n                                  edit || editDetails\n                                    ? \"select-field disabled\"\n                                    : \"select-field\"\n                                }\n                                getOptionLabel={(option) => `${option.name}`}\n                                getOptionValue={(option) => `${option?.id}`}\n                                onChange={(selected) => {\n                                  setFieldValue(\n                                    \"citizenshipIssuedFrom\",\n                                    selected\n                                  );\n                                }}\n                                loadOptions={loadOptionsDistrict}\n                                additional={{\n                                  offset: 0,\n                                  limit: 10,\n                                }}\n                              />\n                              <ErrorMessage\n                                name=\"citizenshipIssuedFrom\"\n                                component={TextError}\n                              />\n                            </div>\n\n                            <div className=\"mt-2 col-6\">\n                              <div className=\"d-flex flex-column\">\n                                <label\n                                  htmlFor=\"citizenshipFront\"\n                                  className=\"fw-bold float-start\"\n                                >\n                                  Citizenship Front\n                                  {formik.values.hasCitizenship === true && (\n                                    <strong className=\"text-danger \">*</strong>\n                                  )}\n                                </label>\n                                {citizenshipFrontImg && (\n                                  <img\n                                    ref={citizenshipFrontRef}\n                                    height={80}\n                                    width={80}\n                                    src={\n                                      edit || editDetails\n                                        ? handleViewDocument(\n                                            citizenshipFrontImg\n                                          )\n                                        : \"\"\n                                    }\n                                    onClick={() =>\n                                      handleView(citizenshipFrontImg)\n                                    }\n                                  />\n                                )}\n                              </div>\n                              <input\n                                type=\"file\"\n                                name=\"citizenshipFront\"\n                                accept=\"application/pdf,image/*\"\n                                disabled={edit || editDetails}\n                                className=\"form-control form-control-sm\"\n                                onChange={(event) => {\n                                  handleChangeImage(\n                                    event.target.files[0],\n                                    citizenshipFrontRef\n                                  );\n                                  setCitizenshipFrontImg(event.target.files[0]);\n                                }}\n                              />\n                              {citizenshipFrontImgError && (\n                                <TextError>Required.</TextError>\n                              )}\n                            </div>\n                            <div className=\"mt-2 col-6\">\n                              <div className=\"d-flex flex-column\">\n                                <label\n                                  htmlFor=\"citizenshipBack\"\n                                  className=\"fw-bold float-start\"\n                                >\n                                  Citizenship Back\n                                  {formik.values.hasCitizenship === true && (\n                                    <strong className=\"text-danger \">*</strong>\n                                  )}\n                                </label>\n                                {citizenshipBackImg && (\n                                  <img\n                                    ref={citizenshipBackRef}\n                                    height={80}\n                                    width={80}\n                                    src={\n                                      edit || editDetails\n                                        ? handleViewDocument(citizenshipBackImg)\n                                        : \"\"\n                                    }\n                                    onClick={() =>\n                                      handleView(citizenshipBackImg)\n                                    }\n                                  />\n                                )}\n                              </div>\n                              <input\n                                type=\"file\"\n                                disabled={edit || editDetails}\n                                name=\"citizenshipBack\"\n                                accept=\"application/pdf,image/*\"\n                                className=\"form-control form-control-sm\"\n                                onChange={(event) => {\n                                  setCitizenshipBackImg(event.target.files[0]);\n                                  handleChangeImage(\n                                    event.target.files[0],\n                                    citizenshipBackRef\n                                  );\n                                }}\n                              />\n                              {citizenshipBackImgError && (\n                                <TextError>Required.</TextError>\n                              )}\n                            </div>\n                          </>\n                        ) : (\n                          <>\n                            <div className=\"mt-2 col-6\">\n                              <label\n                                htmlFor=\"birthDistrict\"\n                                className=\"fw-bold float-start\"\n                              >\n                                Birth District\n                                <strong className=\"text-danger \">*</strong>\n                              </label>\n\n                              <AsyncPaginate\n                                blurInputOnSelect\n                                key={JSON.stringify(\n                                  formik.values?.birthDistrict\n                                )}\n                                value={formik.values.birthDistrict}\n                                isClearable=\"true\"\n                                isSearchable=\"true\"\n                                name=\"birthDistrict\"\n                                inputId=\"input\"\n                                className={\n                                  edit\n                                    ? \"select-field disabled\"\n                                    : \"select-field\"\n                                }\n                                isDisabled={edit || editDetails}\n                                getOptionLabel={(option) => `${option.name}`}\n                                getOptionValue={(option) => `${option?.id}`}\n                                onChange={(selected) => {\n                                  if (!formik.values.hasCitizenship) {\n                                    setFieldValue(\"birthPlace\", selected);\n                                  }\n                                  setFieldValue(\"birthDistrict\", selected);\n                                }}\n                                loadOptions={loadOptionsDistrict}\n                                additional={{\n                                  offset: 0,\n                                  limit: 10,\n                                }}\n                              />\n                              <ErrorMessage\n                                name=\"birthDistrict\"\n                                component={TextError}\n                              />\n                            </div>\n                            <div className=\"mt-2 col-6\">\n                              <div className=\"d-flex flex-column\">\n                                <label\n                                  htmlFor=\"birthCertificate\"\n                                  className=\"fw-bold float-start\"\n                                >\n                                  Birth Certificate\n                                  {formik.values.hasCitizenship === false && (\n                                    <strong className=\"text-danger \">*</strong>\n                                  )}\n                                </label>\n                                {birthCertificateImg && (\n                                  <img\n                                    ref={birthCertificateRef}\n                                    height={80}\n                                    width={80}\n                                    src={\n                                      edit || editDetails\n                                        ? handleViewDocument(\n                                            birthCertificateImg\n                                          )\n                                        : \"\"\n                                    }\n                                    onClick={() =>\n                                      handleView(birthCertificateImg)\n                                    }\n                                  />\n                                )}\n                              </div>\n                              <input\n                                type=\"file\"\n                                disabled={\n                                  !formik.values?.birthDistrict ||\n                                  edit ||\n                                  editDetails\n                                }\n                                name=\"birthCertificate\"\n                                accept=\"application/pdf,image/*\"\n                                className=\"form-control form-control-sm\"\n                                onChange={(event) => {\n                                  setBirthCertificateImg(event.target.files[0]);\n                                  handleChangeImage(\n                                    event.target.files[0],\n                                    birthCertificateRef\n                                  );\n                                }}\n                              />\n                              {birthCertificateImgError && (\n                                <TextError>Required.</TextError>\n                              )}\n                            </div>\n                          </>\n                        )}\n                      </div>\n\n                      {/* Migrated */}\n\n                      <div className=\"form-group row my-2 \">\n                        <div\n                          className=\"mt-2 col-12 d-flex\"\n                          style={{ gap: \"50px\" }}\n                        >\n                          <label\n                            htmlFor=\"migrated\"\n                            className=\"fw-bold float-start\"\n                          >\n                            <strong className=\"bold\">Are you Migrated ?</strong>\n                            <strong className=\"text-danger \">*</strong>\n                          </label>\n\n                          <div\n                            className=\"d-flex flex-grow-1 \"\n                            style={{ gap: \"20px\" }}\n                          >\n                            <div className=\"form-check\">\n                              <Field\n                                type=\"radio\"\n                                id=\"migratedYes\"\n                                name=\"migrated\"\n                                value={true}\n                                checked={formik.values.migrated === true}\n                                onChange={() => {\n                                  setMigrated(true);\n                                  setFieldValue(\"migrated\", true);\n                                  setFieldValue(\n                                    \"migratedDistrict\",\n                                    office?.district\n                                  );\n                                }}\n                                className=\"form-check-input\"\n                                disabled={edit || editDetails}\n                              />\n                              <label\n                                htmlFor=\"migratedYes\"\n                                className=\"form-check-label\"\n                              >\n                                Yes\n                              </label>\n                            </div>\n\n                            <div className=\"form-check\">\n                              <Field\n                                type=\"radio\"\n                                id=\"migratedNo\"\n                                name=\"migrated\"\n                                value={false}\n                                checked={formik.values.migrated === false}\n                                onChange={() => {\n                                  setMigrated(false);\n                                  setFieldValue(\"migrated\", false);\n                                  setFieldValue(\"migratedDistrict\", null);\n                                }}\n                                className=\"form-check-input\"\n                                disabled={edit || editDetails}\n                              />\n                              <label\n                                htmlFor=\"migratedNo\"\n                                className=\"form-check-label\"\n                              >\n                                No\n                              </label>\n                            </div>\n                          </div>\n\n                          <ErrorMessage name=\"migrated\" component={TextError} />\n                        </div>\n                        {formik.values.migrated && (\n                          <>\n                            <div className=\"mt-2 col-6\">\n                              <label\n                                htmlFor=\"migratedDistrict\"\n                                className=\"fw-bold float-start\"\n                              >\n                                Migrated District\n                                <strong className=\"text-danger \">*</strong>\n                              </label>\n\n                              <AsyncPaginate\n                                blurInputOnSelect\n                                key={JSON.stringify(\n                                  formik.values?.migratedDistrict\n                                )}\n                                value={formik.values.migratedDistrict}\n                                isClearable=\"true\"\n                                isSearchable=\"true\"\n                                name=\"migratedDistrict\"\n                                inputId=\"input\"\n                                className={\n                                  edit || editDetails\n                                    ? \"select-field disabled\"\n                                    : \"select-field\"\n                                }\n                                getOptionLabel={(option) => `${option.name}`}\n                                getOptionValue={(option) => `${option?.id}`}\n                                onChange={(selected) => {\n                                  setFieldValue(\"migratedDistrict\", selected);\n                                }}\n                                loadOptions={loadOptionsDistrict}\n                                additional={{\n                                  offset: 0,\n                                  limit: 10,\n                                }}\n                                isDisabled={edit || editDetails}\n                              />\n                              <ErrorMessage\n                                name=\"migratedDistrict\"\n                                component={TextError}\n                              />\n                            </div>\n\n                            <div className=\"mt-2 col-6\">\n                              <div className=\"d-flex flex-column\">\n                                <label\n                                  htmlFor=\"migrationDocument\"\n                                  className=\"fw-bold float-start\"\n                                >\n                                  Document\n                                  {formik.values.migrated === true && (\n                                    <strong className=\"text-danger \">*</strong>\n                                  )}\n                                </label>\n                                {migrationDocument && (\n                                  <img\n                                    ref={migrationDocumentRef}\n                                    height={80}\n                                    width={80}\n                                    src={\n                                      edit || editDetails\n                                        ? handleViewDocument(migrationDocument)\n                                        : \"\"\n                                    }\n                                    onClick={() =>\n                                      handleView(migrationDocument)\n                                    }\n                                  />\n                                )}\n                              </div>\n                              <input\n                                type=\"file\"\n                                name=\"migrationDocument\"\n                                accept=\"application/pdf,image/*\"\n                                disabled={\n                                  !formik.values.migrated || edit || editDetails\n                                }\n                                className=\"form-control form-control-sm\"\n                                onChange={(event) => {\n                                  setMigratedDocument(event.target.files[0]);\n                                  handleChangeImage(\n                                    event.target.files[0],\n                                    migrationDocumentRef\n                                  );\n                                }}\n                              />\n                              {migrationDocumentError && (\n                                <TextError>Required.</TextError>\n                              )}\n                            </div>\n                          </>\n                        )}\n                      </div>\n\n                      {/* end of migrated */}\n\n                      {/* marriage */}\n\n                      <div className=\"form-group row my-2 \">\n                        <div\n                          className=\"mt-2 col-12 d-flex\"\n                          style={{ gap: \"50px\" }}\n                        >\n                          <label\n                            htmlFor=\"married\"\n                            className=\"fw-bold float-start\"\n                          >\n                            <strong className=\"bold\">Are you Married ?</strong>\n                            <strong className=\"text-danger \">*</strong>\n                          </label>\n\n                          <div\n                            className=\"d-flex flex-grow-1 \"\n                            style={{ gap: \"20px\" }}\n                          >\n                            <div className=\"form-check\">\n                              <Field\n                                type=\"radio\"\n                                id=\"marriedYes\"\n                                name=\"married\"\n                                value={true}\n                                checked={formik.values.married === true}\n                                onChange={() => {\n                                  setMarried(true);\n                                  setFieldValue(\"married\", true);\n                                  setFieldValue(\n                                    \"marriedDistrict\",\n                                    office?.district\n                                  );\n                                }}\n                                className=\"form-check-input\"\n                                disabled={edit || editDetails}\n                              />\n                              <label\n                                htmlFor=\"marriedYes\"\n                                className=\"form-check-label\"\n                              >\n                                Yes\n                              </label>\n                            </div>\n\n                            <div className=\"form-check\">\n                              <Field\n                                type=\"radio\"\n                                id=\"marriedNo\"\n                                name=\"married\"\n                                value={false}\n                                checked={formik.values.married === false}\n                                onChange={() => {\n                                  setMarried(false);\n                                  setFieldValue(\"married\", false);\n                                  setFieldValue(\"marriedDistrict\", null);\n                                }}\n                                className=\"form-check-input\"\n                                disabled={edit || editDetails}\n                              />\n                              <label\n                                htmlFor=\"marriedNo\"\n                                className=\"form-check-label\"\n                              >\n                                No\n                              </label>\n                            </div>\n                          </div>\n\n                          <ErrorMessage name=\"married\" component={TextError} />\n                        </div>\n                        {formik.values.married && (\n                          <>\n                            <div className=\"mt-2 col-6\">\n                              <label\n                                htmlFor=\"marriedDistrict\"\n                                className=\"fw-bold float-start\"\n                              >\n                                Married District\n                                <strong className=\"text-danger \">*</strong>\n                              </label>\n\n                              <AsyncPaginate\n                                blurInputOnSelect\n                                key={JSON.stringify(\n                                  formik.values?.marriedDistrict\n                                )}\n                                value={formik.values.marriedDistrict}\n                                isClearable=\"true\"\n                                isSearchable=\"true\"\n                                name=\"marriedDistrict\"\n                                inputId=\"input\"\n                                className={\n                                  edit || editDetails\n                                    ? \"select-field disabled\"\n                                    : \"select-field\"\n                                }\n                                getOptionLabel={(option) => `${option.name}`}\n                                getOptionValue={(option) => `${option?.id}`}\n                                onChange={(selected) => {\n                                  setFieldValue(\"marriedDistrict\", selected);\n                                }}\n                                loadOptions={loadOptionsDistrict}\n                                additional={{\n                                  offset: 0,\n                                  limit: 10,\n                                }}\n                                isDisabled={edit || editDetails}\n                              />\n                              <ErrorMessage\n                                name=\"marriedDistrict\"\n                                component={TextError}\n                              />\n                            </div>\n\n                            <div className=\"mt-2 col-6\">\n                              <div className=\"d-flex flex-column\">\n                                <label\n                                  htmlFor=\"marriageDocuments\"\n                                  className=\"fw-bold float-start\"\n                                >\n                                  Document\n                                  {formik.values.married === true && (\n                                    <strong className=\"text-danger \">*</strong>\n                                  )}\n                                </label>\n                                {marriageDocuments && (\n                                  <img\n                                    ref={marriageDocumentsRef}\n                                    height={80}\n                                    width={80}\n                                    src={\n                                      edit || editDetails\n                                        ? handleViewDocument(marriageDocuments)\n                                        : \"\"\n                                    }\n                                    onClick={() =>\n                                      handleView(marriageDocuments)\n                                    }\n                                  />\n                                )}\n                              </div>\n                              <input\n                                type=\"file\"\n                                name=\"marriageDocuments\"\n                                accept=\"application/pdf,image/*\"\n                                disabled={\n                                  !formik.values.married || edit || editDetails\n                                }\n                                className=\"form-control form-control-sm\"\n                                onChange={(event) => {\n                                  setMarriageDocuments(event.target.files[0]);\n                                  handleChangeImage(\n                                    event.target.files[0],\n                                    marriageDocumentsRef\n                                  );\n                                }}\n                              />\n                              {marriageDocumentsError && (\n                                <TextError>Required.</TextError>\n                              )}\n                            </div>\n                          </>\n                        )}\n                      </div>\n\n                      {/* end of marriage */}\n                      <div className=\"form-group row my-2 \">\n                        <div className=\"col-12\">\n                          <div\n                            className=\"col-12 mt-2 d-flex\"\n                            style={{ gap: \"50px\" }}\n                          >\n                            <label\n                              htmlFor=\"isRecommended\"\n                              className=\"-bold float-start\"\n                            >\n                              <strong className=\"bold\">\n                                Do you have any Recommendation Letter?\n                              </strong>\n                            </label>\n\n                            <div className=\"d-flex\" style={{ gap: \"20px\" }}>\n                              <div className=\"form-check\">\n                                <Field\n                                  type=\"radio\"\n                                  id=\"isRecommendedYes\"\n                                  name=\"isRecommended\"\n                                  value={true}\n                                  disabled={\n                                    !isRecommended || edit || editDetails\n                                  }\n                                  checked={isRecommended === true}\n                                  onChange={() => \"\"}\n                                  className=\"form-check-input\"\n                                />\n                                <label\n                                  htmlFor=\"isRecommendedYes\"\n                                  className=\"form-check-label\"\n                                >\n                                  Yes\n                                </label>\n                              </div>\n\n                              <div className=\"form-check\">\n                                <Field\n                                  type=\"radio\"\n                                  id=\"isRecommendedNo\"\n                                  name=\"isRecommended\"\n                                  value={false}\n                                  disabled={\n                                    isRecommended || edit || editDetails\n                                  }\n                                  checked={isRecommended === false}\n                                  onChange={() => \"\"}\n                                  className=\"form-check-input\"\n                                />\n                                <label\n                                  htmlFor=\"isRecommendedNo\"\n                                  className=\"form-check-label\"\n                                >\n                                  No\n                                </label>\n                              </div>\n                            </div>\n\n                            <ErrorMessage\n                              name=\"isRecommended\"\n                              component={TextError}\n                            />\n                          </div>\n                          {isRecommended === true && (\n                            <div className=\"col-4 mt-2\">\n                              <div className=\"d-flex flex-column\">\n                                <label\n                                  htmlFor=\"recommendationLetter\"\n                                  className=\"fw-bold float-start\"\n                                >\n                                  Recommendation Letter\n                                  <strong className=\"text-danger \">*</strong>\n                                </label>\n                                {recommendationLetterImg && (\n                                  <img\n                                    ref={recommendationLetterRef}\n                                    height={80}\n                                    width={80}\n                                    src={\n                                      edit || editDetails\n                                        ? handleViewDocument(\n                                            recommendationLetterImg\n                                          )\n                                        : \"\"\n                                    }\n                                    onClick={() =>\n                                      handleView(recommendationLetterImg)\n                                    }\n                                  />\n                                )}\n                              </div>\n                              <input\n                                type=\"file\"\n                                name=\"recommendationLetter\"\n                                accept=\"application/pdf,image/*\"\n                                className=\"form-control form-control-sm\"\n                                disabled={edit || editDetails}\n                                onChange={(event) => {\n                                  formik.setFieldValue(\n                                    \"recommendationLetter\",\n                                    event.target.files[0]\n                                  );\n                                  setRecommendationLetterImg(\n                                    event.target.files[0]\n                                  );\n                                  handleChangeImage(\n                                    event.target.files[0],\n                                    recommendationLetterRef\n                                  );\n                                }}\n                              />\n                              {recommendationLetterImgError && (\n                                <TextError>Required.</TextError>\n                              )}\n                            </div>\n                          )}\n                        </div>\n                      </div>\n                      {edit && type === \"card\" && (\n                        <div className=\"d-flex justify-content-center align-items-center\">\n                          <div className=\"w-25 my-2\">\n                            <Signature\n                              showSignatureModal={showSignatureModal}\n                              setShowSignatureModal={setShowSignatureModal}\n                              signatures={signatures}\n                              setSignatures={setSignatures}\n                              setSignaturesText={setSignaturesText}\n                              setShowModal={setShowModal}\n                            />\n                          </div>\n                        </div>\n                      )}\n                      {!edit && (\n                        <div className=\"col-12 mt-3 text-center\">\n                          <Field\n                            type=\"checkbox\"\n                            name=\"isConfirmed\"\n                            id=\"isConfirmed\"\n                            className=\"filled-in chk-col-blue \"\n                            onChange={(e) => {\n                              setFieldValue(\"isConfirmed\", e.target.checked);\n                            }}\n                          />\n                          <label htmlFor=\"isConfirmed\" className=\"mx-2 fw-bold\">\n                            माथि पेश भएका विवरणहरु म निवेदक&nbsp;\n                            <strong>\n                              {formik.values.firstName}&nbsp;\n                              {formik.values.middleName}&nbsp;\n                              {formik.values.lastName}&nbsp;\n                            </strong>\n                            बाट स्वयं पेश भएको साँचो हो । झुट्ठा ठहरे कानून\n                            बमोजिम सहुँला/बुझाउँला ।\n                          </label>\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"form-group text-center d-flex m-2 justify-content-center align-items-center\">\n                {!edit && !isSuperuser && !isAdmin && (\n                  <Button\n                    type={\"submit\"}\n                    className={\"btn btn-primary\"}\n                    loading={loadingCreate || loadingUpdate}\n                    disabled={\n                      loadingCreate ||\n                      loadingUpdate ||\n                      verifyCard ||\n                      formik?.values?.isConfirmed === true\n                        ? false\n                        : true\n                    }\n                    title={editDetails ? \"Update\" : \"Create\"}\n                    content={editDetails ? \"Update\" : \"Add\"}\n                  />\n                )}\n                {edit && !isSuperuser && !isAdmin && console.log(\"!isSuperuser \"+!isSuperuser + \"&& !isAdmin:\" + !isAdmin) &&(\n                  <div className=\"d-flex align-items-center\">\n                    <div className=\"p-2\">\n                      <Button\n                        type={\"button\"}\n                        className={\"btn btn-danger\"}\n                        loading={loadingReject}\n                        disabled={verifyCard}\n                        onClick={() => setShowRejectModal(true)}\n                        // disabled={lock || loadingUpdate}\n                        title={\"Reject\"}\n                        content={\"Reject\"}\n                      />\n                    </div>\n                    <div className=\"align-items-center\">\n                      <Button\n                        type={\"button\"}\n                        className={\"btn btn-primary \"}\n                        loading={loadingUpdate}\n                        disabled={verifyCard}\n                        title={\"Update\"}\n                        content={\"Update\"}\n                        onClick={handleSubmit}\n                      />\n                    </div>\n                  </div>\n                )}\n              </div>\n            </Form>\n          );\n        }}\n      </Formik>\n      {showRejectModal && (\n        <Modal\n          header={\"Reason for rejecting this form.\"}\n          types={\"setup\"}\n          size={\"modal-sm\"}\n          setShowModal={setShowRejectModal}\n          showModal={showRejectModal}\n        >\n          <RejectModal\n            types={\"entryPass\"}\n            data={masterData}\n            dispatch={dispatch}\n            showRejectModal={showRejectModal}\n            setShowRejectModal={setShowRejectModal}\n            setShowModal={setShowModal}\n            setBirthCertificateImg={setBirthCertificateImg}\n            setCitizenshipBackImg={setCitizenshipBackImg}\n            setCitizenshipFrontImg={setCitizenshipFrontImg}\n            setRecommendationLetterImg={setRecommendationLetterImg}\n            setPhoto={setPhoto}\n            clearAction={cardClearData}\n            currentPage={currentPage}\n            postsPerPage={postsPerPage}\n          />\n        </Modal>\n      )}\n      {showCameraModal && (\n        <Modal\n          header={\"Capture Photo\"}\n          size=\"md\"\n          setShowModal={setShowCameraModal}\n          showModal={showCameraModal}\n        >\n          <CameraModal\n            setPhoto={setPhoto}\n            setShowModal={setShowCameraModal}\n            setShowCropModal={setShowCropModal}\n          />\n        </Modal>\n      )}\n\n      {showCropModal && (\n        <Modal\n          showModal={showCropModal}\n          setShowModal={setShowCropModal}\n          header=\"Crop Photo\"\n          size={\"modal-md change-password-size\"}\n        >\n          <CropModal\n            setShowCropModal={setShowCropModal}\n            setPhoto={setPhoto}\n            photo={photo}\n          />\n        </Modal>\n      )}\n      {showViewModal && (\n        <Modal\n          header={\"View\"}\n          size=\"modal-xl\"\n          setShowModal={setShowViewModal}\n          showModal={showViewModal}\n        >\n          <ViewModal viewData={viewData} />\n        </Modal>\n      )}\n    </>\n  );\n};\nexport default CreateCard;\n"],"names":["types","data","dispatch","setShowRejectModal","setShowModal","setBirthCertificateImg","setCitizenshipBackImg","setCitizenshipFrontImg","setRecommendationLetterImg","setPhoto","clearAction","currentPage","postsPerPage","useState","remarks","setRemarks","isSuperuser","useSelector","state","auth","isAdmin","handleReject","errorFunction","length","rejectEntryPass","id","className","type","name","onChange","e","target","value","placeholder","onClick","title","content","officeTypes","genders","statusTypes","statusTypesReprint","PaginationLimit","setPostsPerPage","Number","React","signatures","setSignatures","signaturesText","setSignaturesText","setShowSignatureModal","handleSignatureClear","pos","updatedSignatures","map","sign","i","updatedSignaturesText","useEffect","window","startSignatureService","src","signatureImage","alt","captureSignature","handleSignatureCapture","disabled","imageConvertor","dataUrl","fileName","fetch","res","blob","File","setShowCropModal","webcamRef","useRef","width","audio","screenshotFormat","ref","videoConstraints","facingMode","image","current","getScreenshot","photo","cropper","setCropper","style","height","initialAspectRatio","background","dragMode","cropBoxResizable","onInitialized","instance","getCroppedCanvas","toDataURL","loadOptionsProvince","search","loadOptions","limit","offset","axiosInstance","options","hasMore","count","additional","loadOptionsDistrict","loadOptionsOffice","province","loadOptionsPalika","district","viewData","setContent","reader","FileReader","onloadend","result","readAsDataURL","label","required","formikRequired","defaultDate","isNotFormik","htmlFor","dateFormat","language","component","TextError","showSignatureModal","verifyCard","edit","editDetails","masterData","loadingCreate","loading","loadingUpdate","loadingReject","citizenshipFrontRef","citizenshipBackRef","birthCertificateRef","migrationDocumentRef","marriageDocumentsRef","recommendationLetterRef","office","recommendationRequired","organizationSetup","permissions","canMinorApply","useDispatch","showRejectModal","photoError","setPhotoError","showCameraModal","setShowCameraModal","showCropModal","citizenshipFrontImg","citizenshipFrontImgError","setCitizenshipFrontImgError","citizenshipBackImg","citizenshipBackImgError","setCitizenshipBackImgError","birthCertificateImg","birthCertificateImgError","setBirthCertificateImgError","recommendationLetterImg","recommendationLetterImgError","setRecommendationLetterImgError","migrationDocument","setMigratedDocument","migrationDocumentError","setMigratedDocumentError","marriageDocuments","setMarriageDocuments","marriageDocumentsError","setMarriageDocumentsError","isRecommended","setIsRecommended","showViewModal","setShowViewModal","hasCitizenship","setHasCitizenship","setViewData","migrated","setMigrated","married","setMarried","gender","setGender","userPhoto","citizenshipFront","citizenshipBack","birthCertificate","recommendationLetter","initialState","firstName","middleName","lastName","dob","dobBs","tole","age","email","birthDistrict","birthPlace","palika","wardNumber","citizenshipNumber","citizenshipIssuedDate","citizenshipIssuedFrom","fatherName","spouseName","mobileNumber","isConfirmed","migratedDistrict","marriedDistrict","validation","Yup","shape","min","max","matches","typeError","Date","test","citizenship","this","parent","nullable","short","when","is","then","schema","otherwise","handleView","document","onSubmit","values","convertedImage","updateCard","cardClearData","updatedValues","createCard","handleChangeImage","file","fileRef","fileType","base64URL","pdfImage","handleSubmit","signature","verifyCardThunk","getCardRequest","handleImageClick","handleViewDocument","substring","editPermission","includes","Loader","enableReinitialize","initialValues","validationSchema","formik","setFieldValue","console","log","errors","autoComplete","borderRadius","Tooltip","closeEditCardSuccessAction","size","position","defaultImage","cursor","border","padding","top","left","isClearable","isSearchable","isDisabled","getOptionLabel","option","getOptionValue","selected","touched","bsDate","adDate","birthDate","today","getFullYear","monthDifference","getMonth","getDate","calculateAge","blurInputOnSelect","inputId","select","JSON","stringify","gap","checked","accept","event","files","Button","Modal","header","showModal","Reject"],"sourceRoot":""}