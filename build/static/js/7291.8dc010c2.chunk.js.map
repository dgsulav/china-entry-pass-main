{"version":3,"file":"static/js/7291.8dc010c2.chunk.js","mappings":"2MACAA,EAAAA,GAAAA,YAEO,IAAMC,EAAgB,SAACC,GAC5B,IAAMC,EAAgC,kBAAVD,EAAqBA,EAAQ,QACzDF,EAAAA,GAAAA,MAAYG,EAAc,CACxBC,SAAU,YACVC,UAAW,KACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,KAKDC,EAAkB,SAACC,GAC9B,IAAMC,EAAiC,kBAATD,EAAoBA,EAAO,UACzDb,EAAAA,GAAAA,QAAcc,EAAgB,CAC5BV,SAAU,YACVC,UAAW,KACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,KAIDI,EAAe,SAACF,GAC3B,IAAMG,EAA8B,kBAATH,EAAoBA,EAAO,UACtDb,EAAAA,GAAAA,KAAWgB,EAAa,CACtBZ,SAAU,YACVC,UAAW,KACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,M,mECZd,IAvBe,SAAC,GAST,IARLM,EAQI,EARJA,KACAC,EAOI,EAPJA,UACAC,EAMI,EANJA,SACAC,EAKI,EALJA,MACAC,EAII,EAJJA,QACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,MACAC,EACI,EADJA,QAEA,OACE,SAAC,IAAD,CAASF,QAASA,EAAlB,UACE,mBACEE,QAASA,EACTP,KAAMA,EACNC,UAAWA,EACXC,SAAUA,EAJZ,SAMGE,GAAU,SAAC,IAAD,CAASE,MAAOA,IAAYH,Q,yDCT/C,IAXgB,WACd,OACE,gBACEK,IAAKC,EACLC,IAAI,UAEJC,OAAO,W,8ECFb,EAJkB,SAACC,GACjB,OAAO,gBAAKX,UAAU,QAAf,SAAwBW,EAAMC,a,yDCGvC,IAJgB,SAAC,GAA2B,IAAzBR,EAAwB,EAAxBA,QAASQ,EAAe,EAAfA,SAC1B,OAAO,SAAC,KAAD,CAAOR,QAASA,EAAhB,SAA0BQ,M,wMCYnC,IAba,IAAIC,MAAOC,cAET,WACb,OACE,iBAAKd,UAAU,0BAAf,WACE,gBAAKO,IAAKQ,EAAMN,IAAI,cAAcO,MAAO,CAAEN,OAAQ,WACnD,cAAGM,MAAO,CAAEC,WAAY,OAAQC,aAAc,MAAOC,cAAc,OAAnE,wEC2KN,EAzKc,WAEZ,IAAMhB,GAAUiB,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAAWA,EAAMC,KAAKnB,WAC5CoB,GAAWC,EAAAA,EAAAA,MACjB,GAAwBC,EAAAA,EAAAA,UAAS,YAAjC,eAAO1B,EAAP,KAAa2B,EAAb,KASMC,EAAmBC,EAAAA,KAAaC,MAAM,CAC1CC,SAAUF,EAAAA,KACPG,SAAS,aACTC,IAAI,EAAG,0CACPC,QACC,wBACA,6CAEJC,SAAUN,EAAAA,KACPG,SAAS,aACTC,IAAI,EAAG,8CAQNG,EAAc,WAEhBT,EADW,aAAT3B,EACM,OAEA,aAGZ,OACE,gBAAKC,UAAU,YAAf,UACE,gBAAKA,UAAU,gBAAf,UACE,gBAAKA,UAAU,YAAf,UACE,gBAAKA,UAAU,6BAAf,UACE,iBAAKA,UAAU,iBAAf,WACE,iBAAKA,UAAU,kCAAf,WACE,gBAAKA,UAAU,qBAAf,UACE,iBAAKA,UAAU,WAAf,WACE,eAAIgB,MAAO,CAAEoB,WAAY,QAAzB,uBACA,uDAGJ,gBAAKpC,UAAU,uBAAf,UACE,gBAAKA,UAAU,MAAf,UACE,SAAC,KAAD,CACEqC,cA/CE,CACpBP,SAAW,GACXI,SAAU,IA8CQP,iBAAkBA,EAClBW,SA9BH,SAACC,GAChB,IAAQT,EAAuBS,EAAvBT,SAAUI,EAAaK,EAAbL,SAClBX,GAASiB,EAAAA,EAAAA,IAAMV,EAAUI,KAyBT,SAKG,WACC,OACE,UAAC,KAAD,CAAMO,aAAa,MAAMzC,UAAU,mBAAnC,WACE,iBAAKA,UAAU,QAAf,WACE,mBACE0C,QAAQ,WACR1C,UAAU,aACVgB,MAAO,CAAEoB,WAAY,OAAQO,SAAU,QAHzC,qBAKW,KACT,mBAAQ3C,UAAU,eAAlB,mBAEF,SAAC,KAAD,CACED,KAAK,OACLC,UAAU,+BACV4C,KAAK,WACLC,YAAY,oBAEd,SAAC,KAAD,CACED,KAAK,WACLE,UAAWC,EAAAA,QAGf,iBAAK/C,UAAU,uBAAf,WACE,mBACE0C,QAAQ,WACR1C,UAAU,cACVgB,MAAO,CAAEoB,WAAY,OAAQO,SAAU,QAHzC,qBAKW,KACT,mBAAQ3C,UAAU,eAAlB,mBAEF,iBAAKgB,MAAO,CAAE9B,SAAU,YAAxB,WACE,SAAC,KAAD,CACEa,KAAMA,EACNC,UAAU,+BACV4C,KAAK,WACLC,YAAY,oBAEd,iBACE7B,MAAO,CAAEgC,WAAY,OAAQC,IAAK,QAClC3C,QAAS6B,EAFX,SAIY,aAATpC,GACC,SAAC,MAAD,KAEA,SAAC,MAAD,UAIN,SAAC,KAAD,CACE6C,KAAK,WACLE,UAAWC,EAAAA,QAgBf,gBAAK/C,UAAU,8BAAf,UACE,SAACkD,EAAA,EAAD,CACEnD,KAAM,MACNC,UACE,qDAEFG,QAASA,EACTF,SAAUE,EACVD,MAAO,QACPE,QAAS,0BAqB3B,gBAAKJ,UAAU,8BAAf,UACE,0BACE,SAAC,EAAD,qB,qMCrKLwC,EAAQ,SAACW,GAAD,OAAUC,EAAAA,GAAAA,KAAA,aAAiCD,IAInDE,EAAgB,SAACF,GAAD,OAC3BC,EAAAA,GAAAA,KAAA,kCAAsDD,IAC3CG,EAAkB,SAACH,GAAD,OAC7BC,EAAAA,GAAAA,KAAA,0CAA8DD,IACnDI,EAAiB,SAAEJ,GAAF,OAC5BC,EAAAA,GAAAA,MAAA,uBAA4CD,IAGjCK,EAAkB,SAACL,GAAD,OAC7BC,EAAAA,GAAAA,MAAA,wBAA6CD,I,WCdlCM,EAAgB,iBAAO,CAClC1D,KAAM2D,EAAAA,EAAAA,UASKC,EAAqB,SAAChE,GAAD,MAAW,CAC3CI,KAAM2D,EAAAA,EAAAA,cACNE,QAASjE,IAaEkE,EAAqB,SAAClE,GAAD,MAAW,CAC3CI,KAAM2D,EAAAA,EAAAA,cACNE,QAASjE,IAaEmE,EAA8B,SAACC,GAAD,MAAe,CACxDhE,KAAM2D,EAAAA,EAAAA,wBACNE,QAASG,I,WCvCEvB,EAAQ,SAACV,EAAUI,GAAX,0CAAwB,WAAOX,GAAP,2FAEzCA,EAASyC,KACHb,EAAO,CAAErB,SAAAA,EAAUI,SAAAA,GAHgB,SAIlB+B,EAAUd,GAJQ,gBAIjCxD,EAJiC,EAIjCA,MAERD,EAAAA,EAAAA,IAAgB,WAAD,OAAYC,EAAKuE,KAAKpC,WACrCP,EAASyC,EAA0BrE,IAPM,kDASzCwE,QAAQC,IAAR,KAAmB,UACnBrF,EAAAA,EAAAA,IAAc,EAAD,IACbwC,GDA4BvC,ECAnB,KDA8B,CACzCe,KAAM2D,EAAAA,EAAAA,WACNE,QAAS5E,KCbkC,kCDWd,IAACA,ICXa,qBAAxB,uDA4BRqE,EAAgB,SAACgB,GAAD,0CAAW,WAAO9C,GAAP,2FAEpCA,ED3B6C,CAC/CxB,KAAM2D,EAAAA,EAAAA,yBC2BEP,EAAOmB,KAAKC,UAAU,CAAEF,MAAOA,IAHD,SAIbJ,EAAkBd,GAJL,gBAI5BxD,EAJ4B,EAI5BA,KACR4B,EAASyC,EAA0BrE,KACnCD,EAAAA,EAAAA,IAAgB,4BANoB,kDAQpC6B,GDV4BvC,ECUnB,KDV8B,CACzCe,KAAM2D,EAAAA,EAAAA,WACNE,QAAS5E,MCSPD,EAAAA,EAAAA,IAAc,oGATsB,kCDFT,IAACC,ICEQ,qBAAX,uDAchBsE,EACX,SAACpB,EAAUsC,EAAkBC,EAAOC,GAApC,0CAAgD,WAAOnD,GAAP,yFAE5CA,ED7CmC,CACvCxB,KAAM2D,EAAAA,EAAAA,gBC6CIP,EAAOmB,KAAKC,UAAU,CAAEE,MAAAA,EAAOvC,SAAAA,EAAUsC,iBAAAA,IAHH,SAIrBP,EAAoBd,GAJC,kBAIpCxD,KACR4B,EDlBqC,CACzCxB,KAAM2D,EAAAA,EAAAA,4BCkBFhE,EAAAA,EAAAA,IAAgB,yCAChB6B,EAAS,CAAExB,KAAM2D,EAAAA,EAAAA,cAA6BE,QAAS,KACvDc,EAAQC,KAAK,KAR+B,kDAU5CpD,GDpB4BvC,ECoBnB,KDpB8B,CAC3Ce,KAAM2D,EAAAA,EAAAA,sBACNE,QAAS5E,MCmBLD,EAAAA,EAAAA,IAAc,4BAX8B,kCDVjB,IAACC,ICUgB,qBAAhD,uDAeWuE,EACX,SAACqB,EAAc1C,EAAUsC,EAAkBE,GAA3C,0CAAuD,WAAOnD,GAAP,yFAEnDA,EAASyC,KACHb,EAAOmB,KAAKC,UAAU,CAAErC,SAAAA,EAAU0C,aAAAA,EAAcJ,iBAAAA,IAHH,SAI5BP,EAAmBd,GAJS,OAI7CY,EAJ6C,OAKnDxC,EAASyC,EAAmCD,KAC5CrE,EAAAA,EAAAA,IAAgB,kCAChBgF,EAAQC,KAAK,KAPsC,kDASnDpD,GD1BmCvC,EC0B1B,KD1BqC,CAClDe,KAAM2D,EAAAA,EAAAA,qBACNE,QAAS5E,MCyBLD,EAAAA,EAAAA,IAAc,EAAD,IAVsC,kCDjBjB,IAACC,ICiBgB,qBAAvD,uDAeWwE,EAAkB,SAACqB,GAAD,0CAAe,WAAOtD,GAAP,yFAE1CA,EAASyC,KACHb,EAAOmB,KAAKC,UAAU,CAAEM,UAAAA,EAAWC,mBAAmB,IAHlB,SAInBb,EAAoBd,GAJD,cAIpCY,EAJoC,QAK1CrE,EAAAA,EAAAA,IAAgB,kCAChB6B,GDzByC5B,ECyBhC,OAAoCoE,QAApC,IAAoCA,OAApC,EAAoCA,EAAUpE,KDzBJ,CACrDI,KAAM2D,EAAAA,EAAAA,yBACNE,QAASjE,KCiBmC,mBAOnC,GAPmC,kCAS1C4B,GDvBsCvC,ECuB7B,KDvBwC,CACnDe,KAAM2D,EAAAA,EAAAA,sBACNE,QAAS5E,MCsBPD,EAAAA,EAAAA,IAAc,EAAD,IAV6B,kCDdL,IAACC,EALGW,ICmBC,qBAAf,wD,+ICtElBoF,GAHsBC,IAAAA,OAAa,CAC9CC,QAASC,sCAEyBF,IAAAA,OAAa,CAC/CC,QAASC,wBACTC,QAAS,CACP,eAAgB,uBAId/B,EAAgB4B,IAAAA,OAAa,CACjCC,QAASC,oCACTC,QAAS,CACP,eAAgB,sBAKpB/B,EAAcgC,aAAaC,QAAQC,KACjC,SAACC,GAIC,GAAIC,OAAOC,UAAUC,OAKnB,OAJAH,EAAOJ,QAAP,cAAkCQ,aAAaC,QAAQ,eAArB,iBACpBD,aAAaC,QAAQ,gBAC/B,KACJL,EAAON,QAAUC,oCACVK,KAGX,SAACvG,GACC,OAAO6G,QAAQC,OAAO9G,MAK1BoE,EAAcgC,aAAarB,SAASuB,KAClC,SAACS,GAAD,OAASA,IADX,mCAEE,WAAO/G,GAAP,sFAGQgH,EAAkBhH,EAAMuG,OAGF,MAA1BvG,EAAM+E,SAASkC,QACf,uBAAAD,EAAgBE,KAEhBC,EAAAA,EAAAA,SAAe,CAAEpG,KAAM2D,EAAAA,EAAAA,aAQO,qBAA9B,UAAA1E,EAAM+E,gBAAN,eAAgBpE,KAAKyG,OACpBJ,EAAgBK,OAlBrB,wBAqBIL,EAAgBK,QAAS,EArB7B,SAuBYlD,EAAOmB,KAAKC,UAAU,CAC1B+B,QAASX,aAAaC,QAAQ,kBAEhCD,aAAaY,WAAW,eA1B9B,SA2B6BnD,EAAcoD,KAAd,qBAAyCrD,GA3BtE,UA4B8B,OADlBY,EA3BZ,QA4BmBkC,OA5BnB,wBA6BQN,aAAac,QAAQ,cAArB,OAAoC1C,QAApC,IAAoCA,OAApC,EAAoCA,EAAUpE,KAAK+G,QACnDV,EAAgBb,QAAhB,sCAEcpB,QAFd,IAEcA,OAFd,EAEcA,EAAUpE,KAAK+G,QAhCrC,kBAiCetD,EAAc4C,IAjC7B,0DAoCMG,EAAAA,EAAAA,SAAe,CACbpG,KAAM2D,EAAAA,EAAAA,aArCd,WA8CgB,gBAAV1E,GACFF,EAAAA,GAAAA,MAAA,8BAIoB,kBAAlBE,EAAM2H,SACR7H,EAAAA,GAAAA,MAAY,gDAAiD,CAC3DK,UAAW,OAIgB,OAA3B,UAAAH,EAAM+E,gBAAN,eAAgBkC,SAClBnH,EAAAA,GAAAA,MAAY,gDAAiD,CAC3DK,UAAW,OAIgB,OAA3B,UAAAH,EAAM+E,gBAAN,eAAgBkC,SAClBnH,EAAAA,GAAAA,MAAY,uBAAwB,CAAEK,UAAW,OAItB,OAA3B,UAAAH,EAAM+E,gBAAN,eAAgBkC,SACE,4BAAlBjH,EAAM2H,QArEV,wBAuEIR,EAAAA,EAAAA,SAAe,CAAEpG,KAAM2D,EAAAA,EAAAA,aAvE3B,kBA0EWmC,QAAQC,OAAO9G,EAAM+E,SAASpE,KAAKiH,SA1E9C,aA8EI5H,EAAM+E,UACN/E,EAAM+E,SAASkC,QAAU,KACzBjH,EAAM+E,SAASkC,OAAS,KAhF5B,qBAkFQjH,EAAM+E,SAASpE,KAAKiH,OAlF5B,0CAmFaf,QAAQC,OAAR,UAAkB9G,EAAM+E,SAASpE,KAAKiH,UAnFnD,iCAqFaf,QAAQC,OAAR,UAAkB9G,EAAM+E,SAAS8C,cArF9C,iCAwFShB,QAAQC,OAAO9G,IAxFxB,0DAFF,uDA6FA,Q","sources":["Component/Alert/index.js","Component/Button/Button.js","Component/Spinner/Spinner.js","Component/TextError/TextError.js","Component/Tooltip/Tooltip.js","Component/Footer/Footer.js","Pages/Login/index.js","Redux/Auth/api.js","Redux/Auth/action.js","Redux/Auth/thunk.js","utils/axios.js"],"sourcesContent":["import { toast } from \"react-toastify\";\ntoast.configure();\n//toast for error\nexport const errorFunction = (error) => {\n  const errorMessage = typeof error === \"string\" ? error : \"error\";\n  toast.error(errorMessage, {\n    position: \"top-right\",\n    autoClose: 2500,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n    progress: undefined,\n  });\n};\n\n//toast for success\nexport const successFunction = (data) => {\n  const successMessage = typeof data === \"string\" ? data : \"success\";\n  toast.success(successMessage, {\n    position: \"top-right\",\n    autoClose: 2500,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n    progress: undefined,\n  });\n};\n//toast for info\nexport const infoFunction = (data) => {\n  const infoMessage = typeof data === \"string\" ? data : \"success\";\n  toast.info(infoMessage, {\n    position: \"top-right\",\n    autoClose: 2500,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n    progress: undefined,\n  });\n};\n","import React from \"react\";\nimport Spinner from \"../Spinner/Spinner\";\nimport Tooltip from \"../Tooltip/Tooltip\";\n\nconst Button = ({\n  type,\n  className,\n  disabled,\n  title,\n  loading,\n  content,\n  color,\n  onClick,\n}) => {\n  return (\n    <Tooltip content={content}>\n      <button\n        onClick={onClick}\n        type={type}\n        className={className}\n        disabled={disabled}\n      >\n        {loading ? <Spinner color={color} /> : title}\n      </button>\n    </Tooltip>\n  );\n};\nexport default Button;\n","import React from \"react\";\nimport spinner from \"../../assets/spinner.gif\";\nconst Spinner = () => {\n  return (\n    <img\n      src={spinner}\n      alt=\"spinner\"\n      // color={color}\n      height=\"50px\"\n    />\n  );\n};\n\nexport default Spinner;\n","import React from \"react\";\nimport \"./TextError.css\";\nconst TextError = (props) => {\n  return <div className=\"error\">{props.children}</div>;\n};\n\nexport default TextError;\n","import React from \"react\";\nimport Tippy from \"@tippyjs/react\";\nconst Tooltip = ({ content, children }) => {\n  return <Tippy content={content}>{children}</Tippy>;\n};\n\nexport default Tooltip;","import React from \"react\";\nimport logo from \"../../assets/nepal-government.png\";\nconst date = new Date().getFullYear();\n\nconst Footer = () => {\n  return (\n    <div className=\"d-flex align-items-end \">\n      <img src={logo} alt=\"footer-logo\" style={{ height: \"30px\" }} />\n      <p style={{ marginLeft: \"10px\", marginBottom: \"0px\", paddingBottom:\"5px\" }}>\n        Developed and Maintained By Department of Immigration\n      </p>\n    </div>\n  );\n};\n\nexport default Footer;\n","import React, { useState } from \"react\";\nimport \"./Login.css\";\nimport { Form, Field, Formik, ErrorMessage } from \"formik\";\nimport * as Yup from \"yup\";\nimport TextError from \"../../Component/TextError/TextError\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { login } from \"../../Redux/Auth/thunk\";\nimport { BsFillEyeFill, BsFillEyeSlashFill } from \"react-icons/bs\";\nimport Button from \"../../Component/Button/Button\";\nimport Footer from \"../../Component/Footer/Footer\";\nconst Login = () => {\n  // props\n  const loading = useSelector((state) => state.auth.loading);\n  const dispatch = useDispatch();\n  const [type, setType] = useState(\"password\");\n  //initial values of form field in formik\n  // const user = localStorage.getItem(\"username\");\n  const initialValues = {\n    username:  \"\",\n    password: \"\",\n  };\n\n  //validation rule for the form field in formik\n  const validationSchema = Yup.object().shape({\n    username: Yup.string()\n      .required(\"Required!\")\n      .min(3, \"Username must be at least 3 characters\")\n      .matches(\n        /(?=.*^[A-Za-z_]\\w).*$/,\n        \"Username should begin with _ or alphabet \"\n      ),\n    password: Yup.string()\n      .required(\"Required!\")\n      .min(4, \"Password should be at least 4 characters\"),\n  });\n  //submit handler for formik\n  const onSubmit = (values) => {\n    const { username, password } = values;\n    dispatch(login(username, password));\n  };\n  // toggle password\n  const handleClick = () => {\n    if (type === \"password\") {\n      setType(\"text\");\n    } else {\n      setType(\"password\");\n    }\n  };\n  return (\n    <div className=\"login-bak\">\n      <div className=\"account-pages\">\n        <div className=\"container\">\n          <div className=\"row justify-content-center\">\n            <div className=\"login-position\">\n              <div className=\"card overflow-hidden card-login\">\n                <div className=\"bg-primary bg-soft\">\n                  <div className=\"p-2 mt-3\">\n                    <h2 style={{ fontWeight: \"bold\" }}>Welcome!</h2>\n                    <h5>Sign in to continue.</h5>\n                  </div>\n                </div>\n                <div className=\"login-card-body pt-0\">\n                  <div className=\"p-2\">\n                    <Formik\n                      initialValues={initialValues}\n                      validationSchema={validationSchema}\n                      onSubmit={onSubmit}\n                    >\n                      {() => {\n                        return (\n                          <Form autoComplete=\"off\" className=\"form-horizontal \">\n                            <div className=\"mb-3 \">\n                              <label\n                                htmlFor=\"username\"\n                                className=\"form-label\"\n                                style={{ fontWeight: \"bold\", fontSize: \"12px\" }}\n                              >\n                                USERNAME{\" \"}\n                                <strong className=\"text-danger \">*</strong>\n                              </label>\n                              <Field\n                                type=\"text\"\n                                className=\"form-control textfield-login\"\n                                name=\"username\"\n                                placeholder=\"Enter Username\"\n                              />\n                              <ErrorMessage\n                                name=\"username\"\n                                component={TextError}\n                              />\n                            </div>\n                            <div className=\"mb-3  password-field\">\n                              <label\n                                htmlFor=\"password\"\n                                className=\"form-label \"\n                                style={{ fontWeight: \"bold\", fontSize: \"12px\" }}\n                              >\n                                PASSWORD{\" \"}\n                                <strong className=\"text-danger \">*</strong>\n                              </label>\n                              <div style={{ position: \"relative\" }}>\n                                <Field\n                                  type={type}\n                                  className=\"form-control textfield-login\"\n                                  name=\"password\"\n                                  placeholder=\"Enter Password\"\n                                />\n                                <span\n                                  style={{ lineHeight: \"10px\", top: \"11px\" }}\n                                  onClick={handleClick}\n                                >\n                                  {type === \"password\" ? (\n                                    <BsFillEyeSlashFill />\n                                  ) : (\n                                    <BsFillEyeFill />\n                                  )}\n                                </span>\n                              </div>\n                              <ErrorMessage\n                                name=\"password\"\n                                component={TextError}\n                              />\n                            </div>\n                            {/* <div className=\"form-check\">\n                              <Field\n                                type=\"checkbox\"\n                                className=\"form-check-input\"\n                                name=\"remember_me\"\n                              />\n                              <label\n                                className=\"form-check-label\"\n                                htmlFor=\"remember_me\"\n                              >\n                                Remember me\n                              </label>\n                            </div> */}\n                            <div className=\"mt-4 mb-3 text-center w-100\">\n                              <Button\n                                type={\"btn\"}\n                                className={\n                                  \"btn btn-primary waves-effect waves-light btn-login\"\n                                }\n                                loading={loading}\n                                disabled={loading}\n                                title={\"Login\"}\n                                content={\"Login\"}\n                              />\n                            </div>\n                            {/* <div className=\"text-center mt-2\">\n                              <Link\n                                to=\"/reset-password\"\n                                className=\"text-decoration-none\"\n                              >\n                                <i className=\"me-1 \">\n                                  <BiLock />\n                                </i>\n                                Forgot password?\n                              </Link>\n                            </div> */}\n                          </Form>\n                        );\n                      }}\n                    </Formik>\n                  </div>\n                </div>\n              </div>\n              <div className=\"mt-3 text-center text-white\">\n                <div>\n                  <Footer />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Login;\n","import axiosInstance from \"../../utils/axios\";\n\n//for login\nexport const login = (body) => axiosInstance.post(`auth/login`, body);\n//for logout\nexport const logout = (body) => axiosInstance.post(`auth/logout`, body);\n//for reset password\nexport const resetPassword = (body) =>\n  axiosInstance.post(`api/v1/user-app/password-reset/`, body);\nexport const confirmPassword = (body) =>\n  axiosInstance.post(`api/v1/user-app/password-reset/confirm/`, body);\nexport const changePassword = ( body) =>\n  axiosInstance.patch(`auth/change-password`, body);\n\n// update signature\nexport const updateSignature = (body) =>\n  axiosInstance.patch(`auth/update-signature`, body);","import { authConstants } from \"./constants\";\n// actions\nexport const loadingAction = () => ({\n  type: authConstants.LOADING,\n});\nexport const loadingResetAction = () => ({\n  type: authConstants.LOADING_RESET,\n});\nexport const LoadingResetPasswordAction = () => ({\n  type: authConstants.LOADING_RESET_PASSWORD,\n});\n\nexport const loginSuccessAction = (data) => ({\n  type: authConstants.LOGIN_SUCCESS,\n  payload: data,\n});\nexport const loginFailAction = (error) => ({\n  type: authConstants.LOGIN_FAIL,\n  payload: error,\n});\nexport const logoutSuccessAction = () => ({\n  type: authConstants.LOGOUT_SUCCESS,\n});\nexport const logoutFailAction = (error) => ({\n  type: authConstants.LOGOUT_FAIL,\n  payload: error,\n});\nexport const resetSuccessAction = (data) => ({\n  type: authConstants.RESET_SUCCESS,\n  payload: data,\n});\nexport const resetFailAction = (error) => ({\n  type: authConstants.RESET_FAIL,\n  payload: error,\n});\nexport const confirmSuccessAction = () => ({\n  type: authConstants.PASSWORD_CONFIRM_SUCCESS,\n});\nexport const confirmFailAction = (error) => ({\n  type: authConstants.PASSWORD_CONFIRM_FAIL,\n  payload: error,\n});\nexport const changePasswordSuccessAction = (response) => ({\n  type: authConstants.PASSWORD_CHANGE_SUCCESS,\n  payload: response,\n});\n\nexport const changePasswordFailAction = (error) => ({\n  type: authConstants.PASSWORD_CHANGE_FAIL,\n  payload: error,\n});\nexport const getAllBranchesSuccessAction = (data) => ({\n  type: authConstants.GET_ALL_BRANCHES_SUCCESS,\n  payload: data,\n});\nexport const getAllBranchesFailAction = (error) => ({\n  type: authConstants.GET_ALL_BRANCHES_FAIL,\n  payload: error,\n});\n\nexport const updateSignatureSuccessAction = (data) => ({\n  type: authConstants.UPDATE_SIGNATURE_SUCCESS,\n  payload: data,\n});\n\nexport const updateSignatureFailAction = (error) => ({\n  type: authConstants.UPDATE_SIGNATURE_FAIL,\n  payload: error,\n});\n","import * as API from \"./api\";\nimport * as action from \"./action\";\nimport { successFunction, errorFunction } from \"../../Component/Alert\";\nimport { authConstants } from \"./constants\";\n//login\nexport const login = (username, password) => async (dispatch) => {\n  try {\n    dispatch(action.loadingAction());\n    const body = { username, password };\n    const { data } = await API.login(body);\n    //for storing the states when login success on the basis of which we can change the route of page.\n    successFunction(`Welcome ${data.user.username}`);\n    dispatch(action.loginSuccessAction(data));\n  } catch (error) {\n    console.log(error, \"error\");\n    errorFunction(error);\n    dispatch(action.loginFailAction(error));\n  }\n};\n//logout function\nexport const logout = (token) => async (dispatch) => {\n  try {\n    dispatch(action.loadingAction());\n    const body = { refresh: token };\n    await API.logout(body);\n    dispatch(action.logoutSuccessAction());\n    successFunction(`You have been successfully logged out.`);\n  } catch (error) {\n    dispatch(action.logoutFailAction(error));\n    errorFunction(error);\n  }\n};\n//send email\nexport const resetPassword = (email) => async (dispatch) => {\n  try {\n    dispatch(action.LoadingResetPasswordAction());\n    const body = JSON.stringify({ email: email });\n    const { data } = await API.resetPassword(body);\n    dispatch(action.resetSuccessAction(data));\n    successFunction(`Email send successfully `);\n  } catch (error) {\n    dispatch(action.resetFailAction(error));\n    errorFunction(\n      `There is no active user associated with this e-mail address  || the password can not be changed `\n    );\n  }\n};\nexport const confirmPassword =\n  (password, confirm_password, token, history) => async (dispatch) => {\n    try {\n      dispatch(action.loadingResetAction());\n      const body = JSON.stringify({ token, password, confirm_password });\n      const { data } = await API.confirmPassword(body);\n      dispatch(action.confirmSuccessAction(data));\n      successFunction(`Password has been reset successfully `);\n      dispatch({ type: authConstants.RESET_SUCCESS, payload: [] });\n      history.push(\"/\");\n    } catch (error) {\n      dispatch(action.confirmFailAction(error));\n      errorFunction(`Failed to reset Password`);\n    }\n  };\n\nexport const changePassword =\n  (old_password, password, confirm_password, history) => async (dispatch) => {\n    try {\n      dispatch(action.loadingAction());\n      const body = JSON.stringify({ password, old_password, confirm_password });\n      const response = await API.changePassword(body);\n      dispatch(action.changePasswordSuccessAction(response));\n      successFunction(`Password changed successfully `);\n      history.push(\"/\");\n    } catch (error) {\n      dispatch(action.changePasswordFailAction(error));\n      errorFunction(error);\n    }\n  };\n\n// update signature\nexport const updateSignature = (signature) => async (dispatch) => {\n  try {\n    dispatch(action.loadingAction());\n    const body = JSON.stringify({ signature, signatureUpdating: true });\n    const response = await API.updateSignature(body);\n    successFunction(`Signature updated successfully`);\n    dispatch(action.updateSignatureSuccessAction(response?.data));\n    return true;\n  } catch (error) {\n    dispatch(action.updateSignatureFailAction(error));\n    errorFunction(error);\n  }\n};\n","import axios from \"axios\";\nimport { store } from \"../Redux/store\";\nimport { authConstants } from \"../Redux/Auth/constants\";\nimport { toast } from \"react-toastify\";\n\n//creating axios instance\nexport const publicAxiosInstance = axios.create({\n  baseURL: process.env.REACT_APP_BASE_URL,\n});\nexport const printerAxiosInstance = axios.create({\n  baseURL: process.env.REACT_APP_PRINTER_BASE_URL,\n  headers: {\n    \"Content-Type\": \"application/json\",\n  },\n});\n\nconst axiosInstance = axios.create({\n  baseURL: process.env.REACT_APP_BASE_URL,\n  headers: {\n    \"Content-Type\": \"application/json\",\n  },\n});\n//interceptor\n//request handling\naxiosInstance.interceptors.request.use(\n  (config) => {\n    // if (!window.navigator.onLine) {\n    //   return Promise.reject(\"No Internet\");\n    // }\n    if (window.navigator.onLine) {\n      config.headers[\"Authorization\"] = localStorage.getItem(\"accessToken\")\n        ? `Bearer ${localStorage.getItem(\"accessToken\")}`\n        : null;\n      config.baseURL = process.env.REACT_APP_BASE_URL;\n      return config;\n    }\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n//response handling\naxiosInstance.interceptors.response.use(\n  (res) => res,\n  async (error) => {\n    //refresh token\n\n    const originalRequest = error.config;\n    //when refresh token is also not valid\n    if (\n      error.response.status === 401 &&\n      originalRequest.url === `auth/token/refresh`\n    ) {\n      store.dispatch({ type: authConstants.AUTH_ERROR });\n      // return Promise.reject(error.response?.data.code);\n      // return toast.error(`Refresh Token Expired. Please Login.`, {\n      //   autoClose: 1200,\n      // });\n    }\n    //accessing new access token from refresh token\n    if (\n      error.response?.data.code === \"token_not_valid\" &&\n      !originalRequest._retry\n    ) {\n      //call for refresh token\n      originalRequest._retry = true;\n      try {\n        const body = JSON.stringify({\n          refresh: localStorage.getItem(\"refreshToken\"),\n        });\n        localStorage.removeItem(\"accessToken\");\n        const response = await axiosInstance.post(`auth/token/refresh`, body);\n        if (response.status === 200) {\n          localStorage.setItem(\"accessToken\", response?.data.access);\n          originalRequest.headers[\n            \"Authorization\"\n          ] = `Bearer ${response?.data.access}`;\n          return axiosInstance(originalRequest);\n        }\n      } catch (error) {\n        store.dispatch({\n          type: authConstants.AUTH_ERROR,\n        });\n\n        // return toast.error(`${error.response.data.error}`);\n        // return Promise.reject(error.response?.data.error);\n      }\n      // return store.dispatch({ type: AUTH_ERROR });\n    }\n    //no Internet\n    if (error === \"No Internet\") {\n      toast.error(`No Internet Connection !!!`);\n      // return Promise.reject(`No Internet`);\n    }\n    //server down\n    if (error.message === \"Network Error\") {\n      toast.error(\"Internal Server Error. Contact IT manager !!!\", {\n        autoClose: 1200,\n      });\n      // return Promise.reject(`Internal Server Error. Contact IT manager !!!`);\n    }\n    if (error.response?.status === 500) {\n      toast.error(\"Internal Server Error. Contact IT manager !!!\", {\n        autoClose: 1200,\n      });\n      // return Promise.reject(`Internal Server Error. Contact IT manager !!!`);\n    }\n    if (error.response?.status === 404) {\n      toast.error(\"Page Not Found !!!!!\", { autoClose: 1200 });\n    }\n    //unauthorized user\n    if (\n      error.response?.status === 401 ||\n      error.message === \"Invalid token specified\"\n    ) {\n      store.dispatch({ type: authConstants.AUTH_ERROR });\n      // toast.error(\"Unauthorized User\", { autoClose: 1200 });\n\n      return Promise.reject(error.response.data.detail);\n    }\n    //error between 400\n    const expectedError =\n      error.response &&\n      error.response.status >= 400 &&\n      error.response.status < 500;\n    if (expectedError) {\n      if (error.response.data.detail) {\n        return Promise.reject(`${error.response.data.detail}`);\n      } else {\n        return Promise.reject(`${error.response.statusText}`);\n      }\n    }\n    return Promise.reject(error);\n  }\n);\nexport default axiosInstance;\n"],"names":["toast","errorFunction","error","errorMessage","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","successFunction","data","successMessage","infoFunction","infoMessage","type","className","disabled","title","loading","content","color","onClick","src","spinner","alt","height","props","children","Date","getFullYear","logo","style","marginLeft","marginBottom","paddingBottom","useSelector","state","auth","dispatch","useDispatch","useState","setType","validationSchema","Yup","shape","username","required","min","matches","password","handleClick","fontWeight","initialValues","onSubmit","values","login","autoComplete","htmlFor","fontSize","name","placeholder","component","TextError","lineHeight","top","Button","body","axiosInstance","resetPassword","confirmPassword","changePassword","updateSignature","loadingAction","authConstants","loginSuccessAction","payload","resetSuccessAction","changePasswordSuccessAction","response","action","API","user","console","log","email","JSON","stringify","confirm_password","token","history","push","old_password","signature","signatureUpdating","printerAxiosInstance","axios","baseURL","process","headers","interceptors","request","use","config","window","navigator","onLine","localStorage","getItem","Promise","reject","res","originalRequest","status","url","store","code","_retry","refresh","removeItem","post","setItem","access","message","detail","statusText"],"sourceRoot":""}