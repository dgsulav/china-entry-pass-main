{"version":3,"file":"static/js/829.59e13dce.chunk.js","mappings":"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","sources":["Component/Alert/index.js","Component/NoData/NoData.js","Component/Pagination/DisplayEntries.js","Component/Pagination/index.js","Component/PaginationBlock/index.js","Component/Pagination/PaginationLimit.js","Component/PrintingLoader/index.js","Component/Skeleton/ListingSkeleton.js","Component/Tooltip/Tooltip.js","Redux/ApprovedCard/api.js","Redux/ApprovedCard/actions.js","Redux/ApprovedCard/thunk.js","Pages/ApprovedCard/PrintModal.js","Pages/ApprovedCard/ApprovedCard.js","Pages/ApprovedCard/index.js","utils/axios.js","utils/defaultLimit.js"],"sourcesContent":["import { toast } from \"react-toastify\";\ntoast.configure();\n//toast for error\nexport const errorFunction = (error) => {\n  const errorMessage = typeof error === \"string\" ? error : \"error\";\n  toast.error(errorMessage, {\n    position: \"top-right\",\n    autoClose: 2500,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n    progress: undefined,\n  });\n};\n\n//toast for success\nexport const successFunction = (data) => {\n  const successMessage = typeof data === \"string\" ? data : \"success\";\n  toast.success(successMessage, {\n    position: \"top-right\",\n    autoClose: 2500,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n    progress: undefined,\n  });\n};\n//toast for info\nexport const infoFunction = (data) => {\n  const infoMessage = typeof data === \"string\" ? data : \"success\";\n  toast.info(infoMessage, {\n    position: \"top-right\",\n    autoClose: 2500,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n    progress: undefined,\n  });\n};\n","import React from \"react\";\n\nconst index = () => {\n  return (\n    <div className=\"card w-50 p-5 text-center justify-content-center no-data\">\n      <h4 className=\"fw-normal mb-3\">No data to Display</h4>\n    </div>\n  );\n};\n\nexport default index;\n","import React from \"react\";\n\nconst DisplayEntries = ({ offset, limit, count }) => {\n  return(\n    <React.Fragment>\n      <p>\n        Showing {offset} to{\" \"}\n        {limit > count ? count : limit === 0 ? count : limit} of {count} entries\n      </p>  \n    </React.Fragment> \n  );\n};\n\nexport default React.memo(DisplayEntries);","import React from \"react\";\nconst Pagination = ({\n  postsPerPage,\n  totalPosts,\n  paginate,\n  handleClick,\n  currentPage,\n  maxPageNumberLimit,\n  minPageNumberLimit,\n}) => {\n  const pageNumbers = [];\n  if (postsPerPage > 0) {\n    for (let i = 1; i <= Math.ceil(totalPosts / postsPerPage); i++) {\n      pageNumbers.push(i);\n    }\n  }\n  let pageIncrementBtn = null;\n  if (pageNumbers.length > maxPageNumberLimit) {\n    pageIncrementBtn = (\n      <button className=\"page-link\" onClick={() => handleClick(\"next\")}>\n        &hellip;\n      </button>\n    );\n  }\n\n  let pageDecrementBtn = null;\n  if (minPageNumberLimit >= 1) {\n    pageDecrementBtn = (\n      <button className=\"page-link\" onClick={() => handleClick(\"previous\")}>\n        &hellip;\n      </button>\n    );\n  }\n  return (\n    <>\n      <ul className=\"pagination pagination-sm justify-content-end\">\n        <li className=\"page-item \">\n          <button\n            className=\"page-link\"\n            onClick={() => handleClick(\"previous\")}\n            disabled={currentPage === pageNumbers[0] ? true : false}\n          >\n            &laquo;\n          </button>\n        </li>\n        {/* {pageDecrementBtn} */}\n        {pageNumbers.map((number, i) => {\n          if (number < maxPageNumberLimit + 1 && number > minPageNumberLimit) {\n            return (\n              <li className=\"page-item\" key={number}>\n                <button\n                  onClick={() => paginate(number)}\n                  className={`page-link ${\n                    i + 1 === currentPage ? \"active\" : null\n                  }`}\n                >\n                  {number}\n                </button>\n              </li>\n            );\n          } else {\n            return null;\n          }\n        })}\n        {/* {pageIncrementBtn} */}\n        <li className=\"page-item\">\n          <button\n            className=\"page-link\"\n            onClick={() => handleClick(\"next\")}\n            disabled={\n              currentPage === pageNumbers[pageNumbers.length - 1] ? true : false\n            }\n          >\n            &raquo;\n          </button>\n        </li>\n      </ul>\n    </>\n  );\n};\n\nexport default React.memo(Pagination);\n","import React from \"react\";\nimport DisplayEntries from \"../Pagination/DisplayEntries\";\nimport Pagination from \"../Pagination\";\nconst index = ({\n  currentPage,\n  postsPerPage,\n  count,\n  paginate,\n  handleClick,\n  setCurrentPage,\n  minPageNumberLimit,\n  maxPageNumberLimit,\n}) => {\n  return (\n    <>\n      <div className=\"row\">\n        <div className=\"col-6\">\n          <DisplayEntries\n            offset={1 + (currentPage - 1) * postsPerPage}\n            limit={postsPerPage * currentPage}\n            count={count}\n          />\n        </div>\n        {postsPerPage < count && (\n          <div className=\"col-6 text-right\">\n            <Pagination\n              postsPerPage={postsPerPage}\n              totalPosts={count}\n              paginate={paginate}\n              handleClick={handleClick}\n              currentPage={currentPage}\n              setCurrentPage={setCurrentPage}\n              minPageNumberLimit={minPageNumberLimit}\n              maxPageNumberLimit={maxPageNumberLimit}\n            />\n          </div>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default index;\n","import React from \"react\";\n\nconst PaginationLimit = ({ postsPerPage, setPostsPerPage }) => {\n  const handleChange = (e) => {\n    const data = Number(e.target.value);\n    setPostsPerPage(data);\n  };\n  return (\n    <>\n      <p className=\"fw-normal p-0 m-0\">\n        Show\n        <span className=\"ml-1 mr-1\">\n          {\" \"}\n          <select value={postsPerPage} onChange={handleChange}>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n            <option value=\"40\">40</option>\n            <option value=\"99999999\">All</option>\n          </select>\n        </span>{\" \"}\n        entries\n      </p>\n    </>\n  );\n};\n\nexport default React.memo(PaginationLimit);","import React from \"react\";\nimport \"./loader.css\";\n\nconst Loader = () => {\n  return (\n    <div className=\"progress-wrapper\">\n      <div className=\"progress-container\">\n        <h4>Printing...</h4>\n        <div className=\"progress-bar\">\n          <div className=\"circle border\"></div>\n        </div>\n        <p>Please, Do not close this window.</p>\n      </div>\n    </div>\n  );\n};\n\nexport default Loader;\n","import React from \"react\";\nimport Skeleton from \"react-loading-skeleton\";\nconst ListingSkeleton = () => {\n  return (\n    <div className=\" w-100 \">\n      <div className=\"row \">\n        <div className=\"col-6 d-flex \">\n          <Skeleton width={200} height={25} />\n        </div>\n        <div className=\"col-6 d-flex justify-content-end\">\n          <Skeleton width={80} height={30} />\n        </div>\n      </div>\n\n      <div className=\"mt-2\">\n        <Skeleton height={40} />\n        <Skeleton count={10} height={25} />\n      </div>\n      <div className=\"row d-flex mt-2\">\n        <div className=\"col-6\">\n          <Skeleton width={220} height={20} />\n        </div>\n        <div className=\"col-6 d-flex justify-content-end\">\n          <Skeleton width={200} height={30} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ListingSkeleton;\n","import React from \"react\";\nimport Tippy from \"@tippyjs/react\";\nconst Tooltip = ({ content, children }) => {\n  return <Tippy content={content}>{children}</Tippy>;\n};\n\nexport default Tooltip;","import axiosInstance from \"../../utils/axios\";\nimport { printerAxiosInstance } from \"../../utils/axios\";\n\n//obtaining the paginated data\nexport const getApprovedCard = (postsPerPage) =>\n  axiosInstance.get(\n    `api/v1/application/entry-pass-list?offset=0&limit=${postsPerPage}&ordering=-id&status=approved&application_type=new`\n  );\n\n//obtaining all data\nexport const getAllApprovedCard = () =>\n  axiosInstance.get(\n    `api/v1/application/entry-pass-list?ordering=-id&status=approved&application_type=new`\n  );\n\n//obtaining the previous page data from paginated data\nexport const getPrevious = (previous) => axiosInstance.get(previous);\n\n//obtaining the next page data from paginated data\nexport const getNext = (next) => axiosInstance.get(next);\n\n//obtaining the particular page data from paginated data\nexport const getParticularPage = (number, postsPerPage) =>\n  axiosInstance.get(\n    `api/v1/application/entry-pass-list?offset=${\n      (number - 1) * postsPerPage\n    }&limit=${postsPerPage}&ordering=-id&status=approved&application_type=new`\n  );\n\n//searching function\nexport const handleSearch = (search, postsPerPage) =>\n  axiosInstance.get(\n    `api/v1/application/entry-pass-list?offset=0&limit=${postsPerPage}&search=${search}&status=approved&application_type=new`\n  );\n\nexport const generateCardNumber = (id, body) =>\n  axiosInstance.patch(`/api/v1/application/entry-pass/print-card/${id}`, body);\n\nexport const printCard = (body) =>\n  printerAxiosInstance.post(\"/api/v1/china-pass-card-printer-app/\", body, {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  });\n\nexport const confirmPrint = (id) =>\n  axiosInstance.patch(`/api/v1/application/entry-pass/print-card/${id}`);\n","import { approvedCardConstants } from \"./constants\";\n// actions\nexport const loadingAction = () => ({\n  type: approvedCardConstants.LOADING_APPROVED_CARD,\n});\nexport const loadingPrint = () => ({\n  type: approvedCardConstants.LOADING_PRINT_CARD,\n});\nexport const loadingUpdatedAction = () => ({\n  type: approvedCardConstants.LOADING_UPDATED,\n});\nexport const getApprovedCardSuccessAction = (data) => ({\n  type: approvedCardConstants.GET_APPROVED_CARD_SUCCESS,\n  payload: data,\n});\nexport const getApprovedCardFailAction = (error) => ({\n  type: approvedCardConstants.GET_APPROVED_CARD_FAIL,\n  payload: error,\n});\nexport const getCardPrintSuccessAction = () => ({\n  type: approvedCardConstants.CARD_PRINT_SUCCESS,\n});\nexport const getCardPrintFailAction = () => ({\n  type: approvedCardConstants.CARD_PRINT_FAIL,\n});\nexport const getCardPrintedSuccessAction = () => ({\n  type: approvedCardConstants.CARD_PRINTED_SUCCESS,\n});\nexport const getCardPrintedFailAction = () => ({\n  type: approvedCardConstants.CARD_PRINTED_FAIL,\n});\n","import * as API from \"./api\";\nimport * as actions from \"./actions\";\nimport { errorFunction, successFunction } from \"../../Component/Alert\";\n//get  Bank\nexport const getApprovedCard = (postsPerPage) => async (dispatch) => {\n  try {\n    dispatch(actions.loadingAction());\n    const { data } = await API.getApprovedCard(postsPerPage);\n    dispatch(actions.getApprovedCardSuccessAction(data));\n  } catch (error) {\n    dispatch(actions.getApprovedCardFailAction(error));\n    errorFunction(error);\n  }\n};\n// get all bank\nexport const getAllApprovedCard = () => async (dispatch) => {\n  try {\n    dispatch(actions.loadingAction());\n    const { data } = await API.getAllApprovedCard();\n    dispatch(actions.getApprovedCardSuccessAction(data));\n  } catch (error) {\n    dispatch(actions.getApprovedCardFailAction(error));\n    errorFunction(error);\n  }\n};\n//get previous  page\nexport const getPrevious = (previous) => async (dispatch) => {\n  try {\n    dispatch(actions.loadingAction());\n    const { data } = await API.getPrevious(previous);\n    dispatch(actions.getApprovedCardSuccessAction(data));\n  } catch (error) {\n    dispatch(actions.getApprovedCardFailAction(error));\n    errorFunction(error);\n  }\n};\n//get next  page\nexport const getNext = (next) => async (dispatch) => {\n  try {\n    dispatch(actions.loadingAction());\n    const { data } = await API.getNext(next);\n    dispatch(actions.getApprovedCardSuccessAction(data));\n  } catch (error) {\n    dispatch(actions.getApprovedCardFailAction(error));\n    errorFunction(error);\n  }\n};\n//get particular page\nexport const getParticularPage =\n  ({ number, postsPerPage }) =>\n  async (dispatch) => {\n    try {\n      dispatch(actions.loadingAction());\n      const { data } = await API.getParticularPage(number, postsPerPage);\n      dispatch(actions.getApprovedCardSuccessAction(data));\n    } catch (error) {\n      dispatch(actions.getApprovedCardFailAction(error));\n      errorFunction(error);\n    }\n  };\n\n//handle Search\nexport const handleSearch = (search, postsPerPage) => async (dispatch) => {\n  try {\n    dispatch(actions.loadingAction());\n    const { data } = await API.handleSearch(search, postsPerPage);\n    dispatch(actions.getApprovedCardSuccessAction(data));\n  } catch (error) {\n    dispatch(actions.getApprovedCardFailAction(error));\n    errorFunction(error);\n  }\n};\n//get particular page\nexport const generateCardNumber =\n  (id, number, postsPerPage) => async (dispatch) => {\n    try {\n      dispatch(actions.loadingAction());\n      const body = JSON.stringify({ status: \"printed\" });\n      const { data } = await API.generateCardNumber(id, body);\n      dispatch(getParticularPage({ number, postsPerPage }));\n      dispatch(actions.getApprovedCardSuccessAction(data));\n      successFunction(\"Card Number Generated now you can print.\");\n    } catch (error) {\n      dispatch(actions.getApprovedCardFailAction(error));\n      errorFunction(error);\n    }\n  };\n\nexport const printCard = (body) => async (dispatch) => {\n  const {\n    id,\n    fullName,\n    dobBs,\n    cardExpiryDate,\n    fatherName,\n    district,\n    palika,\n    wardNumber,\n    gender,\n    office,\n    signature,\n    approvedBy,\n    cardIssueDate,\n    birthPlace,\n    cardNumber,\n    cardId,\n    submissionNumber,\n    base64UserPhoto,\n    uniqueSlug,\n  } = body;\n\n  const accessToken = localStorage.getItem(\"accessToken\");\n  const refreshToken = localStorage.getItem(\"refreshToken\");\n\n  const printBody = {\n    masterId: id,\n    name: fullName,\n    fatherName,\n    dateOfBirth: dobBs,\n    cardExpiryDate,\n    birthPlace: birthPlace?.name,\n    district: district.name,\n    localLevel: palika.name,\n    wardNo: wardNumber,\n    issueOffice: office.name,\n    cardHolderSignature: signature.split(\",\")[1],\n    officerName: approvedBy.name,\n    gender: gender,\n    slug: uniqueSlug,\n    designation: approvedBy?.designation,\n    issueDate: cardIssueDate,\n    issuerSignature: approvedBy && approvedBy?.signature.split(\",\")[1],\n    cardNo: cardNumber,\n    cardId: cardId,\n    submissionNumber: submissionNumber,\n    cardHolderPhoto: base64UserPhoto,\n    accessToken,\n    refreshToken,\n  };\n\n  try {\n    dispatch(actions.loadingPrint());\n    const { data } = await API.printCard(printBody);\n    dispatch(actions.getCardPrintSuccessAction(data));\n    return data;\n  } catch (error) {\n    dispatch(actions.getCardPrintFailAction(error));\n    errorFunction(error);\n    return error;\n  }\n};\nexport const confirmPrint = (id) => async (dispatch) => {\n  try {\n    dispatch(actions.loadingAction());\n    const { data } = await API.confirmPrint(id);\n    dispatch(actions.getCardPrintedSuccessAction(data));\n    return true;\n  } catch (error) {\n    dispatch(actions.getCardPrintedFailAction(error));\n    errorFunction(error);\n    return false;\n  }\n};\n","import jsPDF from \"jspdf\";\nimport QRCode from \"qrcode\";\nimport { useRef } from \"react\";\nimport { FaTimes } from \"react-icons/fa\";\n\nconst PrintModal = ({ show, setShow, info, setInfo }) => {\n  const qrCanvasRef = useRef(null);\n\n  const {\n    cardId,\n    userPhoto,\n    cardNumber,\n    submissionNumber,\n    fullName,\n    fatherName,\n    dob,\n    gender,\n    district,\n    palika,\n    signaturePhoto,\n    approvedBy,\n    cardIssueDate,\n  } = info;\n\n  const userProfile = userPhoto;\n\n  const cardNo = `Card No:- ${cardNumber}`;\n  const sex = `Sex:- ${\n    gender === \"m\" ? \"Male\" : gender === \"f\" ? \"Female\" : \"Other\"\n  }`;\n  const name = `Name:- ${fullName}`;\n  const fName = `Father's Name:- ${fatherName}`;\n  const dateOfBirth = `Date of Birth:- ${dob}`;\n  const pAddress = `Address:-`;\n  const districtName = `${district?.name}`;\n  // , District`;\n  const municipality = `Municipality:- ${palika?.name}`;\n  // const ward = `Ward No:- ${wardNumber}`;\n\n  // content for back page of card\n  const officerName = `Officer's Name: ${\n    approvedBy ? (approvedBy?.name ? approvedBy?.name : \"\") : \"\"\n  }`;\n  const designation = `Designation: ${\n    approvedBy ? (approvedBy?.designation ? approvedBy?.designation : \"\") : \"\"\n  }`;\n  // const userSignature = ;\n  const issuedDate = `Issued Date: ${\n    cardIssueDate ? cardIssueDate.slice(0, 10) : \"\"\n  }`;\n\n  const signatureText = \"Signature: \";\n\n  function endsWithMedia(str) {\n    return str.substring(str.length - 7) === \"/media/\";\n  }\n\n  let xPos = 15;\n  let yPos = 60;\n  const doc = new jsPDF({\n    orientation: \"landscape\",\n    unit: \"mm\",\n    format: [430, 270],\n  });\n  // doc.addImage(Front, \"PNG\", 0, 0, 430, 270);\n  // doc.setFont(\"Cambria_Regular\", \"bold\");\n  doc.setFontSize(40);\n  yPos = yPos + 45;\n  doc.text(cardNo, xPos, yPos);\n  yPos = yPos + 18;\n\n  doc.text(name, xPos, yPos);\n  yPos = yPos + 18;\n  doc.text(fName, xPos, yPos);\n  yPos = yPos + 18;\n  doc.text(dateOfBirth, xPos, yPos);\n  doc.text(sex, xPos + 200, yPos);\n  yPos = yPos + 18;\n  doc.text(pAddress, xPos, yPos);\n  const textWidth = doc.getTextWidth(pAddress);\n  doc.text(districtName, xPos + textWidth + 4, yPos);\n  doc.setLineWidth(0.01);\n  doc.setLineDashPattern([1, 1]);\n  doc.setDrawColor(0, 0, 0);\n  // doc.line(xPos + textWidth + 2, yPos + 2, yPos, yPos + 2);\n\n  yPos = yPos + 18;\n  doc.text(municipality, xPos, yPos);\n  yPos = yPos + 18;\n  // doc.text(ward, xPos, yPos);\n  yPos = yPos + 18;\n  // doc.text(expiryDate, xPos, yPos);\n\n  doc.addImage(userProfile, 323, 85, 90, 96.5);\n  doc.setLineDash([]);\n  doc.addPage();\n\n  // Add content to the second page...\n\n  let pageTwoXPos = 20;\n  let pageTwoYPos = 25;\n  doc.text(\"Card Holder's\", pageTwoXPos, pageTwoYPos);\n  doc.setLineWidth(0.05);\n  doc.setDrawColor(0, 0, 0);\n  doc.line(pageTwoXPos, 29, 105, 29);\n  doc.text(\"Card Issuing Authority\", 215, pageTwoYPos);\n  // doc.setFont(\"Cambria_Regular\", \"bold\");\n  doc.setLineWidth(0.07);\n  doc.setDrawColor(0, 0, 0);\n  doc.line(215, 29, 355, 29);\n  pageTwoYPos = pageTwoYPos + 20;\n\n  const signatureTextWidth = doc.getTextWidth(signatureText);\n\n  // doc.addImage(Back, \"PNG\", 0, 0, 430, 270);\n  const qrData = JSON.stringify({\n    id: cardId,\n    submissionNumber: submissionNumber,\n    cardNumber: cardNumber,\n  });\n  const data = document.createElement(\"canvas\");\n  const ctx = data.getContext(\"2d\");\n  qrCanvasRef.current = {\n    data,\n    ctx,\n  };\n  QRCode.toCanvas(data, qrData, function (error) {\n    if (error) {\n      console.error(error);\n    } else {\n      console.log(\"QR Code generated successfully\");\n    }\n  });\n\n  // Add QR code image to PDF\n  doc.addImage(data, \"PNG\", 14, 107, 70, 70);\n  doc.addImage(signaturePhoto, \"PNG\", signatureTextWidth + 6, 40, 50, 40);\n  doc.text(signatureText, pageTwoXPos, pageTwoYPos);\n  doc.text(officerName, 200, pageTwoYPos);\n  pageTwoYPos = pageTwoYPos + 20;\n  doc.text(designation, 200, pageTwoYPos);\n  pageTwoYPos = pageTwoYPos + 20;\n  doc.addImage(approvedBy?.signaturePhoto, \"PNG\", 290, 70, 35, 25);\n  doc.text(\"Signature:\", 200, pageTwoYPos);\n\n  pageTwoYPos = pageTwoYPos + 20;\n  doc.text(issuedDate, 200, pageTwoYPos);\n  pageTwoYPos = pageTwoYPos + 20;\n\n  doc.setFontSize(34);\n  pageTwoYPos = pageTwoYPos + 40;\n\n  let blob = doc.output(\"blob\");\n  const pdfUrl = URL.createObjectURL(blob);\n  // Append #toolbar=0 to hide the entire toolbar\n  const urlWithParams = `${pdfUrl}#toolbar=0`;\n  const modalClass = show ? \"modal display-block\" : \"modal display-none\";\n  const handleClose = () => {\n    setShow(false);\n    setInfo(\"\");\n  };\n  return (\n    <div className={modalClass} tabIndex=\"-1\">\n      <div className=\"modal-dialog modal-lg\">\n        <div className=\"modal-content content\">\n          <div className=\"modal-header\">\n            <h5 className=\"modal-title\" id=\"exampleModalLabel\">\n              Print Preview\n            </h5>\n            <button\n              type=\"button\"\n              className=\"btn-close\"\n              data-dismiss=\"modal\"\n              aria-label=\"Close\"\n              onClick={handleClose}\n            >\n              <FaTimes />\n            </button>\n          </div>\n          <div className=\"modal-body text-center\">\n            {!cardNumber && (\n              <div>\n                <p>Card Number is not generated.</p>\n                <p>Please request for card number first.</p>\n              </div>\n            )}\n            <iframe\n              type=\"application/pdf\"\n              width=\"500px\"\n              src={urlWithParams}\n              height=\"630px\"\n              title=\"Print Preview\"\n            ></iframe>\n          </div>\n          <canvas ref={qrCanvasRef} style={{ display: \"none\" }} />\n        </div>\n      </div>{\" \"}\n    </div>\n  );\n};\n\nexport default PrintModal;\n","import React, { useState } from \"react\";\nimport { FaCheck } from \"react-icons/fa\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  getApprovedCard,\n  getNext,\n  getParticularPage,\n  getPrevious,\n  printCard,\n} from \"../../Redux/ApprovedCard/thunk\";\n\nimport { errorFunction, successFunction } from \"../../Component/Alert\";\nimport NoData from \"../../Component/NoData/NoData\";\nimport PaginationBlock from \"../../Component/PaginationBlock\";\nimport Tooltip from \"../../Component/Tooltip/Tooltip\";\nimport PrintModal from \"./PrintModal\";\nimport PrintingLoader from \"../../Component/PrintingLoader\";\nconst ApprovedCard = ({\n  currentPage,\n  postsPerPage,\n  setCurrentPage,\n  count,\n  maxPageNumberLimit,\n  setMaxPageNumberLimit,\n  minPageNumberLimit,\n  setMinPageNumberLimit,\n  search,\n}) => {\n  const [show, setShow] = useState(false);\n  const [info, setInfo] = useState(null);\n  const permissions = useSelector((state) => state.auth.permissions);\n  const isAdmin = useSelector((state) => state.auth.isAdmin);\n  const isSuperuser = useSelector((state) => state.auth.isSuperuser);\n\n  // props\n\n  const approvedCards = useSelector(\n    (state) => state.approvedCard.approvedCards\n  );\n  const previous = useSelector((state) => state.approvedCard.previous);\n  const next = useSelector((state) => state.approvedCard.next);\n  const loadingPrint = useSelector((state) => state.approvedCard.loadingPrint);\n  const dispatch = useDispatch();\n\n  // for pagination\n  const [pageNumberLimit] = useState(5);\n\n  //change page\n  const paginate = (number) => {\n    dispatch(getParticularPage({ number, postsPerPage }));\n    setCurrentPage(number);\n  };\n\n  //handle Click\n  const handleClick = (type) => {\n    if (type === \"previous\") {\n      dispatch(getPrevious(previous));\n      setCurrentPage((prevState) => prevState - 1);\n      if ((currentPage - 1) % pageNumberLimit === 0) {\n        setMaxPageNumberLimit(maxPageNumberLimit - pageNumberLimit);\n        setMinPageNumberLimit(minPageNumberLimit - pageNumberLimit);\n      }\n    } else if (type === \"next\") {\n      dispatch(getNext(next));\n      setCurrentPage((prevState) => prevState + 1);\n      if (currentPage + 1 > maxPageNumberLimit) {\n        setMaxPageNumberLimit(maxPageNumberLimit + pageNumberLimit);\n        setMinPageNumberLimit(minPageNumberLimit + pageNumberLimit);\n      }\n    }\n  };\n\n  const handleCard = (detail) => {\n    setInfo(detail);\n    setShow(true);\n  };\n\n  const viewPermission =\n    permissions.includes(\"can_read_entrypass\") || isAdmin || isSuperuser;\n  const printPermission = permissions.includes(\"can_print_cardprinting\");\n\n  const handlePrint = async (detail) => {\n    if (!detail?.approvedBy?.signature) {\n      errorFunction(\"Please issue your signature first.\");\n    } else {\n      try {\n        const { message, status } = await dispatch(printCard(detail));\n        if (status !== undefined) {\n          if (status === false) {\n            errorFunction(message);\n          } else {\n            successFunction(message);\n            dispatch(getApprovedCard(postsPerPage));\n          }\n        }\n      } catch (error) {\n        errorFunction(\n          error.message || \"An error occurred while printing the card\"\n        );\n      }\n    }\n  };\n\n  return (\n    <>\n      {loadingPrint && <PrintingLoader />}\n      {approvedCards?.length > 0 ? (\n        <div className=\"mt-2\">\n          <div className=\"table-scrollable\">\n            <table className=\"table table-hover table-bordered text-center\">\n              <thead>\n                <tr>\n                  <th scope=\"col\" style={{ width: \"2%\" }}>\n                    S.N\n                  </th>\n\n                  <th scope=\"col\" className=\"text-left\">\n                    Name\n                  </th>\n                  <th scope=\"col\" className=\"text-left\">\n                    Email\n                  </th>\n                  <th scope=\"col\" className=\"text-left\">\n                    Citizenship\n                  </th>\n                  <th scope=\"col\" className=\"text-left\">\n                    Mobile number\n                  </th>\n                  <th scope=\"col\" className=\"text-left\">\n                    DOB BS\n                  </th>\n                  <th scope=\"col\" className=\"text-left\">\n                    Office\n                  </th>\n                  <th scope=\"col\" className=\"text-left\">\n                    Reference\n                  </th>\n                  {!isAdmin && !isSuperuser && <th scope=\"col\">Action</th>}\n                </tr>\n              </thead>\n              <tbody>\n                {approvedCards?.length > 0 &&\n                  approvedCards.map((detail, i) => {\n                    const {\n                      id,\n                      fullName,\n                      email,\n                      citizenshipNumber,\n                      mobileNumber,\n                      submissionNumber,\n                      dobBs,\n                      office,\n                    } = detail;\n\n                    return (\n                      <tr key={id}>\n                        <td className=\"fw-bold\" style={{ width: \"2%\" }}>\n                          {postsPerPage * (currentPage - 1) + (i + 1)}{\" \"}\n                        </td>\n\n                        <td className=\"text-left\">\n                          {fullName ? fullName : \"N/A\"}\n                        </td>\n                        <td\n                          className=\"text-left\"\n                          style={{ wordBreak: \"break-all\" }}\n                        >\n                          {email ? email : \"N/A\"}\n                        </td>\n                        <td className=\"text-left\">\n                          {citizenshipNumber ? citizenshipNumber : \"N/A\"}\n                        </td>\n                        <td className=\"text-left\">\n                          {mobileNumber ? mobileNumber : \"N/A\"}\n                        </td>\n\n                        <td className=\"text-left\">{dobBs ? dobBs : \"N/A\"}</td>\n                        <td className=\"text-left\">{office?.name}</td>\n                        <td className=\"text-left\">{submissionNumber}</td>\n                        {!isAdmin && !isSuperuser && (\n                          <td>\n                            {/* {viewPermission && (\n                            <Tooltip content=\"Preview Card\">\n                              <button onClick={() => handleCard(detail)} className=\"btn btn-sm  btn-success mx-2\">\n                                <FaPrint />\n                              </button>\n                            </Tooltip>\n                          )} */}\n                            {printPermission && (\n                              <Tooltip content=\"Print Card\">\n                                <button\n                                  onClick={() => handlePrint(detail)}\n                                  className=\"btn btn-md btn-success mx-2\"\n                                >\n                                  <FaCheck size={16} />\n                                </button>\n                              </Tooltip>\n                            )}\n                          </td>\n                        )}\n                      </tr>\n                    );\n                  })}\n              </tbody>\n            </table>\n          </div>\n          {count > 0 && (\n            <PaginationBlock\n              currentPage={currentPage}\n              postsPerPage={postsPerPage}\n              count={count}\n              paginate={paginate}\n              handleClick={handleClick}\n              setCurrentPage={setCurrentPage}\n              minPageNumberLimit={minPageNumberLimit}\n              maxPageNumberLimit={maxPageNumberLimit}\n            />\n          )}\n        </div>\n      ) : (\n        <NoData />\n      )}\n      {show && (\n        <PrintModal\n          show={show}\n          setShow={setShow}\n          info={info}\n          setInfo={setInfo}\n        />\n      )}\n\n      {/* {showConfirmationModal && (\n        <Modal\n          header={\"Printed Successfully?\"}\n          size=\"modal-md\"\n          setShowModal={setShowConfirmationModal}\n          showModal={showConfirmationModal}\n        >\n          <div className=\"d-flex justify-content-center align-items-center\">\n            <div className=\"p-2\">\n              <button\n                className=\"btn btn-success mr-3\"\n                onClick={() => {\n                  dispatch(confirmPrint(printId));\n                  setShowConfirmationModal(false);\n                }}\n              >\n                Yes\n              </button>\n              <button className=\"btn btn-danger\" onClick={() => setShowPrintAgainModal(true)}>\n                NO\n              </button>\n            </div>\n          </div>\n        </Modal>\n      )}\n      {showPrintAgainModal && (\n        <Modal\n          header={\"Do you want to print again?\"}\n          size=\"modal-md\"\n          setShowModal={setShowPrintAgainModal}\n          showModal={showPrintAgainModal}\n        >\n          <div className=\"d-flex justify-content-center align-items-center\">\n            <div className=\"p-2\">\n              <button className=\"btn btn-success mr-3\" onClick={() => dispatch(printCard(printDetails))}>\n                Yes\n              </button>\n              <button\n                className=\"btn btn-danger\"\n                onClick={() => {\n                  setShowPrintAgainModal(false);\n                  setShowConfirmationModal(false);\n                }}\n              >\n                NO\n              </button>\n            </div>\n          </div>\n        </Modal>\n      )} */}\n    </>\n  );\n};\n\nexport default ApprovedCard;\n","import React, { useState, useEffect } from \"react\";\nimport { defaultLimit } from \"../../utils/defaultLimit\";\nimport { getApprovedCard, handleSearch } from \"../../Redux/ApprovedCard/thunk\";\nimport ApprovedCard from \"./ApprovedCard\";\nimport ListingSkeleton from \"../../Component/Skeleton/ListingSkeleton\";\nimport PaginationLimit from \"../../Component/Pagination/PaginationLimit\";\nimport { useSelector, useDispatch } from \"react-redux\";\nconst ApprovedCardListing = () => {\n  const approvedCards = useSelector(\n    (state) => state.approvedCard.approvedCards\n  );\n  const loading = useSelector((state) => state.approvedCard.loading);\n  const loadingUpdated = useSelector(\n    (state) => state.approvedCard.loadingUpdated\n  );\n  const count = useSelector((state) => state.approvedCard.count);\n\n  const search = useSelector((state) => state.search.search);\n\n  const dispatch = useDispatch();\n\n  // for pagination\n  const [currentPage, setCurrentPage] = useState(1);\n  const [maxPageNumberLimit, setMaxPageNumberLimit] = useState(5);\n  const [minPageNumberLimit, setMinPageNumberLimit] = useState(0);\n  const [postsPerPage, setPostsPerPage] = useState(10);\n\n  //pagination end\n  //loading all the food\n  useEffect(() => {\n    if (postsPerPage === 0) {\n      if (search === \"\") {\n        dispatch(getApprovedCard(count));\n      } else {\n        dispatch(handleSearch(search, count));\n      }\n    } else {\n      if (search === \"\") {\n        if (postsPerPage === defaultLimit) {\n          dispatch(getApprovedCard(postsPerPage));\n        } else {\n          setCurrentPage(1);\n          dispatch(getApprovedCard(postsPerPage));\n        }\n      } else {\n        setCurrentPage(1);\n        setMaxPageNumberLimit(5);\n        setMinPageNumberLimit(0);\n        dispatch(handleSearch(search, postsPerPage));\n      }\n    }\n  }, [dispatch, postsPerPage, search]);\n\n  return (\n    <>\n      <div className=\"user-card\">\n        <div className=\"header-content\">\n          <h4 className=\"mb-sm-0 fw-normal\">Approved Cards Listing</h4>\n        </div>\n        <div\n          className={`${\n            approvedCards?.length > 0 ? \"office-card-body\" : \"card-body\"\n          }`}\n        >\n          <div className=\"row m-0 p-0\">\n            {approvedCards?.length > 0 && (\n              <>\n                <div className=\"col-6\">\n                  <PaginationLimit\n                    postsPerPage={postsPerPage}\n                    setPostsPerPage={setPostsPerPage}\n                  />\n                </div>\n              </>\n            )}\n          </div>\n          {loading && <ListingSkeleton />}\n          {loadingUpdated && <ListingSkeleton />}\n          {!loading && !loadingUpdated && (\n            <ApprovedCard\n              currentPage={currentPage}\n              setCurrentPage={setCurrentPage}\n              postsPerPage={postsPerPage}\n              setPostsPerPage={setPostsPerPage}\n              count={count}\n              maxPageNumberLimit={maxPageNumberLimit}\n              setMaxPageNumberLimit={setMaxPageNumberLimit}\n              minPageNumberLimit={minPageNumberLimit}\n              setMinPageNumberLimit={setMinPageNumberLimit}\n              search={search}\n            />\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default ApprovedCardListing;\n","import axios from \"axios\";\nimport { store } from \"../Redux/store\";\nimport { authConstants } from \"../Redux/Auth/constants\";\nimport { toast } from \"react-toastify\";\n\n//creating axios instance\nexport const publicAxiosInstance = axios.create({\n  baseURL: process.env.REACT_APP_BASE_URL,\n});\nexport const printerAxiosInstance = axios.create({\n  baseURL: process.env.REACT_APP_PRINTER_BASE_URL,\n  headers: {\n    \"Content-Type\": \"application/json\",\n  },\n});\n\nconst axiosInstance = axios.create({\n  baseURL: process.env.REACT_APP_BASE_URL,\n  headers: {\n    \"Content-Type\": \"application/json\",\n  },\n});\n//interceptor\n//request handling\naxiosInstance.interceptors.request.use(\n  (config) => {\n    // if (!window.navigator.onLine) {\n    //   return Promise.reject(\"No Internet\");\n    // }\n    if (window.navigator.onLine) {\n      config.headers[\"Authorization\"] = localStorage.getItem(\"accessToken\")\n        ? `Bearer ${localStorage.getItem(\"accessToken\")}`\n        : null;\n      config.baseURL = process.env.REACT_APP_BASE_URL;\n      return config;\n    }\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n//response handling\naxiosInstance.interceptors.response.use(\n  (res) => res,\n  async (error) => {\n    //refresh token\n\n    const originalRequest = error.config;\n    //when refresh token is also not valid\n    if (\n      error.response.status === 401 &&\n      originalRequest.url === `auth/token/refresh`\n    ) {\n      store.dispatch({ type: authConstants.AUTH_ERROR });\n      // return Promise.reject(error.response?.data.code);\n      // return toast.error(`Refresh Token Expired. Please Login.`, {\n      //   autoClose: 1200,\n      // });\n    }\n    //accessing new access token from refresh token\n    if (\n      error.response?.data.code === \"token_not_valid\" &&\n      !originalRequest._retry\n    ) {\n      //call for refresh token\n      originalRequest._retry = true;\n      try {\n        const body = JSON.stringify({\n          refresh: localStorage.getItem(\"refreshToken\"),\n        });\n        localStorage.removeItem(\"accessToken\");\n        const response = await axiosInstance.post(`auth/token/refresh`, body);\n        if (response.status === 200) {\n          localStorage.setItem(\"accessToken\", response?.data.access);\n          originalRequest.headers[\n            \"Authorization\"\n          ] = `Bearer ${response?.data.access}`;\n          return axiosInstance(originalRequest);\n        }\n      } catch (error) {\n        store.dispatch({\n          type: authConstants.AUTH_ERROR,\n        });\n\n        // return toast.error(`${error.response.data.error}`);\n        // return Promise.reject(error.response?.data.error);\n      }\n      // return store.dispatch({ type: AUTH_ERROR });\n    }\n    //no Internet\n    if (error === \"No Internet\") {\n      toast.error(`No Internet Connection !!!`);\n      // return Promise.reject(`No Internet`);\n    }\n    //server down\n    if (error.message === \"Network Error\") {\n      toast.error(\"Internal Server Error. Contact IT manager !!!\", {\n        autoClose: 1200,\n      });\n      // return Promise.reject(`Internal Server Error. Contact IT manager !!!`);\n    }\n    if (error.response?.status === 500) {\n      toast.error(\"Internal Server Error. Contact IT manager !!!\", {\n        autoClose: 1200,\n      });\n      // return Promise.reject(`Internal Server Error. Contact IT manager !!!`);\n    }\n    if (error.response?.status === 404) {\n      toast.error(\"Page Not Found !!!!!\", { autoClose: 1200 });\n    }\n    //unauthorized user\n    if (\n      error.response?.status === 401 ||\n      error.message === \"Invalid token specified\"\n    ) {\n      store.dispatch({ type: authConstants.AUTH_ERROR });\n      // toast.error(\"Unauthorized User\", { autoClose: 1200 });\n\n      return Promise.reject(error.response.data.detail);\n    }\n    //error between 400\n    const expectedError =\n      error.response &&\n      error.response.status >= 400 &&\n      error.response.status < 500;\n    if (expectedError) {\n      if (error.response.data.detail) {\n        return Promise.reject(`${error.response.data.detail}`);\n      } else {\n        return Promise.reject(`${error.response.statusText}`);\n      }\n    }\n    return Promise.reject(error);\n  }\n);\nexport default axiosInstance;\n","export const defaultLimit = 10;\n"],"names":["toast","errorFunction","error","errorMessage","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","successFunction","data","successMessage","infoFunction","infoMessage","className","DisplayEntries","offset","limit","count","React","Pagination","postsPerPage","totalPosts","paginate","handleClick","currentPage","maxPageNumberLimit","minPageNumberLimit","pageNumbers","i","Math","ceil","push","length","onClick","disabled","map","number","setCurrentPage","PaginationLimit","setPostsPerPage","value","onChange","e","Number","target","width","height","content","children","getApprovedCard","axiosInstance","getPrevious","previous","getNext","next","getParticularPage","handleSearch","search","printCard","body","printerAxiosInstance","headers","loadingAction","type","approvedCardConstants","getApprovedCardSuccessAction","payload","getApprovedCardFailAction","dispatch","actions","API","id","fullName","dobBs","cardExpiryDate","fatherName","district","palika","wardNumber","gender","office","signature","approvedBy","cardIssueDate","birthPlace","cardNumber","cardId","submissionNumber","base64UserPhoto","uniqueSlug","accessToken","localStorage","getItem","refreshToken","printBody","masterId","name","dateOfBirth","localLevel","wardNo","issueOffice","cardHolderSignature","split","officerName","slug","designation","issueDate","issuerSignature","cardNo","cardHolderPhoto","show","setShow","info","setInfo","qrCanvasRef","useRef","userPhoto","dob","signaturePhoto","userProfile","sex","fName","pAddress","districtName","municipality","issuedDate","slice","signatureText","xPos","yPos","doc","jsPDF","orientation","unit","format","setFontSize","text","textWidth","getTextWidth","setLineWidth","setLineDashPattern","setDrawColor","addImage","setLineDash","addPage","pageTwoYPos","line","signatureTextWidth","qrData","JSON","stringify","document","createElement","ctx","getContext","current","QRCode","console","log","blob","output","pdfUrl","URL","createObjectURL","urlWithParams","modalClass","tabIndex","src","title","ref","style","display","setMaxPageNumberLimit","setMinPageNumberLimit","useState","permissions","useSelector","state","auth","isAdmin","isSuperuser","approvedCards","approvedCard","loadingPrint","useDispatch","pageNumberLimit","printPermission","includes","handlePrint","detail","message","status","PrintingLoader","scope","email","citizenshipNumber","mobileNumber","wordBreak","Tooltip","size","PaginationBlock","prevState","NoData","loading","loadingUpdated","useEffect","defaultLimit","ListingSkeleton","axios","baseURL","process","interceptors","request","use","config","window","navigator","onLine","Promise","reject","response","res","originalRequest","url","store","authConstants","code","_retry","refresh","removeItem","post","setItem","access","statusText"],"sourceRoot":""}