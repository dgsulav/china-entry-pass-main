{"version":3,"file":"static/js/7925.400ecc6d.chunk.js","mappings":"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","sources":["Component/Data/Data.js","Component/Skeleton/UpdatedSkeleton.js","Component/Thumb/index.js","Redux/User/action.js","../node_modules/jwt-decode/lib/atob.js","../node_modules/jwt-decode/lib/index.js","Redux/User/thunk.js","Pages/User/ChangeUserPassword.js","Pages/User/User.js","Pages/User/asyncFunction.js","Pages/User/CreateUser.js","Pages/User/index.js","Redux/User/api.js","utils/redundant/user.js"],"sourcesContent":["export const options = [\n  { id: 1, name: \"CASH\" },\n  { id: 2, name: \"CREDIT\" },\n];\nexport const officeTypes = [\n  { id: \"immigration\", name: \"Immigration Office\" },\n  { id: \"dao\", name: \"District Administration Office\" },\n];\nexport const genders = [\n  { id: \"m\", name: \"Male\" },\n  { id: \"f\", name: \"Female\" },\n  { id: \"o\", name: \"Other\" },\n];\nexport const tax_reg_systems = [\n  { id: 1, name: \"VAT\" },\n  { id: 2, name: \"PAN\" },\n  { id: 3, name: \"N/A\" },\n];\nexport const depreciationMethods = [\n  { id: 1, name: \"Straight line\" },\n  { id: 2, name: \"Diminishing Balance \" },\n  { id: 3, name: \"Unit Of Product\" },\n];\n\nexport const applicationTypes = [\n  { id: \"new\", name: \"NEW\" },\n  { id: \"renew\", name: \"RENEW\" },\n  { id: \"reprint\", name: \"REPRINT\" },\n];\nexport const statusTypes = [\n  { id: \"pending\", name: \"PENDING\" },\n  { id: \"verified\", name: \"VERIFIED\" },\n  { id: \"rejected\", name: \"REJECTED\" },\n  { id: \"approved\", name: \"APPROVED\" },\n  { id: \"printed\", name: \"PRINTED\" },\n];\nexport const statusTypesReprint = [\n  { id: \"pending\", name: \"PENDING\" },\n  { id: \"approved\", name: \"APPROVED\" },\n  { id: \"printed\", name: \"PRINTED\" },\n];","import React from \"react\";\nimport Skeleton from \"react-loading-skeleton\";\nconst UpdatedSkeleton = () => {\n  return (\n    <>\n      <div className=\"mt-2\">\n        <Skeleton height={40} />\n        <Skeleton count={10} height={25} />\n      </div>\n      <div className=\"row d-flex mt-2\">\n        <div className=\"col-6\">\n          <Skeleton width={220} height={20} />\n        </div>\n        <div className=\"col-6 d-flex justify-content-end\">\n          <Skeleton width={200} height={30} />\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default UpdatedSkeleton;\n","import React from \"react\";\n\nconst Thumb = ({ thumb, height, width, onClick }) => {\n  return (\n    <img\n      src={thumb}\n      alt={thumb}\n      className=\"img-thumbnail mt-1\"\n      height={height ? height : 70}\n      width={width ? width : 70}\n      onClick={onClick}\n    />\n  );\n};\n\nexport default Thumb;\n","import { userConstants } from \"./constants\";\n// actions\nexport const loadingAction = () => ({\n  type: userConstants.LOADING_USER,\n});\nexport const loadingUpdatedAction = () => ({\n  type: userConstants.LOADING_UPDATED,\n});\nexport const getUserSuccessAction = (data) => ({\n  type: userConstants.GET_USER_SUCCESS,\n  payload: data,\n});\n\nexport const getUserFailAction = (error) => ({\n  type: userConstants.GET_USER_FAIL,\n  payload: error,\n});\n\nexport const getAllUserSuccessAction = (data) => ({\n  type: userConstants.GET_ALL_USER_SUCCESS,\n  payload: data,\n});\n\nexport const getAllUserFailAction = (error) => ({\n  type: userConstants.GET_ALL_USER_FAIL,\n  payload: error,\n});\n\nexport const getUserInfoSuccessAction = (data) => ({\n  type: userConstants.GET_USER_INFO_SUCCESS,\n  payload: data,\n});\n\nexport const getUserInfoFailAction = (error) => ({\n  type: userConstants.GET_USER_INFO_FAIL,\n  payload: error,\n});\n\nexport const createUserSuccessAction = (data) => ({\n  type: userConstants.CREATE_USER_SUCCESS,\n  payload: data,\n});\n\nexport const createUserFailAction = (error) => ({\n  type: userConstants.CREATE_USER_FAIL,\n  payload: error,\n});\n\nexport const deleteUserSuccessAction = (data) => ({\n  type: userConstants.USER_DELETED_SUCCESS,\n  payload: data,\n});\n\nexport const deleteUserFailAction = (error) => ({\n  type: userConstants.USER_DELETED_FAIL,\n  payload: error,\n});\n\nexport const updatedUserSuccessAction = (data) => ({\n  type: userConstants.UPDATE_USER_SUCCESS,\n  payload: data,\n});\n\nexport const updatedUserFailAction = (error) => ({\n  type: userConstants.UPDATE_USER_FAIL,\n  payload: error,\n});\nexport const deletePhotoSuccessAction = (data) => ({\n  type: userConstants.PHOTO_DELETED_SUCCESS,\n  payload: data,\n});\nexport const deletePhotoFailAction = (error) => ({\n  type: userConstants.PHOTO_DELETED_FAIL,\n  payload: error,\n});\nexport const clearUserDataAction = (error) => ({\n  type: userConstants.CLEAR_USER,\n});\n\nexport const changeUserPasswordSuccessAction = (data) => ({\n  type: userConstants.CHANGE_USER_PASSWORD_SUCCESS,\n  payload: data,\n});\n\nexport const changeUserPasswordFailAction = (error) => ({\n  type: userConstants.CHANGE_USER_PASSWORD_FAIL,\n  payload: error,\n});\n","/**\n * The code was extracted from:\n * https://github.com/davidchambers/Base64.js\n */\n\nvar chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n\nfunction InvalidCharacterError(message) {\n    this.message = message;\n}\n\nInvalidCharacterError.prototype = new Error();\nInvalidCharacterError.prototype.name = \"InvalidCharacterError\";\n\nfunction polyfill(input) {\n    var str = String(input).replace(/=+$/, \"\");\n    if (str.length % 4 == 1) {\n        throw new InvalidCharacterError(\n            \"'atob' failed: The string to be decoded is not correctly encoded.\"\n        );\n    }\n    for (\n        // initialize result and counters\n        var bc = 0, bs, buffer, idx = 0, output = \"\";\n        // get next character\n        (buffer = str.charAt(idx++));\n        // character found in table? initialize bit storage and add its ascii value;\n        ~buffer &&\n        ((bs = bc % 4 ? bs * 64 + buffer : buffer),\n            // and if not first of each 4 characters,\n            // convert the first 8 bits to one ascii character\n            bc++ % 4) ?\n        (output += String.fromCharCode(255 & (bs >> ((-2 * bc) & 6)))) :\n        0\n    ) {\n        // try to find character in table (0-63, not found => -1)\n        buffer = chars.indexOf(buffer);\n    }\n    return output;\n}\n\nexport default (typeof window !== \"undefined\" &&\n    window.atob &&\n    window.atob.bind(window)) ||\npolyfill;","\"use strict\";\n\nimport base64_url_decode from \"./base64_url_decode\";\n\nexport function InvalidTokenError(message) {\n    this.message = message;\n}\n\nInvalidTokenError.prototype = new Error();\nInvalidTokenError.prototype.name = \"InvalidTokenError\";\n\nexport default function(token, options) {\n    if (typeof token !== \"string\") {\n        throw new InvalidTokenError(\"Invalid token specified\");\n    }\n\n    options = options || {};\n    var pos = options.header === true ? 0 : 1;\n    try {\n        return JSON.parse(base64_url_decode(token.split(\".\")[pos]));\n    } catch (e) {\n        throw new InvalidTokenError(\"Invalid token specified: \" + e.message);\n    }\n}","import * as API from \"./api\";\nimport * as action from \"./action\";\nimport { errorFunction, successFunction } from \"../../Component/Alert\";\nimport jwt_decode from \"jwt-decode\";\n\n//get  Bank\nexport const getUser = (postsPerPage) => async (dispatch) => {\n  try {\n    dispatch(action.loadingAction());\n    const { data } = await API.getUser(postsPerPage);\n    const filteredData = data.data.filter((user) => user.isAdmin === false);\n\n    dispatch(action.getUserSuccessAction({ ...data, results: filteredData }));\n  } catch (error) {\n    dispatch(action.getUserFailAction(error));\n    errorFunction(error);\n  }\n};\n// get all bank\nexport const getAllUser = () => async (dispatch) => {\n  try {\n    dispatch(action.loadingAction());\n    const { data } = await API.getAllUser();\n    const filteredData = data.data.filter((user) => user.isAdmin === false);\n    dispatch(action.getUserSuccessAction(filteredData));\n  } catch (error) {\n    dispatch(action.getAllUserFailAction(error));\n    errorFunction(error);\n  }\n};\n//get previous  page\nexport const getPrevious = (previous) => async (dispatch) => {\n  try {\n    dispatch(action.loadingAction());\n    const { data } = await API.getPrevious(previous);\n    const filteredData = data.data.filter((user) => user.isAdmin === false);\n    dispatch(action.getUserSuccessAction({ ...data, results: filteredData }));\n  } catch (error) {\n    dispatch(action.getUserFailAction(error));\n    errorFunction(error);\n  }\n};\n//get next  page\nexport const getNext = (next) => async (dispatch) => {\n  try {\n    dispatch(action.loadingAction());\n    const { data } = await API.getNext(next);\n    const filteredData = data.data.filter((user) => user.isAdmin === false);\n    dispatch(action.getUserSuccessAction({ ...data, results: filteredData }));\n  } catch (error) {\n    dispatch(action.getUserFailAction(error));\n    errorFunction(error);\n  }\n};\n//get particular page\nexport const getPageUser =\n  ({ number, postsPerPage }) =>\n  async (dispatch) => {\n    try {\n      dispatch(action.loadingAction());\n      const { data } = await API.getPageUser(number, postsPerPage);\n\n      dispatch(action.getUserSuccessAction(data));\n    } catch (error) {\n      dispatch(action.getUserFailAction(error));\n      errorFunction(error);\n    }\n  };\n\nexport const getCurrentUser = (token) => async (dispatch) => {\n  try {\n    dispatch(action.loadingAction());\n    const decoded = token && jwt_decode(token);\n    const { data } = await API.getCurrentUser(decoded);\n    dispatch(action.getUserInfoSuccessAction(data));\n  } catch (error) {\n    dispatch(action.getUserInfoFailAction(error));\n    errorFunction(error);\n  }\n};\nexport const createUser = (value, currentPage) => async (dispatch) => {\n  const {\n    firstName,\n    middleName,\n    lastName,\n    email,\n    username,\n    office,\n    gender,\n    password,\n    confirmPassword,\n    isActive,\n    isChecker,\n    userPhoto,\n    phone,\n    signature,\n    designation,\n    groups,\n  } = value;\n  try {\n    const body = new FormData();\n    body.append(\"firstName\", firstName);\n    body.append(\"middleName\", middleName);\n    body.append(\"lastName\", lastName);\n    body.append(\"email\", email);\n    body.append(\"username\", username);\n    body.append(\"office \", office);\n    body.append(\"phone\", phone);\n    body.append(\"gender\", gender);\n    body.append(\"password\", password);\n    body.append(\"confirmPassword\", confirmPassword);\n    await groups.forEach((group, i) => {\n      body.append(`groups[${i}]`, group);\n    });\n    body.append(\"signature\", signature);\n    body.append(\"designation \", designation);\n    body.append(\"isActive\", isActive);\n    body.append(\"isChecker\", isChecker);\n\n    if (userPhoto) {\n      body.append(\"userPhoto\", userPhoto);\n    }\n\n    dispatch(action.loadingAction());\n    const { data } = await API.createUser(body);\n    successFunction(\"User created successfully \");\n    dispatch(action.createUserSuccessAction(data));\n    dispatch(getPageUser({ number: currentPage, postsPerPage: 10 }));\n    return true;\n  } catch (error) {\n    dispatch(action.createUserFailAction(error));\n    errorFunction(error);\n  }\n};\n\n// Delete  bank\nexport const deleteUser = (id) => async (dispatch) => {\n  try {\n    dispatch(action.loadingAction());\n    const { data } = await API.deleteUser(id);\n    dispatch(action.deleteUserSuccessAction(data));\n    dispatch(getUser());\n    successFunction(\"Bank deleted Successfully\");\n  } catch (error) {\n    dispatch(action.deleteUserFailAction(error));\n    errorFunction(\"Failed to delete Bank \");\n  }\n};\n//update\nexport const updateUser =\n  (id, values, currentPage, postsPerPage) => async (dispatch) => {\n    const {\n      firstName,\n      middleName,\n      lastName,\n      email,\n      username,\n      office,\n      gender,\n      remarks,\n      isActive,\n      isChecker,\n      userPhoto,\n      phone,\n      signature,\n      designation,\n      groups,\n    } = values;\n    try {\n      dispatch(action.loadingUpdatedAction());\n\n      const body = new FormData();\n      body.append(\"firstName\", firstName);\n      body.append(\"middleName\", middleName);\n      body.append(\"lastName\", lastName);\n      body.append(\"email\", email);\n      body.append(\"phone\", phone);\n      body.append(\"username\", username);\n      body.append(\"office \", office);\n      body.append(\"gender\", gender);\n      await groups.forEach((group, i) => {\n        body.append(`groups[${i}]`, group);\n      });\n      if (signature !== \"\" && !signature?.includes(\"data:image/png;base64,\")) {\n        body.append(\"signature\", signature);\n      } else {\n        body.append(\"signature\", \"\");\n      }\n\n      body.append(\"isActive\", isActive);\n      body.append(\"isChecker\", isChecker);\n\n      body.append(\"designation\", designation);\n      body.append(\"remarks\", remarks);\n      if (userPhoto) {\n        body.append(\"userPhoto\", userPhoto);\n      }\n\n      dispatch(action.loadingAction());\n\n      await API.updateUser(id, body);\n\n      successFunction(\"User Updated Successfully \");\n      dispatch(getPageUser({ number: currentPage, postsPerPage }));\n      return true;\n    } catch (error) {\n      dispatch(action.updatedUserFailAction(error));\n      errorFunction(error);\n    }\n  };\n//handle Search\nexport const handleSearch = (search, postsPerPage) => async (dispatch) => {\n  try {\n    dispatch(action.loadingAction());\n    const { data } = await API.handleSearch(search, postsPerPage);\n    dispatch(action.getUserSuccessAction(data));\n  } catch (error) {\n    dispatch(action.getUserFailAction(error));\n    errorFunction(error);\n  }\n};\nexport const clearUserData = () => async (dispatch) => {\n  try {\n    dispatch(action.clearUserDataAction());\n    return true;\n  } catch (error) {\n    errorFunction(error);\n  }\n};\n\nexport const changeUserPassword =\n  (id, password, history) => async (dispatch) => {\n    try {\n      dispatch(action.loadingAction());\n      const { data } = await API.changeUserPassword(id, password);\n      dispatch(action.changeUserPasswordSuccessAction(data));\n      successFunction(\"Password changed successfully\");\n      history.push(\"/user\");\n    } catch (error) {\n      dispatch(action.changeUserPasswordFailAction(error));\n      errorFunction(\"Failed to change password\");\n    }\n  };\n","import React, { useState } from \"react\";\nimport { BsFillEyeFill, BsFillEyeSlashFill } from \"react-icons/bs\";\nimport TextError from \"../../Component/TextError/TextError\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { Form, Field, Formik, ErrorMessage } from \"formik\";\nimport * as Yup from \"yup\";\nimport \"../Login/Login.css\";\n\nimport { useHistory } from \"react-router-dom\";\nimport { changeUserPassword } from \"../../Redux/User/thunk\";\n\nconst ChangeUserPassword = ({ passwordChangeId }) => {\n  const dispatch = useDispatch();\n\n  let history = useHistory();\n\n  const [type, setType] = useState(\"password\");\n  const [type1, setType1] = useState(\"password\");\n  const [type2, setType2] = useState(\"password\");\n\n  const initialValues = {\n    password: \"\",\n    confirm_password: \"\",\n  };\n  //validation rule for the form field in formik\n  const validationSchema = Yup.object().shape({\n    password: Yup.string()\n      .required(\"Please Enter your password\")\n      .matches(\n        /^(?=.*[a-z])(?=.*\\d)[A-Za-z\\d@$!%*#?&]{6,}$/,\n        \"Must Contain 6 Characters, One alphabet and One Number \"\n      ),\n    confirm_password: Yup.string()\n      .required(\"Password is required\")\n      .oneOf([Yup.ref(\"password\"), null], \"Passwords must match\"),\n  });\n  //submit handler for formik\n  const onSubmit = (values) => {\n    const { password } = values;\n\n    dispatch(changeUserPassword(passwordChangeId, password, history));\n  };\n  // toggle password\n  const handleClick = () => {\n    if (type === \"password\") {\n      setType(\"text\");\n    } else {\n      setType(\"password\");\n    }\n  };\n  // toggle confirm password\n  const handleClick1 = () => {\n    if (type1 === \"password\") {\n      setType1(\"text\");\n    } else {\n      setType1(\"password\");\n    }\n  };\n  // toggle confirm password\n  const handleClick2 = () => {\n    if (type2 === \"password\") {\n      setType2(\"text\");\n    } else {\n      setType2(\"password\");\n    }\n  };\n  return (\n    <div className=\"\">\n      <div className=\"account-pages my-5\">\n        <div className=\"container\">\n          <div className=\"row justify-content-center \">\n            <div className=\"col-md-8 col-lg-6 col-xl-5\">\n              <div className=\"card overflow-hidden card-reset\">\n                <div className=\"bg-primary bg-soft\">\n                  <div className=\"row\">\n                    <div className=\"col-sm-12\">\n                      <div className=\"text-center m-3\">\n                        <h5>Change password</h5>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"card-body pt-0\">\n                  <div className=\"w-100\">\n                    <Formik\n                      initialValues={initialValues}\n                      validationSchema={validationSchema}\n                      onSubmit={onSubmit}\n                    >\n                      {(formik) => {\n                        return (\n                          <Form autoComplete=\"off\" className=\"form-horizontal \">\n                            <div className=\"mb-3  password-field\">\n                              <label htmlFor=\"password\" className=\"form-label \">\n                                New Password\n                              </label>\n                              <div style={{ position: \"relative\" }}>\n                                <Field\n                                  type={type2}\n                                  className=\"form-control change-textfield \"\n                                  name=\"password\"\n                                  placeholder=\"New Password\"\n                                />\n                                <span onClick={handleClick2}>\n                                  {type2 === \"password\" ? (\n                                    <BsFillEyeSlashFill />\n                                  ) : (\n                                    <BsFillEyeFill />\n                                  )}\n                                </span>\n                              </div>\n                              <ErrorMessage\n                                name=\"password\"\n                                component={TextError}\n                              />\n                            </div>\n                            <div className=\"mb-3  password-field\">\n                              <label\n                                htmlFor=\"confirm-password\"\n                                className=\"form-label \"\n                              >\n                                Confirm Password\n                              </label>\n                              <div style={{ position: \"relative\" }}>\n                                <Field\n                                  type={type1}\n                                  className=\"form-control change-textfield \"\n                                  name=\"confirm_password\"\n                                  placeholder=\"Confirm Password\"\n                                />\n                                <span onClick={handleClick1}>\n                                  {type1 === \"password\" ? (\n                                    <BsFillEyeSlashFill />\n                                  ) : (\n                                    <BsFillEyeFill />\n                                  )}\n                                </span>\n                              </div>\n                              <ErrorMessage\n                                name=\"confirm_password\"\n                                component={TextError}\n                              />\n                            </div>\n                            <div className=\"mt-3 d-grid text-center\">\n                              <button\n                                className=\"btn btn-primary waves-effect waves-light mt-4 m-3\"\n                                type=\"submit\"\n                              >\n                                Save Changes\n                              </button>\n                            </div>\n                          </Form>\n                        );\n                      }}\n                    </Formik>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ChangeUserPassword;\n","import React, { useState } from \"react\";\nimport { FaEdit } from \"react-icons/fa\";\nimport { RiLockPasswordFill } from \"react-icons/ri\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport Modal from \"../../Component/Modal\";\nimport NoData from \"../../Component/NoData/\";\nimport PaginationBlock from \"../../Component/PaginationBlock\";\nimport Status from \"../../Component/Status\";\nimport Tooltip from \"../../Component/Tooltip/Tooltip\";\nimport { userConstants } from \"../../Redux/User/constants\";\nimport { getNext, getPageUser, getPrevious } from \"../../Redux/User/thunk\";\nimport ChangeUserPassword from \"./ChangeUserPassword\";\nconst User = ({\n  currentPage,\n  postsPerPage,\n  setCurrentPage,\n  count,\n  setShowModal,\n  maxPageNumberLimit,\n  setMaxPageNumberLimit,\n  minPageNumberLimit,\n  setMinPageNumberLimit,\n  search,\n}) => {\n  // props\n  const history = useHistory();\n  const permissions = useSelector((state) => state.auth.permissions);\n  const isAdmin = useSelector((state) => state.auth.isAdmin);\n  const isSuperuser = useSelector((state) => state.auth.isSuperuser);\n  const users = useSelector((state) => state.user.users);\n  const next = useSelector((state) => state.user.next);\n  const previous = useSelector((state) => state.user.previous);\n  const dispatch = useDispatch();\n\n  // for pagination\n  const [pageNumberLimit] = useState(5);\n  const [showPasswordChangeModal, setShowPasswordChangeModal] = useState(false);\n  const [passwordChangeId, setPasswordChangeId] = useState(\"\");\n\n  //change page\n  const paginate = (number) => {\n    dispatch(getPageUser({ number, postsPerPage }));\n    setCurrentPage(number);\n  };\n\n  //handle Click\n  const handleClick = (type) => {\n    if (type === \"previous\") {\n      dispatch(getPrevious(previous));\n      setCurrentPage((prevState) => prevState - 1);\n      if ((currentPage - 1) % pageNumberLimit === 0) {\n        setMaxPageNumberLimit(maxPageNumberLimit - pageNumberLimit);\n        setMinPageNumberLimit(minPageNumberLimit - pageNumberLimit);\n      }\n    } else if (type === \"next\") {\n      dispatch(getNext(next));\n      setCurrentPage((prevState) => prevState + 1);\n      if (currentPage + 1 > maxPageNumberLimit) {\n        setMaxPageNumberLimit(maxPageNumberLimit + pageNumberLimit);\n        setMinPageNumberLimit(minPageNumberLimit + pageNumberLimit);\n      }\n    }\n  };\n\n  //pagination end\n\n  //sorting end\n\n  //edit function for the province\n  const handleEdit = (id, postsPerPage) => {\n    dispatch({\n      type: userConstants.USER_EDIT_SUCCESS,\n      payload: id,\n      postsPerPage: postsPerPage,\n    });\n    setShowModal(true);\n  };\n  const addPermission =\n    permissions?.includes(\"add_user\") || isAdmin || isSuperuser;\n\n  const handleChangePassword = (id) => {\n    setPasswordChangeId(id);\n    setShowPasswordChangeModal(true);\n  };\n  return (\n    <>\n      {users?.length > 0 ? (\n        <div className=\"mt-2\">\n          <div className=\"table-scrollable\">\n            <table className=\"table table-hover table-bordered text-center\">\n              <thead>\n                <tr>\n                  <th scope=\"col\" style={{ width: \"2%\" }}>\n                    S.N\n                  </th>\n\n                  <th scope=\"col\" className=\"text-left\">\n                    Username\n                  </th>\n                  <th scope=\"col\" className=\"text-left\">\n                    Name\n                  </th>\n                  <th scope=\"col\" className=\"text-left\">\n                    Email\n                  </th>\n                  <th scope=\"col\" className=\"text-left\">\n                    Office\n                  </th>\n                  <th scope=\"col\">Gender</th>\n                  <th scope=\"col\">Role</th>\n                  <th scope=\"col\">Status</th>\n\n                  <th scope=\"col\">Action</th>\n                </tr>\n              </thead>\n              <tbody>\n                {users?.length > 0 &&\n                  users.map((user, i) => {\n                    const {\n                      id,\n                      username,\n                      fullName,\n                      office,\n                      email,\n                      isActive,\n                      gender,\n                      groups,\n                      isAdmin,\n                      isSuperuser,\n                    } = user;\n\n                    return (\n                      <tr key={id}>\n                        <th scope=\"row\" style={{ width: \"2%\" }}>\n                          {postsPerPage * (currentPage - 1) + (i + 1)}\n                        </th>\n                        <td className=\"text-left\">\n                          {username !== \"\" ? username : \"N/A\"}\n                        </td>\n                        <td className=\"text-left\">\n                          {fullName !== \"\" ? fullName : \"N/A\"}\n                        </td>\n                        <td\n                          className=\"text-left\"\n                          style={{ wordBreak: \"break-all\" }}\n                        >\n                          {email}\n                        </td>\n                        <td className=\"text-left\">\n                          {office ? office?.name : \"N/A\"}\n                        </td>\n\n                        <td>\n                          <span className=\"badge badge-success\">\n                            {gender === \"m\"\n                              ? \"Male\"\n                              : gender === \"f\"\n                              ? \"Female\"\n                              : \"Other\"}\n                          </span>\n                        </td>\n                        <td>\n                          {groups.length > 0\n                            ? groups.map((value, i) => {\n                                return (\n                                  <span\n                                    className=\"badge badge-success ml-1\"\n                                    key={i}\n                                  >\n                                    {value.role}\n                                  </span>\n                                );\n                              })\n                            : \"N/A\"}\n                        </td>\n\n                        <td>\n                          <Status active={isActive} />\n                        </td>\n\n                        <td>\n                          {(isSuperuser || isAdmin) && \"N/A\"}\n                          {!isSuperuser && !isAdmin && (\n                            <Tooltip content=\"Edit\">\n                              <button\n                                className=\"btn btn-md btn-edit btn-primary mx-1\"\n                                onClick={() => handleEdit(id)}\n                              >\n                                <FaEdit size={16} />\n                              </button>\n                            </Tooltip>\n                          )}\n                          {!isAdmin && !isSuperuser && (\n                            <Tooltip content=\"Change Password\">\n                              <button\n                                className=\"btn btn-md btn-edit btn-primary mx-1\"\n                                onClick={() => handleChangePassword(id)}\n                              >\n                                <RiLockPasswordFill size={16} />\n                              </button>\n                            </Tooltip>\n                          )}\n                        </td>\n                      </tr>\n                    );\n                  })}\n              </tbody>\n            </table>\n          </div>\n          {count > 0 && (\n            <PaginationBlock\n              currentPage={currentPage}\n              postsPerPage={postsPerPage}\n              count={count}\n              paginate={paginate}\n              handleClick={handleClick}\n              setCurrentPage={setCurrentPage}\n              minPageNumberLimit={minPageNumberLimit}\n              maxPageNumberLimit={maxPageNumberLimit}\n            />\n          )}\n        </div>\n      ) : (\n        <NoData\n          search={search}\n          onClick={() => setShowModal(true)}\n          addPermission={addPermission}\n        />\n      )}\n\n      {showPasswordChangeModal && (\n        <Modal\n          header={\"Update Password\"}\n          types={\"user\"}\n          size={\"modal-xl\"}\n          setShowModal={setShowPasswordChangeModal}\n          showModal={showPasswordChangeModal}\n        >\n          <ChangeUserPassword passwordChangeId={passwordChangeId} />\n        </Modal>\n      )}\n    </>\n  );\n};\n\nexport default React.memo(User);\n","import axiosInstance from \"../../utils/axios\";\n\nexport const loadOptionsOffice = async (\n  search,\n  loadOptions,\n  { limit, offset }\n) => {\n  const { data } = await axiosInstance(\n    `api/v1/core-app/office/list?search=${search}&offset=${offset}&limit=${limit}`\n  );\n  return {\n    options: data.data,\n    hasMore: data.data.next ? true : false,\n    additional: {\n      offset: limit,\n      limit: limit + 10,\n    },\n  };\n};\nexport const loadOptionsRole = async (\n  search,\n  loadOptions,\n  { limit, offset }\n) => {\n  const { data } = await axiosInstance(\n    `auth/groups/list?search=${search}&offset=${offset}&limit=${limit}&is_active=true`\n  );\n\n  return {\n    options: data.data,\n    hasMore: data.data.count > limit ? true : false,\n    additional: {\n      offset: limit,\n      limit: limit + 10,\n    },\n  };\n};\n","import React, { useState } from \"react\";\nimport { ErrorMessage, Field, Form, Formik } from \"formik\";\nimport Select from \"react-select\";\nimport * as Yup from \"yup\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { AsyncPaginate } from \"react-select-async-paginate\";\nimport { errorFunction } from \"../../Component/Alert\";\nimport TextError from \"../../Component/TextError/TextError\";\nimport { createUser, updateUser } from \"../../Redux/User/thunk\";\nimport { checkRedundantDataUser } from \"../../utils/redundant/user\";\nimport { BsFillEyeFill, BsFillEyeSlashFill } from \"react-icons/bs\";\nimport Button from \"../../Component/Button/Button\";\nimport { genders } from \"../../Component/Data/Data\";\nimport Thumb from \"../../Component/Thumb\";\nimport { loadOptionsOffice, loadOptionsRole } from \"./asyncFunction\";\nimport \"./user.css\";\nimport Spinner from \"../../Component/Spinner/Spinner\";\nconst CreateUser = ({ currentPage, setShowModal, postsPerPage }) => {\n  // props\n  const isAdmin = useSelector((state) => state.auth.isAdmin);\n  const isSuperuser = useSelector((state) => state.auth.isSuperuser);\n  const loadingUpdated = useSelector((state) => state.user.loadingUpdated);\n  const loading = useSelector((state) => state.user.loading);\n  const user = useSelector((state) => state.user.user);\n  const edit = useSelector((state) => state.user.edit);\n  const dispatch = useDispatch();\n  //state for disabling the submit button\n  const [password, setPassword] = useState(\"password\");\n  const [confirmPassword, setConfirmPassword] = useState(\"password\");\n\n  const [img, setImg] = useState(null);\n\n  //initial state of the form\n  const initialState = {\n    firstName: edit ? user?.firstName : \"\",\n    middleName: edit ? user?.middleName : \"\",\n    lastName: edit ? user?.lastName : \"\",\n    email: edit ? user?.email : \"\",\n    username: edit ? user?.username : \"\",\n    office: edit ? user?.office : \"\",\n    phone: edit ? user?.phone : \"\",\n    designation: edit ? user?.designation : \"\",\n    signature: edit ? user?.signature : \"\",\n    userPhoto: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n    gender: edit ? genders.find((gender) => gender.id === user?.gender) : \"\",\n    remarks: \"\",\n    isActive: edit ? user?.isActive : true,\n    isChecker: edit ? user?.isChecker : false,\n    groups: edit ? user?.groups : [],\n  };\n  //validation rules of the form\n  const validationSchema = Yup.object().shape({\n    firstName: Yup.string()\n      .required(\"First Name required\")\n      .min(2, \"First name must be at least 2 characters.\")\n      .max(50, \"First name should be 50 characters.\")\n      .matches(\n        /(?=.*^[A-Za-z]\\w).*$/,\n        \"First name should only contain alphabet.\"\n      ),\n    middleName: Yup.string()\n      .max(50, \"Middle name should be 50 characters.\")\n      .matches(\n        /(?=.*^[A-Za-z]\\w).*$/,\n        \"Middle name should only contain alphabet.\"\n      ),\n\n    lastName: Yup.string()\n      .required(\"Last Name required\")\n      .min(2, \"Last name must be at least 2 characters.\")\n      .max(50, \"Last name should be 50 characters.\")\n      .matches(\n        /(?=.*^[A-Za-z]\\w).*$/,\n        \"Last name should only contain alphabet.\"\n      ),\n    username: Yup.string()\n      .required(\"Username is required.\")\n      .min(4, \"Username must be at least 4 characters.\")\n      .max(50, \"Username should be 50 characters.\")\n      .matches(\n        /(?=.*^[A-Za-z_]\\w).*$/,\n        \"Username should begin with _ or alphabet.\"\n      ),\n    password:\n      !edit &&\n      Yup.string()\n        .required(\"Required.\")\n        .min(6, \"Password must be at least 6 characters.\")\n        .matches(\n          /^(?=.*[a-z])(?=.*\\d)[A-Za-z\\d@$!%*#?&]{6,}$/,\n          \"Must Contain 6 Characters, One alphabet and One Number \"\n        ),\n    confirmPassword:\n      !edit &&\n      Yup.string()\n        .required(\"Required.\")\n        .oneOf([Yup.ref(\"password\"), null], \"Passwords must match.\"),\n    email: Yup.string().email(\"@ is required\").required(\"Required.\"),\n\n    office: Yup.object()\n      .typeError(\"Office is required\")\n      .required(\"Office is required\"),\n\n    phone: Yup.string()\n      .required(\"Mobile Number\")\n      .matches(\n        /^[9]\\d{9}$/,\n        \"Mobile number should start with 98 and should be 10 digits.\"\n      ),\n    designation: Yup.string().required(\"Designation Required\"),\n\n    gender: Yup.object()\n      .typeError(\"Gender is required\")\n      .required(\"Gender is required\"),\n    isActive: Yup.bool(),\n    isChecker: Yup.bool(),\n    remarks: Yup.string(),\n  });\n\n  const onSubmit = async (values) => {\n    const {\n      firstName,\n      middleName,\n      lastName,\n      email,\n      username,\n      phone,\n      office,\n      gender,\n      remarks,\n      password,\n      groups,\n      confirmPassword,\n      designation,\n      userPhoto,\n      isActive,\n      isChecker,\n    } = values;\n    const capitalFirstName =\n      firstName?.charAt(0).toUpperCase() + firstName?.slice(1);\n    const capitalMiddleName =\n      middleName?.charAt(0).toUpperCase() + middleName?.slice(1);\n    const capitalLastName =\n      lastName?.charAt(0).toUpperCase() + lastName?.slice(1);\n\n    const updatedGroups = groups?.map((data) => data.id);\n\n    if (edit) {\n      const id = user.id;\n      const updateData = {\n        firstName: capitalFirstName,\n        middleName: capitalMiddleName,\n        lastName: capitalLastName,\n        email,\n        username: username?.charAt(0).toLowerCase() + username?.slice(1),\n        gender: gender !== \"\" ? gender?.id : \"\",\n        office: office ? office?.id : null,\n        designation,\n        groups: updatedGroups,\n        phone,\n        userPhoto,\n        isActive,\n        isChecker,\n        remarks,\n      };\n\n      const result = await dispatch(\n        updateUser(id, updateData, currentPage, postsPerPage)\n      );\n      if (result) {\n        setImg(null);\n        setShowModal(false);\n      } else {\n        setShowModal(true);\n      }\n    } else {\n      const result = await dispatch(\n        createUser(\n          {\n            firstName: capitalFirstName,\n            middleName: capitalMiddleName,\n            lastName: capitalLastName,\n            email,\n            username: username?.charAt(0).toLowerCase() + username?.slice(1),\n            gender: gender !== \"\" ? gender?.id : \"\",\n            office: office ? office?.id : null,\n            groups: updatedGroups,\n            phone,\n            isActive,\n            isChecker,\n            password,\n            designation: designation,\n            confirmPassword,\n            userPhoto,\n            remarks,\n          },\n          currentPage\n        )\n      );\n      if (result) {\n        setImg(null);\n        setShowModal(false);\n      } else {\n        setShowModal(true);\n      }\n    }\n  };\n\n  // function which checks whether the bank is added already or not\n  const handleChange = async (e) => {\n    if (edit && e.target.value !== user?.username) {\n      if (e.target.value.trim() && e.target.value !== \"\") {\n        const result = await checkRedundantDataUser(e);\n        result && errorFunction(\"User name with this  is already added. \");\n      }\n    }\n    if (e.target.value.trim() && e.target.value !== \"\") {\n      const result = await checkRedundantDataUser(e);\n      result && errorFunction(\"User with this name is already added \");\n    }\n  };\n\n  // toggle password\n  const handlePasswordClick = () => {\n    if (password === \"password\") {\n      setPassword(\"text\");\n    } else {\n      setPassword(\"password\");\n    }\n  };\n  // toggle password\n  const handleConfirmClick = () => {\n    if (confirmPassword === \"password\") {\n      setConfirmPassword(\"text\");\n    } else {\n      setConfirmPassword(\"password\");\n    }\n  };\n  return (\n    <>\n      <div className=\"row justify-content-center mt-3\">\n        <div className=\"col-12\">\n          <div className=\"registration-process \">\n            <Formik\n              // enableReinitialize={true}\n              initialValues={initialState}\n              validationSchema={validationSchema}\n              onSubmit={onSubmit}\n            >\n              {(formik) => {\n                const { setFieldValue } = formik;\n                return (\n                  <Form autoComplete=\"off\">\n                    <div className=\"form-group row mb-2 justify-content-center\">\n                      <div className=\" col-4\">\n                        <label\n                          htmlFor=\"firstName\"\n                          className=\"fw-bold float-start\"\n                        >\n                          First Name{\" \"}\n                          <strong className=\"text-danger ml-1\">*</strong>\n                        </label>\n                        <Field\n                          type=\"text\"\n                          name=\"firstName\"\n                          className=\"form-control \"\n                          placeholder=\"First Name\"\n                        />\n                        <ErrorMessage name=\"firstName\" component={TextError} />\n                      </div>\n                      <div className=\" col-4\">\n                        <label\n                          htmlFor=\"middleName\"\n                          className=\"fw-bold float-start\"\n                        >\n                          Middle Name\n                        </label>\n                        <Field\n                          type=\"text\"\n                          name=\"middleName\"\n                          className=\"form-control \"\n                          placeholder=\"Middle Name\"\n                        />\n                        <ErrorMessage name=\"middleName\" component={TextError} />\n                      </div>\n                      <div className=\" col-4\">\n                        <label\n                          htmlFor=\"lastName\"\n                          className=\"fw-bold float-start\"\n                        >\n                          Last Name{\" \"}\n                          <strong className=\"text-danger ml-1\">*</strong>\n                        </label>\n                        <Field\n                          type=\"text\"\n                          name=\"lastName\"\n                          className=\"form-control \"\n                          placeholder=\"Last Name\"\n                        />\n                        <ErrorMessage name=\"lastName\" component={TextError} />\n                      </div>\n                    </div>\n\n                    <div className=\"form-group row mb-2 justify-content-center\">\n                      <div className=\" col-4\">\n                        <label htmlFor=\"email\" className=\"fw-bold float-start\">\n                          Email\n                          <strong className=\"text-danger ml-1\">*</strong>\n                        </label>\n                        <Field\n                          type=\"email\"\n                          name=\"email\"\n                          className=\"form-control \"\n                          placeholder=\"Email\"\n                        />\n                        <ErrorMessage name=\"email\" component={TextError} />\n                      </div>\n                      <div className=\" col-4\">\n                        <label\n                          htmlFor=\"office \"\n                          className=\"fw-bold float-start\"\n                        >\n                          Office\n                          <strong className=\"text-danger ml-1\">*</strong>\n                        </label>\n                        <AsyncPaginate\n                          blurInputOnSelect\n                          value={formik.values.office}\n                          isClearable=\"true\"\n                          isSearchable=\"true\"\n                          name=\"office\"\n                          isDisabled={edit && !(isAdmin || isSuperuser)}\n                          getOptionLabel={(option) => `${option.name}`}\n                          getOptionValue={(option) => `${option?.id}`}\n                          onChange={(selected) => {\n                            setFieldValue(\"office\", selected);\n                          }}\n                          loadOptions={loadOptionsOffice}\n                          additional={{\n                            offset: 0,\n                            limit: 0,\n                          }}\n                          styles={{\n                            border: \"white\",\n                          }}\n                        />\n                        <ErrorMessage name=\"office\" component={TextError} />\n                      </div>\n                      <div className=\" col-4\">\n                        <label htmlFor=\"phone\" className=\"fw-bold float-start\">\n                          Phone\n                          <strong className=\"text-danger ml-1\">*</strong>\n                        </label>\n                        <Field\n                          type=\"text\"\n                          name=\"phone\"\n                          value={formik.values.phone}\n                          className=\"form-control \"\n                          placeholder=\"Mobile No\"\n                          onChange={(e) => {\n                            formik.setFieldValue(\"phone\", e.target.value);\n                          }}\n                        />\n                        <ErrorMessage name=\"phone\" component={TextError} />\n                      </div>\n                    </div>\n                    <div className=\"form-group row mb-2 justify-content-center\">\n                      <div className=\"col-4\">\n                        <label\n                          htmlFor=\"designation\"\n                          className=\"fw-bold float-start\"\n                        >\n                          Designation\n                          <strong className=\"text-danger ml-1\">*</strong>\n                        </label>\n                        <Field\n                          type=\"text\"\n                          name=\"designation\"\n                          className=\"form-control \"\n                          placeholder=\"Designation\"\n                        />\n                        <ErrorMessage\n                          name=\"designation\"\n                          component={TextError}\n                        />\n                      </div>\n                      <div className=\"col-4\">\n                        <label htmlFor=\"gender\" className=\"fw-bold \">\n                          Gender\n                        </label>\n\n                        <Select\n                          value={formik.values.gender}\n                          isClearable=\"true\"\n                          isSearchable=\"true\"\n                          name=\"gender\"\n                          getOptionLabel={(option) => `${option?.name} `}\n                          getOptionValue={(option) => `${option?.id}`}\n                          options={genders}\n                          onChange={(selected) => {\n                            formik.setFieldValue(\"gender\", selected);\n                          }}\n                        />\n                        <ErrorMessage name=\"gender\" component={TextError} />\n                      </div>\n                      <div className=\" col-4 \">\n                        <label\n                          htmlFor=\"userPhoto\"\n                          className=\"fw-bold float-start\"\n                        >\n                          Photo\n                        </label>\n                        <input\n                          type=\"file\"\n                          name=\"userPhoto\"\n                          className=\"form-control\"\n                          onChange={(event) => {\n                            formik.setFieldValue(\n                              \"userPhoto\",\n                              event.target.files[0]\n                            );\n                            let reader = new FileReader();\n                            reader.readAsDataURL(event.target.files[0]);\n                            reader.onloadend = () => setImg([reader.result]);\n                          }}\n                        />\n\n                        {img && <Thumb thumb={img} />}\n                        {user && user.userPhoto && !img && (\n                          <Thumb thumb={user.userPhoto} />\n                        )}\n                        <ErrorMessage name=\"userPhoto\" component={TextError} />\n                      </div>\n                    </div>\n\n                    <div className=\"form-group row mb-2 justify-content-center\">\n                      <div className=\"col-4\">\n                        <label\n                          htmlFor=\"username\"\n                          className=\"fw-bold float-start\"\n                        >\n                          User Name (Case Insensitive)\n                          <strong className=\"text-danger ml-1\">*</strong>\n                        </label>\n\n                        <Field\n                          type=\"text\"\n                          name=\"username\"\n                          className=\"form-control \"\n                          placeholder=\"Username\"\n                          onChange={(e) => {\n                            const val = (e.target.value || \"\").replace(\n                              /\\s+/gi,\n                              \"\"\n                            );\n                            formik.setFieldValue(\"username\", val);\n                            handleChange(e);\n                          }}\n                        />\n                        <ErrorMessage name=\"username\" component={TextError} />\n                      </div>\n\n                      {!edit && (\n                        <>\n                          {\" \"}\n                          <div className=\"col-4 password-field\">\n                            <label\n                              htmlFor=\"password\"\n                              className=\"fw-bold float-start\"\n                            >\n                              Password\n                              <strong className=\"text-danger ml-1\">*</strong>\n                            </label>\n                            <div style={{ position: \"relative\" }}>\n                              <Field\n                                type={password}\n                                name=\"password\"\n                                className=\"form-control\"\n                                placeholder=\"Password\"\n                              />\n\n                              <span onClick={handlePasswordClick}>\n                                {password === \"password\" ? (\n                                  <BsFillEyeSlashFill />\n                                ) : (\n                                  <BsFillEyeFill />\n                                )}\n                              </span>\n                            </div>\n                            <ErrorMessage\n                              name=\"password\"\n                              component={TextError}\n                            />\n                          </div>\n                          <div className=\"col-4 password-field\">\n                            <label\n                              htmlFor=\"confirmPassword\"\n                              className=\"fw-bold float-start\"\n                            >\n                              Confirm Password\n                              <strong className=\"text-danger ml-1\">*</strong>\n                            </label>\n                            <div style={{ position: \"relative\" }}>\n                              <Field\n                                type={confirmPassword}\n                                name=\"confirmPassword\"\n                                className=\"form-control\"\n                                placeholder=\"Confirm Password\"\n                              />\n                              <span onClick={handleConfirmClick}>\n                                {confirmPassword === \"password\" ? (\n                                  <BsFillEyeSlashFill />\n                                ) : (\n                                  <BsFillEyeFill />\n                                )}\n                              </span>\n                            </div>\n                            <ErrorMessage\n                              name=\"confirmPassword\"\n                              component={TextError}\n                            />\n                          </div>\n                        </>\n                      )}\n                    </div>\n                    <div className=\"form-group row mb-2 justify-content-center\">\n                      <div className=\" col-12\">\n                        <label htmlFor=\"groups\" className=\"fw-bold float-start\">\n                          Role\n                        </label>\n                        <AsyncPaginate\n                          blurInputOnSelect\n                          value={formik.values.groups}\n                          isClearable=\"true\"\n                          isSearchable=\"true\"\n                          name=\"groups\"\n                          inputId=\"input\"\n                          isMulti\n                          getOptionLabel={(option) =>\n                            `${option.role || option.name}`\n                          }\n                          getOptionValue={(option) => `${option?.id}`}\n                          onChange={(selected) => {\n                            setFieldValue(\"groups\", selected);\n                          }}\n                          loadOptions={loadOptionsRole}\n                          additional={{\n                            offset: 0,\n                            limit: 10,\n                          }}\n                          styles={{\n                            border: \"white\",\n                          }}\n                        />\n                        <ErrorMessage name=\"groups\" component={TextError} />\n                      </div>\n                    </div>\n                    <div className=\"d-flex justify-content-center my-4\">\n                      <div className=\" text-center\">\n                        <Field\n                          type=\"checkbox\"\n                          name=\"isActive\"\n                          id=\"isActive\"\n                          className=\"filled-in chk-col-blue\"\n                        />\n                        <label htmlFor=\"isActive\" className=\"fw-bold  mx-2\">\n                          {\" \"}\n                          Active\n                        </label>\n                      </div>\n                      {/* <div className=\" text-center\">\n                        <Field\n                          type=\"checkbox\"\n                          name=\"isChecker\"\n                          id=\"isChecker\"\n                          className=\"filled-in chk-col-blue\"\n                        />\n                        <label htmlFor=\"isChecker\" className=\"fw-bold  mx-2\">\n                          {\" \"}\n                          Pass Approved\n                        </label>\n                      </div> */}\n                    </div>\n                    <div className=\"form-group text-center\">\n                      <Button\n                        type={\"submit\"}\n                        className={\"btn btn-primary\"}\n                        loading={loading || loadingUpdated}\n                        disabled={loading || loadingUpdated}\n                        title={edit ? \"Update\" : \"Create\"}\n                        content={\"Add\"}\n                      />\n                    </div>\n                  </Form>\n                );\n              }}\n            </Formik>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\nexport default React.memo(CreateUser);\n","import React, { useState, useEffect, lazy } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport ListingSkeleton from \"../../Component/Skeleton/ListingSkeleton\";\nimport { clearUserData, getUser, handleSearch } from \"../../Redux/User/thunk\";\nimport User from \"./User\";\nimport { defaultLimit } from \"../../utils/defaultLimit\";\nimport { FaPlus } from \"react-icons/fa\";\nimport PaginationLimit from \"../../Component/Pagination/PaginationLimit\";\nimport Tooltip from \"../../Component/Tooltip/Tooltip\";\nimport UpdatedSkeleton from \"../../Component/Skeleton/UpdatedSkeleton\";\n\nimport CreateUser from \"./CreateUser\";\nimport Modal from \"../../Component/Modal\";\n\nconst UserListing = () => {\n  const permissions = useSelector((state) => state.auth.permissions);\n  const isAdmin = useSelector((state) => state.auth.isAdmin);\n  const isSuperuser = useSelector((state) => state.auth.isSuperuser);\n  const { users, edit, loading, count } = useSelector((state) => state.user);\n\n  const loadingUpdated = useSelector((state) => state.user.loadingUpdated);\n\n  const search = useSelector((state) => state.search.search);\n  const dispatch = useDispatch();\n\n  // for pagination\n  const [showModal, setShowModal] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [maxPageNumberLimit, setMaxPageNumberLimit] = useState(5);\n  const [minPageNumberLimit, setMinPageNumberLimit] = useState(0);\n  const [postsPerPage, setPostsPerPage] = useState(10);\n\n  //pagination end\n  //loading all the food\n  useEffect(() => {\n    if (postsPerPage === 0) {\n      if (search === \"\") {\n        dispatch(getUser(count));\n      } else {\n        dispatch(handleSearch(search, count));\n      }\n    } else {\n      if (search === \"\") {\n        if (postsPerPage === defaultLimit) {\n          dispatch(getUser(postsPerPage));\n        } else {\n          setCurrentPage(1);\n          dispatch(getUser(postsPerPage));\n        }\n      } else {\n        setCurrentPage(1);\n        setMaxPageNumberLimit(5);\n        setMinPageNumberLimit(0);\n        dispatch(handleSearch(search, postsPerPage));\n      }\n    }\n  }, [dispatch, postsPerPage, search]);\n\n  const addPermission =\n    permissions.includes(\"can_create_user\" || \"can_update_user\") ||\n    isAdmin ||\n    isSuperuser;\n\n  return (\n    <>\n      <div className=\"user-card\" style={{ backgroundColor: \"white\" }}>\n        <div className=\"header-content\">\n          <h4 className=\"mb-sm-0 fw-normal\">Users Listing</h4>\n        </div>\n        <div\n          className={`${users?.length > 0 ? \"office-card-body\" : \"card-body\"}`}\n        >\n          <div className=\"row m-0 p-0\">\n            {users?.length > 0 && (\n              <>\n                <div className=\"col-6\">\n                  <PaginationLimit\n                    postsPerPage={postsPerPage}\n                    setPostsPerPage={setPostsPerPage}\n                  />\n                </div>\n                <div className=\"col-6 text-right\">\n                  {addPermission && (\n                    <Tooltip content=\"Add\">\n                      <button\n                        type=\"button\"\n                        className=\"btn btn-primary waves-effect waves-light btn-sm float-end\"\n                        onClick={() => setShowModal(true)}\n                      >\n                        <FaPlus className=\"mb-1\" />\n                        &nbsp;Add New\n                      </button>\n                    </Tooltip>\n                  )}\n                </div>\n              </>\n            )}\n          </div>\n          {loading && <ListingSkeleton />}\n          {/* {loadingUpdated && <UpdatedSkeleton />} */}\n          {!loading && !loadingUpdated && (\n            <User\n              currentPage={currentPage}\n              setCurrentPage={setCurrentPage}\n              postsPerPage={postsPerPage}\n              setPostsPerPage={setPostsPerPage}\n              count={count}\n              maxPageNumberLimit={maxPageNumberLimit}\n              setMaxPageNumberLimit={setMaxPageNumberLimit}\n              minPageNumberLimit={minPageNumberLimit}\n              setMinPageNumberLimit={setMinPageNumberLimit}\n              search={search}\n              setShowModal={setShowModal}\n            />\n          )}\n\n          {showModal && (\n            <Modal\n              header={edit ? \"Edit User\" : \"User\"}\n              types={\"user\"}\n              size={\"modal-xl\"}\n              setShowModal={setShowModal}\n              showModal={showModal}\n              edit={edit}\n              clearAction={clearUserData}\n            >\n              <CreateUser\n                setShowModal={setShowModal}\n                showModal={showModal}\n                edit={edit}\n                currentPage={currentPage}\n                postsPerPage={postsPerPage}\n              />\n            </Modal>\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default UserListing;\n","import axiosInstance from \"../../utils/axios\";\n\n//obtaining the paginated data\nexport const getUser = (postsPerPage) =>\n  axiosInstance.get(\n    `api/v1/core-app/users/list?offset=0&limit=${postsPerPage}&ordering=-id`\n  );\n\n//obtaining all data\nexport const getAllUser = () =>\n  axiosInstance.get(`api/v1/core-app/users/list?ordering=-id`);\n\nexport const getCurrentUser = (decoded) =>\n  axiosInstance.get(`api/v1/core-app/users/list/${decoded.user_id}`);\n//obtaining the previous page data from paginated data\nexport const getPrevious = (previous) => axiosInstance.get(previous);\n\n//obtaining the next page data from paginated data\nexport const getNext = (next) => axiosInstance.get(next);\n\n//obtaining the particular page data from paginated data\nexport const getPageUser = (number, postsPerPage) =>\n  axiosInstance.get(\n    `api/v1/core-app/users/list?offset=${\n      (number - 1) * postsPerPage\n    }&limit=${postsPerPage}&ordering=-id`\n  );\n\n//creating function\nexport const createUser = (body) =>\n  axiosInstance.post(`api/v1/core-app/user`, body);\n\n//deleting function\nexport const deleteUser = (id) =>\n  axiosInstance.delete(`api/v1/core-app/user/${id}`);\n\n//update function\nexport const updateUser = (id, body) =>\n  axiosInstance.patch(`api/v1/core-app/user/${id}`, body);\n\n//searching function\nexport const handleSearch = (search, postsPerPage) =>\n  axiosInstance.get(\n    `api/v1/core-app/users/list?offset=0&limit=${postsPerPage}&search=${search}`\n  );\n\n// checking the redundant data\nexport const checkRedundantData = (e, cancelToken) =>\n  axiosInstance.get(\n    `api/v1/core-app/users/list?username=${e.target.value.trim()}`,\n    {\n      cancelToken: cancelToken.token,\n    }\n  );\nexport const checkRedundantEmployeeID = (e, cancelToken) =>\n  axiosInstance.get(\n    `api/v1/core-app/users/list?employee_id=${e.target.value.trim()}`,\n    {\n      cancelToken: cancelToken.token,\n    }\n  );\n//deleting the image\nexport const handleDelete = (id, body) =>\n  axiosInstance.patch(`api/v1/core-app/user/${id}`, body);\n\n//change password\nexport const changeUserPassword = (id, password) =>\n  axiosInstance.patch(`/auth/change-password/${id}`, { password });\n","import axios from \"axios\";\nimport {\n  checkRedundantData,\n  checkRedundantEmployeeID,\n} from \"../../Redux/User/api\";\nlet cancelToken;\nexport const checkRedundantDataUser = async (e) => {\n  //Check if there are any previous pending requests\n  if (typeof cancelToken !== typeof undefined) {\n    cancelToken.cancel(\"Operation canceled due to new request.\");\n  }\n  //Save the cancel token for the current request\n  cancelToken = axios.CancelToken.source();\n  try {\n    const { data } = await checkRedundantData(e, cancelToken);\n    if (data.data.length > 0) {\n      return true;\n    }\n    if (data.data.length <= 0) {\n      return false;\n    }\n  } catch (error) {}\n};\n\nexport const checkRedundantDataID = async (e) => {\n  //Check if there are any previous pending requests\n  if (typeof cancelToken !== typeof undefined) {\n    cancelToken.cancel(\"Operation canceled due to new request.\");\n  }\n  //Save the cancel token for the current request\n  cancelToken = axios.CancelToken.source();\n  try {\n    const { data } = await checkRedundantEmployeeID(e, cancelToken);\n    if (data.data.length > 0) {\n      return true;\n    }\n    if (data.data.length <= 0) {\n      return false;\n    }\n  } catch (error) {}\n};\n"],"names":["officeTypes","id","name","genders","statusTypes","statusTypesReprint","className","height","count","width","thumb","onClick","src","alt","loadingAction","type","userConstants","getUserSuccessAction","data","payload","getUserFailAction","error","createUserSuccessAction","changeUserPasswordSuccessAction","InvalidCharacterError","message","this","prototype","Error","window","atob","bind","InvalidTokenError","getUser","postsPerPage","dispatch","action","API","filteredData","filter","user","isAdmin","results","errorFunction","getPageUser","number","createUser","value","currentPage","firstName","middleName","lastName","email","username","office","gender","password","confirmPassword","isActive","isChecker","userPhoto","phone","signature","designation","groups","body","FormData","append","forEach","group","i","successFunction","updateUser","values","remarks","includes","handleSearch","search","clearUserData","passwordChangeId","useDispatch","history","useHistory","useState","type1","setType1","type2","setType2","validationSchema","Yup","shape","required","matches","confirm_password","oneOf","handleClick1","handleClick2","initialValues","onSubmit","push","changeUserPassword","formik","autoComplete","htmlFor","style","position","placeholder","component","TextError","User","setCurrentPage","setShowModal","maxPageNumberLimit","setMaxPageNumberLimit","minPageNumberLimit","setMinPageNumberLimit","permissions","useSelector","state","auth","isSuperuser","users","next","previous","pageNumberLimit","showPasswordChangeModal","setShowPasswordChangeModal","setPasswordChangeId","addPermission","length","scope","map","fullName","wordBreak","role","Status","active","Tooltip","content","handleEdit","size","handleChangePassword","PaginationBlock","paginate","handleClick","getPrevious","prevState","getNext","NoData","Modal","header","types","showModal","React","loadOptionsOffice","loadOptions","limit","offset","axiosInstance","options","hasMore","additional","loadOptionsRole","CreateUser","loadingUpdated","loading","edit","setPassword","setConfirmPassword","img","setImg","initialState","min","max","typeError","capitalFirstName","charAt","toUpperCase","slice","capitalMiddleName","capitalLastName","updatedGroups","updateData","toLowerCase","handleChange","e","target","trim","checkRedundantDataUser","handlePasswordClick","handleConfirmClick","setFieldValue","blurInputOnSelect","isClearable","isSearchable","isDisabled","getOptionLabel","option","getOptionValue","onChange","selected","styles","border","event","files","reader","FileReader","readAsDataURL","onloadend","result","Thumb","val","replace","inputId","isMulti","Button","disabled","title","setPostsPerPage","useEffect","defaultLimit","backgroundColor","PaginationLimit","ListingSkeleton","clearAction","checkRedundantData","cancelToken","token","cancel","axios"],"sourceRoot":""}